{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport SceneManager from './SceneManager';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      // Anisotropía para mayor nitidez\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots ---\n      hotspotSpritesRef.current = [];\n      if (Array.isArray(currentScene.hotspots)) {\n        currentScene.hotspots.forEach(hotspot => {\n          // Convertir pitch/yaw a coordenadas cartesianas\n          const radius = 500;\n          const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n          const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n          const x = radius * Math.sin(phi) * Math.sin(theta);\n          const y = radius * Math.cos(phi);\n          const z = radius * Math.sin(phi) * Math.cos(theta);\n          const sprite = createHotspotSprite(hotspot, () => {\n            // Navegar si es access\n            if (hotspot.type === 'access' && hotspot.targetSceneId) {\n              // Buscar el índice de la escena destino\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) setCurrentSceneIndex(idx);\n            } else {\n              // Si es otro tipo, podrías mostrar info, etc.\n              setSelectedHotspot(hotspot);\n            }\n          });\n          sprite.position.set(x, y, z);\n          scene.add(sprite);\n          hotspotSpritesRef.current.push(sprite);\n        });\n      }\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      // Buscar intersección con sprites\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const sprite = intersects[0].object;\n        if (sprite.userData && typeof sprite.userData.onClick === 'function') {\n          sprite.userData.onClick();\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let file;\n    if (e.target && e.target.files && e.target.files[0]) {\n      file = e.target.files[0];\n    } else if (e instanceof File) {\n      file = e;\n    } else if (e && e.target && e.target.files) {\n      file = e.target.files[0];\n    }\n    if (!file) return;\n    try {\n      var _uploadRes$data;\n      // Asegura que imageUrl siempre sea un string válido\n      let uploadRes = await api.uploadImage(file);\n      let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n      if (!imageUrl) {\n        throw new Error('No se recibió la URL de la imagen');\n      }\n      const newScene = {\n        name: `Escena ${tour.scenes.length + 1}`,\n        image: imageUrl,\n        hotspots: []\n      };\n      const updatedTour = {\n        ...tour,\n        scenes: [...tour.scenes, newScene]\n      };\n      const savedTour = await api.updateTour(tourId, updatedTour);\n      setTour(savedTour.data ? savedTour.data : savedTour);\n      setCurrentSceneIndex(updatedTour.scenes.length - 1);\n    } catch (err) {\n      console.error('Error subiendo imagen:', err);\n      alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async file => {\n    await handleImageUpload(file);\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const handlePointerDown = event => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - phi * 180 / Math.PI;\n      const yaw = theta * 180 / Math.PI;\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.z, point.x);\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async hotspotData => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Actualizar el tour localmente\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, response];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n  useEffect(() => {\n    window.handleDeleteScene = async () => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== currentSceneIndex);\n      let newIndex = currentSceneIndex;\n      if (currentSceneIndex >= updatedScenes.length) newIndex = updatedScenes.length - 1;\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => {\n      window.handleDeleteScene = undefined;\n    };\n  }, [tour, currentSceneIndex]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      setIsAddingHotspot: () => setPlacementMode(true),\n      onReturn: () => navigate('/hub')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 508,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"JYHPJ4+b4XJ31N0nvMIuD3DW0DU=\", false, function () {\n  return [useNavigate];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                alt: scene.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: scene.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 23\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Haz clic en \\\"Agregar Punto de Acceso\\\" en la vista principal para conectar im\\xE1genes entre s\\xED.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-hotspot\",\n          onClick: () => setIsAddingHotspot && setIsAddingHotspot(true),\n          children: \"\\u2795 Agregar Punto de Acceso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this), scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-delete-scene\",\n          style: {\n            background: '#ef4444',\n            color: '#fff',\n            marginTop: 10\n          },\n          onClick: () => {\n            if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n              if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene();\n            }\n          },\n          children: \"\\uD83D\\uDDD1\\uFE0F Eliminar Escena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), !open && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-toggle-collapsed\",\n      onClick: () => setOpen(true),\n      \"aria-label\": \"Abrir panel de control\",\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","SceneManager","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","fetchTour","response","getTour","data","err","console","current","domElement","contains","removeChild","dispose","firstChild","clientWidth","window","innerWidth","clientHeight","innerHeight","scene","Scene","camera","PerspectiveCamera","position","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","animationId","animate","requestAnimationFrame","update","render","handleResize","w","h","aspect","updateProjectionMatrix","addEventListener","removeEventListener","cancelAnimationFrame","scenes","Array","isArray","length","currentScene","children","remove","geometry","SphereGeometry","textureLoader","TextureLoader","imageUrl","load","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","min","MeshBasicMaterial","side","DoubleSide","sphere","Mesh","add","hotspots","forEach","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","targetSceneId","idx","findIndex","s","String","_id","push","color","dom","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","handleImageUpload","e","file","target","files","File","_uploadRes$data","uploadRes","uploadImage","Error","newScene","name","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","index","Date","now","toString","handlePointerDown","vector","Vector3","unproject","camPos","dir","sub","normalize","acos","atan2","Number","toFixed","style","cursor","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","handleSceneClick","point","radToDeg","saveNewHotspot","sceneId","addHotspot","handleDeleteScene","filter","_","newIndex","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","onReturn","onSave","onCancel","_c","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","id","accept","onChange","display","src","alt","marginTop","confirm","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport SceneManager from './SceneManager';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\n\nfunction TourEditor({ tourId }) {\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (\n        rendererRef.current &&\n        rendererRef.current.domElement &&\n        containerRef.current &&\n        containerRef.current.contains(rendererRef.current.domElement)\n      ) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (\n      !tour ||\n      !sceneRef.current ||\n      !tour.scenes ||\n      !Array.isArray(tour.scenes) ||\n      tour.scenes.length === 0 ||\n      currentSceneIndex === -1 ||\n      !tour.scenes[currentSceneIndex]\n    ) return;\n\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        // Anisotropía para mayor nitidez\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // --- Renderizar Hotspots ---\n        hotspotSpritesRef.current = [];\n        if (Array.isArray(currentScene.hotspots)) {\n          currentScene.hotspots.forEach(hotspot => {\n            // Convertir pitch/yaw a coordenadas cartesianas\n            const radius = 500;\n            const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n            const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n            const x = radius * Math.sin(phi) * Math.sin(theta);\n            const y = radius * Math.cos(phi);\n            const z = radius * Math.sin(phi) * Math.cos(theta);\n            const sprite = createHotspotSprite(hotspot, () => {\n              // Navegar si es access\n              if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                // Buscar el índice de la escena destino\n                const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n                if (idx !== -1) setCurrentSceneIndex(idx);\n              } else {\n                // Si es otro tipo, podrías mostrar info, etc.\n                setSelectedHotspot(hotspot);\n              }\n            });\n            sprite.position.set(x, y, z);\n            scene.add(sprite);\n            hotspotSpritesRef.current.push(sprite);\n          });\n        }\n      },\n      undefined,\n      err => {\n        console.error('Error al cargar la textura:', err, imageUrl);\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      }\n    );\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      // Buscar intersección con sprites\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const sprite = intersects[0].object;\n        if (sprite.userData && typeof sprite.userData.onClick === 'function') {\n          sprite.userData.onClick();\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async (e) => {\n    let file;\n    if (e.target && e.target.files && e.target.files[0]) {\n      file = e.target.files[0];\n    } else if (e instanceof File) {\n      file = e;\n    } else if (e && e.target && e.target.files) {\n      file = e.target.files[0];\n    }\n    if (!file) return;\n\n    try {\n      // Asegura que imageUrl siempre sea un string válido\n      let uploadRes = await api.uploadImage(file);\n      let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\n      if (!imageUrl) {\n        throw new Error('No se recibió la URL de la imagen');\n      }\n      const newScene = {\n        name: `Escena ${tour.scenes.length + 1}`,\n        image: imageUrl,\n        hotspots: []\n      };\n      const updatedTour = {\n        ...tour,\n        scenes: [...tour.scenes, newScene]\n      };\n      const savedTour = await api.updateTour(tourId, updatedTour);\n      setTour(savedTour.data ? savedTour.data : savedTour);\n      setCurrentSceneIndex(updatedTour.scenes.length - 1);\n    } catch (err) {\n      console.error('Error subiendo imagen:', err);\n      alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async (file) => {\n    await handleImageUpload(file);\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async (hotspotData) => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n\n    const handlePointerDown = (event) => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - (phi * 180 / Math.PI);\n      const yaw = theta * 180 / Math.PI;\n\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = (hotspotData) => {\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = (event) => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.z, point.x);\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({ pitch, yaw });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async (hotspotData) => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Actualizar el tour localmente\n      const updatedTour = { ...tour };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, response];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  useEffect(() => {\n    window.handleDeleteScene = async () => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== currentSceneIndex);\n      let newIndex = currentSceneIndex;\n      if (currentSceneIndex >= updatedScenes.length) newIndex = updatedScenes.length - 1;\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => { window.handleDeleteScene = undefined; };\n  }, [tour, currentSceneIndex]);\n\n  if (loading) {\n    return <div className=\"loading\">Cargando tour...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return (\n      <div className=\"tour-editor\">\n        <div ref={containerRef} className=\"three-container\" />\n        <ControlPanel\n          open={panelOpen}\n          setOpen={setPanelOpen}\n          tour={tour}\n          handleDragDropImage={handleDragDropImage}\n          handleImageUpload={handleImageUpload}\n          scenes={[]}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tour-editor\">\n      <div\n        ref={containerRef}\n        className=\"three-container\"\n        onClick={handleSceneClick}\n      />\n      <ControlPanel\n        open={panelOpen}\n        setOpen={setPanelOpen}\n        tour={tour}\n        handleDragDropImage={handleDragDropImage}\n        handleImageUpload={handleImageUpload}\n        scenes={tour.scenes}\n        currentSceneIndex={currentSceneIndex}\n        setCurrentSceneIndex={setCurrentSceneIndex}\n        setIsAddingHotspot={() => setPlacementMode(true)}\n        onReturn={() => navigate('/hub')}\n      />\n      {(selectedHotspot || pendingHotspot) && (\n        <HotspotEditor\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\n          scenes={tour.scenes}\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\n          onCancel={() => {\n            setSelectedHotspot(null);\n            setIsAddingHotspot(false);\n            setPendingHotspot(null);\n          }}\n        />\n      )}\n      {showHotspotModal && newHotspotPosition && (\n        <HotspotCreationModal\n          position={newHotspotPosition}\n          tour={tour}\n          currentSceneIndex={currentSceneIndex}\n          onSave={saveNewHotspot}\n          onCancel={() => {\n            setShowHotspotModal(false);\n            setNewHotspotPosition(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Panel lateral plegable\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn\n}) {\n  return (\n    <>\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\n        <div className=\"panel-header\">\n          <span className=\"panel-title\">Tour Virtual 360°</span>\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\n            {open ? <>&#10094;</> : <>&#10095;</>}\n          </button>\n        </div>\n        {open && (\n          <div className=\"panel-content\">\n            <button\n              className=\"btn-return-hub\"\n              onClick={onReturn}\n              style={{\n                background: '#23272f',\n                color: '#38bdf8',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 0',\n                fontSize: '1rem',\n                fontWeight: 500,\n                marginBottom: 18,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s, color 0.2s'\n              }}\n            >\n              ← Volver al Hub\n            </button>\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\n            <div className=\"panel-section\">\n              <h3>Imágenes 360°</h3>\n              <DragDrop onFileUpload={handleDragDropImage} />\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div className=\"panel-section\">\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\n              {scenes.length === 0 ? (\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\n              ) : (\n                <ul className=\"panel-image-list\">\n                  {scenes.map((scene, idx) => (\n                    <li\n                      key={scene._id || idx}\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\n                      onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}\n                    >\n                      <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\n                      <span>{scene.name}</span>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            <div className=\"panel-section panel-hint\">\n              <span>\n                Haz clic en \"Agregar Punto de Acceso\" en la vista principal para conectar imágenes entre sí.\n              </span>\n            </div>\n            <button\n              className=\"btn-add-hotspot\"\n              onClick={() => setIsAddingHotspot && setIsAddingHotspot(true)}\n            >\n              ➕ Agregar Punto de Acceso\n            </button>\n            {scenes.length > 1 && (\n              <button\n                className=\"btn-delete-scene\"\n                style={{background: '#ef4444', color: '#fff', marginTop: 10}}\n                onClick={() => {\n                  if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                    if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene();\n                  }\n                }}\n              >\n                🗑️ Eliminar Escena\n              </button>\n            )}\n          </div>\n        )}\n      </aside>\n      {!open && (\n        <button\n          className=\"panel-toggle-collapsed\"\n          onClick={() => setOpen(true)}\n          aria-label=\"Abrir panel de control\"\n        >\n          &#10095;\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}