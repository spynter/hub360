{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\TourViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport { TransitionManager, cleanImageFilters } from '../../utils/transitions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n// --- Utilidades y helpers para el visor, igual que en TourEditor ---\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\n// Crea un sprite visual para hotspots (puedes expandirlo si agregas hotspots en el visor)\nfunction createHotspotSprite(hotspot) {\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\nfunction TourViewer() {\n  _s();\n  const {\n    tourId\n  } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n  const transitionManagerRef = useRef(null);\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Invertir dirección de rotación horizontal para que coincida con TourEditor.js\n    controls.rotateSpeed = -0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        // Limpiar filtros de imagen para transiciones suaves\n        cleanImageFilters(texture);\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({\n                color: 0x38bdf8,\n                emissive: 0x0ea5e9,\n                metalness: 0.3,\n                roughness: 0.5\n              });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                // Usar el nuevo sistema de transiciones\n                if (transitionManagerRef.current) {\n                  transitionManagerRef.current.startTransition(getAbsoluteImageUrl(tour.scenes[idx].image), () => {\n                    setCurrentSceneIndex(idx);\n                    loadScene(idx);\n                  });\n                } else {\n                  setCurrentSceneIndex(idx);\n                  loadScene(idx);\n                }\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement) containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile]);\n\n  // Inicializar el sistema de transiciones\n  useEffect(() => {\n    if (sceneRef.current && cameraRef.current && rendererRef.current) {\n      transitionManagerRef.current = new TransitionManager(sceneRef.current, cameraRef.current, rendererRef.current);\n    }\n    return () => {\n      if (transitionManagerRef.current) {\n        transitionManagerRef.current.dispose();\n      }\n    };\n  }, [tour]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: \"Tour no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyro-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `gyro-toggle ${gyroEnabled ? 'active' : ''}`,\n        onClick: requestGyroPermission,\n        title: \"Activar giroscopio\",\n        children: \"\\uD83C\\uDF00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-return\",\n        onClick: () => navigate('/'),\n        children: \"Volver al mapa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n}\n_s(TourViewer, \"aKvkPfd223Lb5Le1RK9OcsfvkK4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TourViewer;\nexport default TourViewer;\nvar _c;\n$RefreshReg$(_c, \"TourViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","api","useParams","useNavigate","TransitionManager","cleanImageFilters","jsxDEV","_jsxDEV","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","isMobileDevice","test","navigator","userAgent","createHotspotSprite","hotspot","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","TourViewer","_s","tourId","tour","setTour","loading","setLoading","error","setError","currentSceneIndex","setCurrentSceneIndex","fade","setFade","pendingSceneIndex","setPendingSceneIndex","containerRef","navigate","cameraRef","sceneRef","rendererRef","isMobile","setIsMobile","gyroEnabled","setGyroEnabled","gyroControls","setGyroControls","transitionManagerRef","fetchTour","response","getTour","data","err","requestGyroPermission","DeviceOrientationEvent","requestPermission","permission","console","scenes","length","current","firstChild","removeChild","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","max","min","deltaY","updateProjectionMatrix","passive","loadScene","index","children","remove","sceneData","geometry","SphereGeometry","textureLoader","TextureLoader","load","colorSpace","undefined","LinearSRGBColorSpace","MeshBasicMaterial","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","forEach","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","hGeo","hMat","MeshStandardMaterial","color","emissive","metalness","roughness","hMesh","isAccessHotspot","hoveredObj","animate","requestAnimationFrame","accessSpheres","traverse","obj","push","t","Date","now","update","render","lastClickTime","dom","getAccessSpheres","arr","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetSceneId","idx","findIndex","s","String","_id","startTransition","onPointerMove","style","cursor","handleResize","aspect","removeEventListener","dispose","disconnect","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/TourViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport { TransitionManager, cleanImageFilters } from '../../utils/transitions';\n\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n// --- Utilidades y helpers para el visor, igual que en TourEditor ---\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\n// Crea un sprite visual para hotspots (puedes expandirlo si agregas hotspots en el visor)\nfunction createHotspotSprite(hotspot) {\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\n\nfunction TourViewer() {\n  const { tourId } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n  const transitionManagerRef = useRef(null);\n\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Invertir dirección de rotación horizontal para que coincida con TourEditor.js\n    controls.rotateSpeed = -0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    // Cargar escena actual\n    const loadScene = (index) => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        // Limpiar filtros de imagen para transiciones suaves\n        cleanImageFilters(texture);\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                // Usar el nuevo sistema de transiciones\n                if (transitionManagerRef.current) {\n                  transitionManagerRef.current.startTransition(\n                    getAbsoluteImageUrl(tour.scenes[idx].image),\n                    () => {\n                      setCurrentSceneIndex(idx);\n                      loadScene(idx);\n                    }\n                  );\n                } else {\n                  setCurrentSceneIndex(idx);\n                  loadScene(idx);\n                }\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement)\n          containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile]);\n\n  // Inicializar el sistema de transiciones\n  useEffect(() => {\n    if (sceneRef.current && cameraRef.current && rendererRef.current) {\n      transitionManagerRef.current = new TransitionManager(\n        sceneRef.current,\n        cameraRef.current,\n        rendererRef.current\n      );\n    }\n    \n    return () => {\n      if (transitionManagerRef.current) {\n        transitionManagerRef.current.dispose();\n      }\n    };\n  }, [tour]);\n\n  if (loading) {\n    return <div className=\"viewer-loading\">Cargando tour...</div>;\n  }\n  if (error) {\n    return <div className=\"viewer-error\">{error}</div>;\n  }\n  if (!tour) {\n    return <div className=\"viewer-error\">Tour no encontrado</div>;\n  }\n\n  return (\n    <div className=\"tour-viewer-container\">\n      <div ref={containerRef} className=\"three-container\"></div>\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <div className=\"gyro-controls\">\n        <button\n          className={`gyro-toggle ${gyroEnabled ? 'active' : ''}`}\n          onClick={requestGyroPermission}\n          title=\"Activar giroscopio\"\n        >\n          🌀\n        </button>\n        <button className=\"btn-return\" onClick={() => navigate('/')}>Volver al mapa</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TourViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}