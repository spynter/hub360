{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n});\n\n// Interceptores para manejar errores globalmente\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport default {\n  // Operaciones CRUD para tours\n  getTours: () => api.get('/tours'),\n  getTour: id => api.get(`/tours/${id}`),\n  createTour: tour => api.post('/tours', tour),\n  updateTour: (id, tour) => api.put(`/tours/${id}`, tour),\n  deleteTour: id => api.delete(`/tours/${id}`),\n  // Subida de imágenes\n  uploadImage: file => {\n    const formData = new FormData();\n    formData.append('image', file);\n    return api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","response","use","error","_error$response","console","data","message","Promise","reject","getTours","get","getTour","id","createTour","tour","post","updateTour","put","deleteTour","delete","uploadImage","file","formData","FormData","append","headers"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n});\r\n\r\n// Interceptores para manejar errores globalmente\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default {\r\n  // Operaciones CRUD para tours\r\n  getTours: () => api.get('/tours'),\r\n  getTour: (id) => api.get(`/tours/${id}`),\r\n  createTour: (tour) => api.post('/tours', tour),\r\n  updateTour: (id, tour) => api.put(`/tours/${id}`, tour),\r\n  deleteTour: (id) => api.delete(`/tours/${id}`),\r\n  \r\n  // Subida de imágenes\r\n  uploadImage: (file) => {\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    return api.post('/upload', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' }\r\n    });\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;AAC5C,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EAAA,IAAAC,eAAA;EACPC,OAAO,CAACF,KAAK,CAAC,YAAY,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBE,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;EAClE,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe;EACb;EACAO,QAAQ,EAAEA,CAAA,KAAMhB,GAAG,CAACiB,GAAG,CAAC,QAAQ,CAAC;EACjCC,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACiB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EACxCC,UAAU,EAAGC,IAAI,IAAKrB,GAAG,CAACsB,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;EAC9CE,UAAU,EAAEA,CAACJ,EAAE,EAAEE,IAAI,KAAKrB,GAAG,CAACwB,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEE,IAAI,CAAC;EACvDI,UAAU,EAAGN,EAAE,IAAKnB,GAAG,CAAC0B,MAAM,CAAC,UAAUP,EAAE,EAAE,CAAC;EAE9C;EACAQ,WAAW,EAAGC,IAAI,IAAK;IACrB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,IAAI,CAAC;IAC9B,OAAO5B,GAAG,CAACsB,IAAI,CAAC,SAAS,EAAEO,QAAQ,EAAE;MACnCG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}