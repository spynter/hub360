{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport SceneManager from './SceneManager';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport './TourEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const data = await api.getTour(tourId);\n        setTour(data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Inicializar escena\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n\n    // Guardar referencias\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    // Funci칩n de animaci칩n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena actual\n  useEffect(() => {\n    if (!tour || !sceneRef.current || currentSceneIndex === -1) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n\n    // Crear esfera para la imagen 360\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\n    geometry.scale(-1, 1, 1); // Invertir para ver desde adentro\n\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(currentScene.image, texture => {\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // Manejar subida de im치genes\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const {\n        imageUrl\n      } = await api.uploadImage(file);\n\n      // Crear nueva escena\n      const newScene = {\n        name: `Escena ${tour.scenes.length + 1}`,\n        image: imageUrl,\n        hotspots: []\n      };\n\n      // Actualizar tour\n      const updatedTour = {\n        ...tour,\n        scenes: [...tour.scenes, newScene]\n      };\n\n      // Guardar en la API\n      const savedTour = await api.updateTour(tourId, updatedTour);\n      setTour(savedTour);\n      setCurrentSceneIndex(savedTour.scenes.length - 1);\n    } catch (err) {\n      console.error('Error subiendo imagen:', err);\n      alert(`Error al subir imagen: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        // Actualizar hotspot existente\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        // A침adir nuevo hotspot\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString() // ID temporal hasta guardar en DB\n        });\n      }\n\n      // Actualizar tour localmente\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n\n      // Guardar en la API\n      await api.updateTour(tourId, updatedTour);\n\n      // Resetear estado\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SceneManager, {\n      scenes: tour.scenes,\n      currentIndex: currentSceneIndex,\n      onSelectScene: setCurrentSceneIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image-upload\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-upload\",\n        onClick: () => document.getElementById('image-upload').click(),\n        children: \"Subir Nueva Escena\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-add-hotspot\",\n        onClick: () => setIsAddingHotspot(true),\n        children: \"A\\xF1adir Hotspot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), (selectedHotspot || isAddingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {},\n      scenes: tour.scenes,\n      onSave: handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(TourEditor, \"8ZT1lh1uzmJYCruSVS1gCLXEsPM=\");\n_c = TourEditor;\nexport default TourEditor;\nvar _c;\n$RefreshReg$(_c, \"TourEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","SceneManager","HotspotEditor","api","jsxDEV","_jsxDEV","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","sceneRef","cameraRef","rendererRef","controlsRef","fetchTour","data","getTour","err","console","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","controls","enableDamping","dampingFactor","rotateSpeed","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","dispose","removeChild","currentScene","scenes","children","length","remove","geometry","SphereGeometry","scale","textureLoader","TextureLoader","load","image","texture","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","undefined","handleImageUpload","e","file","target","files","imageUrl","uploadImage","newScene","name","hotspots","updatedTour","savedTour","updateTour","alert","handleSaveHotspot","hotspotData","updatedScenes","_id","index","findIndex","h","push","Date","now","toString","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","currentIndex","onSelectScene","type","id","accept","onChange","style","display","onClick","document","getElementById","click","hotspot","onSave","onCancel","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport SceneManager from './SceneManager';\r\nimport HotspotEditor from './HotspotEditor';\r\nimport api from '../../services/api';\r\nimport './TourEditor.css';\r\n\r\nfunction TourEditor({ tourId }) {\r\n  const containerRef = useRef();\r\n  const [tour, setTour] = useState(null);\r\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\r\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\r\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Referencias de Three.js\r\n  const sceneRef = useRef();\r\n  const cameraRef = useRef();\r\n  const rendererRef = useRef();\r\n  const controlsRef = useRef();\r\n\r\n  // Cargar tour desde la API\r\n  useEffect(() => {\r\n    const fetchTour = async () => {\r\n      try {\r\n        const data = await api.getTour(tourId);\r\n        setTour(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al cargar el tour');\r\n        setLoading(false);\r\n        console.error(err);\r\n      }\r\n    };\r\n    \r\n    fetchTour();\r\n  }, [tourId]);\r\n\r\n  // Inicializar Three.js\r\n  useEffect(() => {\r\n    if (!tour || loading) return;\r\n    \r\n    // Inicializar escena\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75, \r\n      window.innerWidth / window.innerHeight, \r\n      0.1, \r\n      1000\r\n    );\r\n    camera.position.set(0, 0, 0.1);\r\n    \r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    containerRef.current.appendChild(renderer.domElement);\r\n    \r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.rotateSpeed = 0.5;\r\n    \r\n    // Guardar referencias\r\n    sceneRef.current = scene;\r\n    cameraRef.current = camera;\r\n    rendererRef.current = renderer;\r\n    controlsRef.current = controls;\r\n    \r\n    // Funci칩n de animaci칩n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n    \r\n    // Manejar redimensionamiento\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    // Limpieza\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (rendererRef.current) {\r\n        rendererRef.current.dispose();\r\n        containerRef.current.removeChild(rendererRef.current.domElement);\r\n      }\r\n    };\r\n  }, [tour, loading]);\r\n\r\n  // Cargar la escena actual\r\n  useEffect(() => {\r\n    if (!tour || !sceneRef.current || currentSceneIndex === -1) return;\r\n    \r\n    const scene = sceneRef.current;\r\n    const currentScene = tour.scenes[currentSceneIndex];\r\n    \r\n    // Limpiar escena anterior\r\n    while(scene.children.length > 0) { \r\n      scene.remove(scene.children[0]); \r\n    }\r\n    \r\n    // Crear esfera para la imagen 360\r\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\r\n    geometry.scale(-1, 1, 1); // Invertir para ver desde adentro\r\n    \r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(currentScene.image, texture => {\r\n      const material = new THREE.MeshBasicMaterial({ \r\n        map: texture,\r\n        side: THREE.DoubleSide\r\n      });\r\n      const sphere = new THREE.Mesh(geometry, material);\r\n      scene.add(sphere);\r\n    }, undefined, err => {\r\n      console.error('Error al cargar la textura:', err);\r\n    });\r\n  }, [tour, currentSceneIndex]);\r\n\r\n  // Manejar subida de im치genes\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    \r\n    try {\r\n      const { imageUrl } = await api.uploadImage(file);\r\n      \r\n      // Crear nueva escena\r\n      const newScene = {\r\n        name: `Escena ${tour.scenes.length + 1}`,\r\n        image: imageUrl,\r\n        hotspots: []\r\n      };\r\n      \r\n      // Actualizar tour\r\n      const updatedTour = {\r\n        ...tour,\r\n        scenes: [...tour.scenes, newScene]\r\n      };\r\n      \r\n      // Guardar en la API\r\n      const savedTour = await api.updateTour(tourId, updatedTour);\r\n      setTour(savedTour);\r\n      setCurrentSceneIndex(savedTour.scenes.length - 1);\r\n    } catch (err) {\r\n      console.error('Error subiendo imagen:', err);\r\n      alert(`Error al subir imagen: ${err.error || 'Intente nuevamente'}`);\r\n    }\r\n  };\r\n\r\n  // Guardar hotspot\r\n  const handleSaveHotspot = async (hotspotData) => {\r\n    try {\r\n      const updatedScenes = [...tour.scenes];\r\n      const currentScene = updatedScenes[currentSceneIndex];\r\n      \r\n      if (hotspotData._id) {\r\n        // Actualizar hotspot existente\r\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\r\n        if (index !== -1) {\r\n          currentScene.hotspots[index] = hotspotData;\r\n        }\r\n      } else {\r\n        // A침adir nuevo hotspot\r\n        currentScene.hotspots.push({\r\n          ...hotspotData,\r\n          _id: Date.now().toString() // ID temporal hasta guardar en DB\r\n        });\r\n      }\r\n      \r\n      // Actualizar tour localmente\r\n      const updatedTour = { ...tour, scenes: updatedScenes };\r\n      setTour(updatedTour);\r\n      \r\n      // Guardar en la API\r\n      await api.updateTour(tourId, updatedTour);\r\n      \r\n      // Resetear estado\r\n      setSelectedHotspot(null);\r\n      setIsAddingHotspot(false);\r\n    } catch (err) {\r\n      console.error('Error guardando hotspot:', err);\r\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Cargando tour...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"tour-editor\">\r\n      <div \r\n        ref={containerRef} \r\n        className=\"three-container\"\r\n      />\r\n      \r\n      <SceneManager \r\n        scenes={tour.scenes} \r\n        currentIndex={currentSceneIndex}\r\n        onSelectScene={setCurrentSceneIndex}\r\n      />\r\n      \r\n      <div className=\"editor-controls\">\r\n        <input \r\n          type=\"file\" \r\n          id=\"image-upload\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <button \r\n          className=\"btn-upload\"\r\n          onClick={() => document.getElementById('image-upload').click()}\r\n        >\r\n          Subir Nueva Escena\r\n        </button>\r\n        \r\n        <button \r\n          className=\"btn-add-hotspot\"\r\n          onClick={() => setIsAddingHotspot(true)}\r\n        >\r\n          A침adir Hotspot\r\n        </button>\r\n      </div>\r\n      \r\n      {(selectedHotspot || isAddingHotspot) && (\r\n        <HotspotEditor \r\n          hotspot={selectedHotspot || {}}\r\n          scenes={tour.scenes}\r\n          onSave={handleSaveHotspot}\r\n          onCancel={() => {\r\n            setSelectedHotspot(null);\r\n            setIsAddingHotspot(false);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}