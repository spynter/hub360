{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\TourViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction TourViewer() {\n  _s();\n  const {\n    tourId\n  } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [deviceOrientation, setDeviceOrientation] = useState({\n    alpha: 0,\n    beta: 0,\n    gamma: 0\n  });\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n  useEffect(() => {\n    // Detectar si es dispositivo móvil\n    const checkMobile = () => {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      const mobileRegex = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i;\n      return mobileRegex.test(userAgent);\n    };\n    setIsMobile(checkMobile());\n  }, []);\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({\n                color: 0x38bdf8,\n                emissive: 0x0ea5e9,\n                metalness: 0.3,\n                roughness: 0.5\n              });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      if (isMobile) {\n        // Usar datos del giroscopio para rotar la cámara\n        const {\n          alpha,\n          beta,\n          gamma\n        } = deviceOrientation;\n        if (alpha !== null && beta !== null && gamma !== null) {\n          const alphaRad = THREE.MathUtils.degToRad(alpha);\n          const betaRad = THREE.MathUtils.degToRad(beta);\n          const gammaRad = THREE.MathUtils.degToRad(gamma);\n          // Aplicar rotación basada en el giroscopio con suavizado\n          const targetRotationX = betaRad - Math.PI / 2;\n          const targetRotationY = alphaRad;\n          const targetRotationZ = gammaRad;\n          camera.rotation.x += (targetRotationX - camera.rotation.x) * 0.1;\n          camera.rotation.y += (targetRotationY - camera.rotation.y) * 0.1;\n          camera.rotation.z += (targetRotationZ - camera.rotation.z) * 0.1;\n        }\n      } else {\n        controls.update();\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                // Iniciar animación de transición\n                startTransition(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement) containerRef.current.removeChild(renderer.domElement);\n      }\n      if (isMobile && 'DeviceOrientationEvent' in window) {\n        window.removeEventListener('deviceorientation', handleDeviceOrientation);\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile, deviceOrientation]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (transitioning) return; // Evitar doble trigger\n    const scene = sceneRef.current;\n    const renderer = rendererRef.current;\n    // Capturar textura de la escena actual\n    const renderTarget = new THREE.WebGLRenderTarget(renderer.domElement.width, renderer.domElement.height);\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(scene, cameraRef.current);\n    renderer.setRenderTarget(null);\n    setPrevTexture(renderTarget.texture);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n  }\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: \"Tour no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-return\",\n      onClick: () => navigate('/'),\n      children: \"Volver al mapa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n}\n_s(TourViewer, \"Pm4sMR6NxbDd4ssPiStWlYrCLj0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TourViewer;\nexport default TourViewer;\nvar _c;\n$RefreshReg$(_c, \"TourViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","api","useParams","useNavigate","RadialFadeMaterial","jsxDEV","_jsxDEV","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","TourViewer","_s","tourId","tour","setTour","loading","setLoading","error","setError","currentSceneIndex","setCurrentSceneIndex","fade","setFade","pendingSceneIndex","setPendingSceneIndex","containerRef","navigate","cameraRef","sceneRef","rendererRef","transitioning","setTransitioning","transitionProgress","setTransitionProgress","prevTexture","setPrevTexture","isMobile","setIsMobile","deviceOrientation","setDeviceOrientation","alpha","beta","gamma","fetchTour","response","getTour","data","err","checkMobile","userAgent","navigator","vendor","window","opera","mobileRegex","test","scenes","length","current","firstChild","removeChild","scene","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableDamping","dampingFactor","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","Math","max","min","deltaY","updateProjectionMatrix","passive","loadScene","index","children","remove","sceneData","geometry","SphereGeometry","scale","textureLoader","TextureLoader","load","texture","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","forEach","hotspot","type","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","hGeo","hMat","MeshStandardMaterial","color","emissive","metalness","roughness","hMesh","userData","isAccessHotspot","hoveredObj","animate","requestAnimationFrame","accessSpheres","traverse","obj","push","t","Date","now","alphaRad","betaRad","gammaRad","targetRotationX","PI","targetRotationY","targetRotationZ","rotation","update","render","lastClickTime","dom","getAccessSpheres","arr","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","width","clientY","top","height","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetSceneId","idx","findIndex","s","String","_id","startTransition","onPointerMove","style","cursor","handleResize","aspect","removeEventListener","dispose","handleDeviceOrientation","targetIdx","renderTarget","WebGLRenderTarget","setRenderTarget","startFov","endFov","duration","start","animateZoomOut","ts","progress","setTimeout","currentScene","loader","nextTexture","renderTransition","uniforms","uProgress","value","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/TourViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\n\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction TourViewer() {\n  const { tourId } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [deviceOrientation, setDeviceOrientation] = useState({ alpha: 0, beta: 0, gamma: 0 });\n\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  useEffect(() => {\n    // Detectar si es dispositivo móvil\n    const checkMobile = () => {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      const mobileRegex = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i;\n      return mobileRegex.test(userAgent);\n    };\n    setIsMobile(checkMobile());\n  }, []);\n\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    // Cargar escena actual\n    const loadScene = (index) => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      if (isMobile) {\n        // Usar datos del giroscopio para rotar la cámara\n        const { alpha, beta, gamma } = deviceOrientation;\n        if (alpha !== null && beta !== null && gamma !== null) {\n          const alphaRad = THREE.MathUtils.degToRad(alpha);\n          const betaRad = THREE.MathUtils.degToRad(beta);\n          const gammaRad = THREE.MathUtils.degToRad(gamma);\n          // Aplicar rotación basada en el giroscopio con suavizado\n          const targetRotationX = betaRad - Math.PI / 2;\n          const targetRotationY = alphaRad;\n          const targetRotationZ = gammaRad;\n          camera.rotation.x += (targetRotationX - camera.rotation.x) * 0.1;\n          camera.rotation.y += (targetRotationY - camera.rotation.y) * 0.1;\n          camera.rotation.z += (targetRotationZ - camera.rotation.z) * 0.1;\n        }\n      } else {\n        controls.update();\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                // Iniciar animación de transición\n                startTransition(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement)\n          containerRef.current.removeChild(renderer.domElement);\n      }\n      if (isMobile && 'DeviceOrientationEvent' in window) {\n        window.removeEventListener('deviceorientation', handleDeviceOrientation);\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile, deviceOrientation]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (transitioning) return; // Evitar doble trigger\n    const scene = sceneRef.current;\n    const renderer = rendererRef.current;\n    // Capturar textura de la escena actual\n    const renderTarget = new THREE.WebGLRenderTarget(\n      renderer.domElement.width,\n      renderer.domElement.height\n    );\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(scene, cameraRef.current);\n    renderer.setRenderTarget(null);\n    setPrevTexture(renderTarget.texture);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n  }\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);\n        else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n\n  if (loading) {\n    return <div className=\"viewer-loading\">Cargando tour...</div>;\n  }\n  if (error) {\n    return <div className=\"viewer-error\">{error}</div>;\n  }\n  if (!tour) {\n    return <div className=\"viewer-error\">Tour no encontrado</div>;\n  }\n\n  return (\n    <div className=\"tour-viewer-container\">\n      <div ref={containerRef} className=\"three-container\"></div>\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      {/* Eliminar la sección de scene-selector para que no haya botones de navegación */}\n      <button className=\"btn-return\" onClick={() => navigate('/')}>Volver al mapa</button>\n    </div>\n  );\n}\n\nexport default TourViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}