{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\TourViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\nimport NavigationFeedback from '../common/NavigationFeedback';\nimport { validateAccessHotspot, pitchYawToCartesian, createAccessHotspotUserData, getAbsoluteImageUrl, isMobileDevice } from '../../utils/hotspotUtils';\n\n// Utilidades importadas desde utils/hotspotUtils\n\n// Crea un sprite visual para hotspots (puedes expandirlo si agregas hotspots en el visor)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createHotspotSprite(hotspot) {\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\nfunction TourViewer() {\n  _s();\n  const {\n    tourId\n  } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n  const [navigationInProgress, setNavigationInProgress] = useState(false);\n  const [hotspotFeedback, setHotspotFeedback] = useState(null);\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n\n  // Función mejorada para validar hotspot de acceso usando utilidades compartidas\n  const validateHotspot = hotspot => {\n    return validateAccessHotspot(hotspot, tour.scenes, currentSceneIndex);\n  };\n\n  // Función mejorada para iniciar transición\n  const startTransition = targetIdx => {\n    if (transitioning || navigationInProgress) {\n      console.log('Navegación ya en progreso, ignorando clic');\n      return;\n    }\n    const targetScene = tour.scenes[targetIdx];\n    if (!targetScene) {\n      console.error('Escena destino no encontrada');\n      return;\n    }\n    console.log(`Iniciando transición a escena ${targetIdx}: ${targetScene.name}`);\n    setNavigationInProgress(true);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n\n    // Capturar textura actual para transición\n    if (rendererRef.current && sceneRef.current) {\n      const renderTarget = new THREE.WebGLRenderTarget(rendererRef.current.domElement.width, rendererRef.current.domElement.height);\n      rendererRef.current.setRenderTarget(renderTarget);\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\n      rendererRef.current.setRenderTarget(null);\n      setPrevTexture(renderTarget.texture);\n    }\n  };\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Invertir dirección de rotación horizontal para que coincida con TourEditor.js\n    controls.rotateSpeed = -0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso con mejor validación usando utilidades\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              // Validar que el hotspot tiene un destino válido\n              const validation = validateHotspot(hotspot);\n              if (!validation) {\n                console.warn('Hotspot de acceso inválido:', hotspot);\n                return;\n              }\n              const coords = pitchYawToCartesian(hotspot.pitch, hotspot.yaw, 500);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({\n                color: 0x38bdf8,\n                emissive: 0x0ea5e9,\n                metalness: 0.3,\n                roughness: 0.5\n              });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(coords.x, coords.y, coords.z);\n              hMesh.userData = createAccessHotspotUserData(hotspot, validation.targetScene.name);\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n    loadScene(currentSceneIndex);\n\n    // Animación y hover mejorada\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Detección de clics mejorada\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      if (navigationInProgress) return; // Evitar clics durante navegación\n\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            const validation = validateHotspot(hotspot);\n            if (validation) {\n              // Mostrar feedback visual\n              setHotspotFeedback(`Navegando a: ${obj.userData.targetSceneName}`);\n              setTimeout(() => setHotspotFeedback(null), 2000);\n              startTransition(validation.targetIndex);\n            } else {\n              setHotspotFeedback('Destino no válido');\n              setTimeout(() => setHotspotFeedback(null), 2000);\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n        // Mostrar tooltip con información del destino\n        if (hoveredObj.userData.targetSceneName) {\n          dom.title = `Doble clic para ir a: ${hoveredObj.userData.targetSceneName}`;\n        }\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n        dom.title = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement) containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile, navigationInProgress]);\n\n  // Animación de transición mejorada\n  useEffect(() => {\n    if (!transitioning) return;\n    let frame;\n    function animate() {\n      setTransitionProgress(prev => {\n        const next = Math.min(prev + 0.03, 1); // Transición más suave\n        if (next < 1) {\n          frame = requestAnimationFrame(animate);\n        } else {\n          setTransitioning(false);\n          setPrevTexture(null);\n          setCurrentSceneIndex(pendingSceneIndex);\n          setNavigationInProgress(false);\n        }\n        return next;\n      });\n    }\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }, [transitioning, pendingSceneIndex]);\n\n  // Renderizado de transición mejorado\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress, pendingSceneIndex, tour]);\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: \"Tour no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationFeedback, {\n      hotspotFeedback: hotspotFeedback,\n      navigationInProgress: navigationInProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyro-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `gyro-toggle ${gyroEnabled ? 'active' : ''}`,\n        onClick: requestGyroPermission,\n        title: \"Activar giroscopio\",\n        children: \"\\uD83C\\uDF00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-return\",\n        onClick: () => navigate('/'),\n        children: \"Volver al mapa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n}\n_s(TourViewer, \"E/E3cJbnqlAuE6b3mfRGFehVfDA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TourViewer;\nexport default TourViewer;\nvar _c;\n$RefreshReg$(_c, \"TourViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","api","useParams","useNavigate","RadialFadeMaterial","NavigationFeedback","validateAccessHotspot","pitchYawToCartesian","createAccessHotspotUserData","getAbsoluteImageUrl","isMobileDevice","jsxDEV","_jsxDEV","createHotspotSprite","hotspot","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","TourViewer","_s","tourId","tour","setTour","loading","setLoading","error","setError","currentSceneIndex","setCurrentSceneIndex","fade","setFade","pendingSceneIndex","setPendingSceneIndex","containerRef","navigate","cameraRef","sceneRef","rendererRef","transitioning","setTransitioning","transitionProgress","setTransitionProgress","prevTexture","setPrevTexture","isMobile","setIsMobile","gyroEnabled","setGyroEnabled","gyroControls","setGyroControls","navigationInProgress","setNavigationInProgress","hotspotFeedback","setHotspotFeedback","fetchTour","response","getTour","data","err","requestGyroPermission","DeviceOrientationEvent","requestPermission","permission","console","validateHotspot","scenes","startTransition","targetIdx","log","targetScene","name","current","renderTarget","WebGLRenderTarget","domElement","setRenderTarget","render","length","firstChild","removeChild","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","renderer","WebGLRenderer","antialias","setSize","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","max","min","deltaY","updateProjectionMatrix","passive","loadScene","index","children","remove","sceneData","geometry","SphereGeometry","textureLoader","TextureLoader","load","image","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","MeshBasicMaterial","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","forEach","validation","warn","coords","pitch","yaw","hGeo","hMat","MeshStandardMaterial","color","emissive","metalness","roughness","hMesh","x","y","z","hoveredObj","animate","requestAnimationFrame","accessSpheres","traverse","obj","isAccessHotspot","push","t","Date","now","sin","update","lastClickTime","dom","getAccessSpheres","arr","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetSceneName","setTimeout","targetIndex","onPointerMove","style","cursor","title","handleResize","aspect","removeEventListener","dispose","disconnect","frame","prev","next","cancelAnimationFrame","currentScene","loader","nextTexture","renderTransition","uniforms","uProgress","value","startFov","endFov","duration","start","animateZoomOut","ts","progress","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/TourViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\nimport NavigationFeedback from '../common/NavigationFeedback';\nimport { \n  validateAccessHotspot, \n  pitchYawToCartesian, \n  createAccessHotspotUserData,\n  getAbsoluteImageUrl,\n  isMobileDevice \n} from '../../utils/hotspotUtils';\n\n// Utilidades importadas desde utils/hotspotUtils\n\n// Crea un sprite visual para hotspots (puedes expandirlo si agregas hotspots en el visor)\nfunction createHotspotSprite(hotspot) {\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\n\nfunction TourViewer() {\n  const { tourId } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n  const [navigationInProgress, setNavigationInProgress] = useState(false);\n  const [hotspotFeedback, setHotspotFeedback] = useState(null);\n\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n\n  // Función mejorada para validar hotspot de acceso usando utilidades compartidas\n  const validateHotspot = (hotspot) => {\n    return validateAccessHotspot(hotspot, tour.scenes, currentSceneIndex);\n  };\n\n  // Función mejorada para iniciar transición\n  const startTransition = (targetIdx) => {\n    if (transitioning || navigationInProgress) {\n      console.log('Navegación ya en progreso, ignorando clic');\n      return;\n    }\n\n    const targetScene = tour.scenes[targetIdx];\n    if (!targetScene) {\n      console.error('Escena destino no encontrada');\n      return;\n    }\n\n    console.log(`Iniciando transición a escena ${targetIdx}: ${targetScene.name}`);\n    setNavigationInProgress(true);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n\n    // Capturar textura actual para transición\n    if (rendererRef.current && sceneRef.current) {\n      const renderTarget = new THREE.WebGLRenderTarget(\n        rendererRef.current.domElement.width,\n        rendererRef.current.domElement.height\n      );\n      rendererRef.current.setRenderTarget(renderTarget);\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\n      rendererRef.current.setRenderTarget(null);\n      setPrevTexture(renderTarget.texture);\n    }\n  };\n\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Invertir dirección de rotación horizontal para que coincida con TourEditor.js\n    controls.rotateSpeed = -0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    // Cargar escena actual\n    const loadScene = (index) => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso con mejor validación usando utilidades\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              // Validar que el hotspot tiene un destino válido\n              const validation = validateHotspot(hotspot);\n              if (!validation) {\n                console.warn('Hotspot de acceso inválido:', hotspot);\n                return;\n              }\n\n              const coords = pitchYawToCartesian(hotspot.pitch, hotspot.yaw, 500);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({ \n                color: 0x38bdf8, \n                emissive: 0x0ea5e9, \n                metalness: 0.3, \n                roughness: 0.5 \n              });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(coords.x, coords.y, coords.z);\n              hMesh.userData = createAccessHotspotUserData(hotspot, validation.targetScene.name);\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n\n    loadScene(currentSceneIndex);\n\n    // Animación y hover mejorada\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Detección de clics mejorada\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      if (navigationInProgress) return; // Evitar clics durante navegación\n\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            const validation = validateHotspot(hotspot);\n            if (validation) {\n              // Mostrar feedback visual\n              setHotspotFeedback(`Navegando a: ${obj.userData.targetSceneName}`);\n              setTimeout(() => setHotspotFeedback(null), 2000);\n              \n              startTransition(validation.targetIndex);\n            } else {\n              setHotspotFeedback('Destino no válido');\n              setTimeout(() => setHotspotFeedback(null), 2000);\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n        // Mostrar tooltip con información del destino\n        if (hoveredObj.userData.targetSceneName) {\n          dom.title = `Doble clic para ir a: ${hoveredObj.userData.targetSceneName}`;\n        }\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n        dom.title = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement)\n          containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile, navigationInProgress]);\n\n  // Animación de transición mejorada\n  useEffect(() => {\n    if (!transitioning) return;\n    let frame;\n    function animate() {\n      setTransitionProgress(prev => {\n        const next = Math.min(prev + 0.03, 1); // Transición más suave\n        if (next < 1) {\n          frame = requestAnimationFrame(animate);\n        } else {\n          setTransitioning(false);\n          setPrevTexture(null);\n          setCurrentSceneIndex(pendingSceneIndex);\n          setNavigationInProgress(false);\n        }\n        return next;\n      });\n    }\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }, [transitioning, pendingSceneIndex]);\n\n  // Renderizado de transición mejorado\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    \n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);\n        else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress, pendingSceneIndex, tour]);\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  if (loading) {\n    return <div className=\"viewer-loading\">Cargando tour...</div>;\n  }\n  if (error) {\n    return <div className=\"viewer-error\">{error}</div>;\n  }\n  if (!tour) {\n    return <div className=\"viewer-error\">Tour no encontrado</div>;\n  }\n\n  return (\n    <div className=\"tour-viewer-container\">\n      <div ref={containerRef} className=\"three-container\"></div>\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      \n      {/* Componente de feedback visual de navegación */}\n      <NavigationFeedback \n        hotspotFeedback={hotspotFeedback}\n        navigationInProgress={navigationInProgress}\n      />\n      \n      <div className=\"gyro-controls\">\n        <button\n          className={`gyro-toggle ${gyroEnabled ? 'active' : ''}`}\n          onClick={requestGyroPermission}\n          title=\"Activar giroscopio\"\n        >\n          🌀\n        </button>\n        <button className=\"btn-return\" onClick={() => navigate('/')}>Volver al mapa</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TourViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}