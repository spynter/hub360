{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://6z8k0j86-5000.use2.devtunnels.ms/api'\n});\n\n// Interceptor para agregar token JWT a las peticiones\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptores para manejar errores globalmente\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n\n  // Si el token es inválido, redirigir al login\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default {\n  // Operaciones CRUD para tours\n  getTours: () => api.get('/tours'),\n  getTour: id => api.get(`/tours/${id}`),\n  createTour: tour => api.post('/tours', tour),\n  updateTour: (id, tour) => api.put(`/tours/${id}`, tour),\n  deleteTour: id => api.delete(`/tours/${id}`),\n  // Subida de imágenes\n  uploadImage: file => {\n    const formData = new FormData();\n    formData.append('image', file);\n    return api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n  },\n  addHotspot: (tourId, sceneId, hotspotData) => api.post(`/tours/${tourId}/scenes/${sceneId}/hotspots`, hotspotData),\n  // Generar nueva API key para un tour\n  generateApiKey: tourId => api.post(`/tours/${tourId}/generate-key`).then(res => res.data),\n  // Obtener tour por apiKey para embed\n  getTourByApiKey: apiKey => api.get(`/tours/by-key/${apiKey}`).then(res => res.data),\n  // Productos (tienda)\n  createProduct: product => api.post('/products', product),\n  getProductCountByTour: async tourId => {\n    // Devuelve solo el número de productos asociados a un tour\n    const res = await api.get(`/products/by-tour/${tourId}/count`);\n    return res.data.count || 0;\n  },\n  // Autenticación\n  register: userData => api.post('/auth/register', userData),\n  login: loginData => api.post('/auth/login', loginData)\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","_error$response2","console","data","message","status","removeItem","window","location","href","getTours","get","getTour","id","createTour","tour","post","updateTour","put","deleteTour","delete","uploadImage","file","formData","FormData","append","addHotspot","tourId","sceneId","hotspotData","generateApiKey","then","res","getTourByApiKey","apiKey","createProduct","product","getProductCountByTour","count","register","userData","login","loginData"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://6z8k0j86-5000.use2.devtunnels.ms/api',\n});\n\n// Interceptor para agregar token JWT a las peticiones\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptores para manejar errores globalmente\napi.interceptors.response.use(\n  response => response,\n  error => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    // Si el token es inválido, redirigir al login\n    if (error.response?.status === 401) {\n      localStorage.removeItem('authToken');\n      window.location.href = '/login';\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  // Operaciones CRUD para tours\n  getTours: () => api.get('/tours'),\n  getTour: (id) => api.get(`/tours/${id}`),\n  createTour: (tour) => api.post('/tours', tour),\n  updateTour: (id, tour) => api.put(`/tours/${id}`, tour),\n  deleteTour: (id) => api.delete(`/tours/${id}`),\n  \n  // Subida de imágenes\n  uploadImage: (file) => {\n    const formData = new FormData();\n    formData.append('image', file);\n    return api.post('/upload', formData, {\n      headers: { \n        'Content-Type': 'multipart/form-data',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n  },\n\n  addHotspot: (tourId, sceneId, hotspotData) =>\n    api.post(`/tours/${tourId}/scenes/${sceneId}/hotspots`, hotspotData),\n\n  // Generar nueva API key para un tour\n  generateApiKey: (tourId) =>\n    api.post(`/tours/${tourId}/generate-key`).then(res => res.data),\n\n  // Obtener tour por apiKey para embed\n  getTourByApiKey: (apiKey) =>\n    api.get(`/tours/by-key/${apiKey}`).then(res => res.data),\n\n  // Productos (tienda)\n  createProduct: (product) => api.post('/products', product),\n  getProductCountByTour: async (tourId) => {\n    // Devuelve solo el número de productos asociados a un tour\n    const res = await api.get(`/products/by-tour/${tourId}/count`);\n    return res.data.count || 0;\n  },\n\n  // Autenticación\n  register: (userData) => api.post('/auth/register', userData),\n  login: (loginData) => api.post('/auth/login', loginData),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}