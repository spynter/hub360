{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\GyroscopeTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as THREE from 'three';\nimport './GyroscopeTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GyroscopeTest = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const navigate = useNavigate();\n  const [isGyroscopeSupported, setIsGyroscopeSupported] = useState(false);\n  const [isGyroscopeActive, setIsGyroscopeActive] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Variables para el giroscopio\n  const gyroscopeRef = useRef(null);\n  const animationRef = useRef(null);\n  const rotationRef = useRef({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n\n  // Variables para controles de mouse/touch\n  const isMouseDownRef = useRef(false);\n  const mousePositionRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const lastMousePositionRef = useRef({\n    x: 0,\n    y: 0\n  });\n\n  // Variables para el renderizado\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const sphereRef = useRef(null);\n\n  // Variables para el giroscopio mejorado\n  const initialOrientationRef = useRef(null);\n  const currentOrientationRef = useRef({\n    alpha: 0,\n    beta: 0,\n    gamma: 0\n  });\n  useEffect(() => {\n    // Verificar soporte del giroscopio\n    if ('DeviceOrientationEvent' in window) {\n      setIsGyroscopeSupported(true);\n      initializeScene();\n    } else {\n      setError('Tu dispositivo no soporta el giroscopio');\n      initializeScene(); // Inicializar de todas formas para mouse/touch\n    }\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (gyroscopeRef.current) {\n        window.removeEventListener('deviceorientation', gyroscopeRef.current);\n      }\n    };\n  }, []);\n  const initializeScene = () => {\n    const canvas = canvasRef.current;\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Configurar cámara\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n\n    // Configurar renderer\n    const renderer = new THREE.WebGLRenderer({\n      canvas,\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Crear esfera con la imagen 360°\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\n    geometry.scale(-1, 1, 1); // Invertir la geometría para ver la imagen desde dentro\n\n    // Cargar la imagen local brandshop1.jpg\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load('/brandshop1.jpg', texture => {\n      texture.mapping = THREE.EquirectangularReflectionMapping;\n      const material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n      sphereRef.current = sphere;\n      animate();\n    }, undefined, error => {\n      console.error('Error cargando la imagen:', error);\n      setError('Error al cargar la imagen 360° de la tienda');\n    });\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Agregar controles de mouse/touch (solo cuando el giroscopio no está activo)\n    const canvasElement = canvasRef.current;\n    const handleMouseDown = event => {\n      if (isGyroscopeActive) return; // No permitir mouse/touch cuando giroscopio está activo\n      isMouseDownRef.current = true;\n      const rect = canvasElement.getBoundingClientRect();\n      lastMousePositionRef.current = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n    };\n    const handleMouseMove = event => {\n      if (!isMouseDownRef.current || isGyroscopeActive) return;\n      const rect = canvasElement.getBoundingClientRect();\n      mousePositionRef.current = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n      const deltaX = mousePositionRef.current.x - lastMousePositionRef.current.x;\n      const deltaY = mousePositionRef.current.y - lastMousePositionRef.current.y;\n      const sensitivity = 0.005;\n      rotationRef.current.y += deltaX * sensitivity;\n      rotationRef.current.x += deltaY * sensitivity;\n      lastMousePositionRef.current = {\n        ...mousePositionRef.current\n      };\n    };\n    const handleMouseUp = () => {\n      isMouseDownRef.current = false;\n    };\n\n    // Eventos de mouse\n    canvasElement.addEventListener('mousedown', handleMouseDown);\n    canvasElement.addEventListener('mousemove', handleMouseMove);\n    canvasElement.addEventListener('mouseup', handleMouseUp);\n    canvasElement.addEventListener('mouseleave', handleMouseUp);\n\n    // Eventos de touch\n    canvasElement.addEventListener('touchstart', event => {\n      if (isGyroscopeActive) {\n        event.preventDefault();\n        return;\n      }\n      event.preventDefault();\n      const touch = event.touches[0];\n      handleMouseDown(touch);\n    });\n    canvasElement.addEventListener('touchmove', event => {\n      if (isGyroscopeActive) {\n        event.preventDefault();\n        return;\n      }\n      event.preventDefault();\n      const touch = event.touches[0];\n      handleMouseMove(touch);\n    });\n    canvasElement.addEventListener('touchend', event => {\n      event.preventDefault();\n      handleMouseUp();\n    });\n  };\n  const animate = () => {\n    animationRef.current = requestAnimationFrame(animate);\n    if (sphereRef.current) {\n      // Aplicar rotación siempre\n      sphereRef.current.rotation.x = rotationRef.current.x;\n      sphereRef.current.rotation.y = rotationRef.current.y;\n    }\n    if (rendererRef.current && sceneRef.current && cameraRef.current) {\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\n    }\n  };\n  const startGyroscope = async () => {\n    try {\n      // Intentar solicitar permisos si es necesario\n      if ('DeviceOrientationEvent' in window && 'requestPermission' in DeviceOrientationEvent) {\n        try {\n          const permission = await DeviceOrientationEvent.requestPermission();\n          if (permission !== 'granted') {\n            setError('Permiso denegado para acceder al giroscopio');\n            return;\n          }\n        } catch (err) {\n          console.log('No se requieren permisos explícitos');\n        }\n      }\n      const handleGyroscope = event => {\n        if (event.alpha !== null && event.beta !== null && event.gamma !== null) {\n          // Guardar orientación inicial si es la primera vez\n          if (!initialOrientationRef.current) {\n            initialOrientationRef.current = {\n              alpha: event.alpha,\n              beta: event.beta,\n              gamma: event.gamma\n            };\n            console.log('Orientación inicial establecida:', initialOrientationRef.current);\n          }\n\n          // Calcular la diferencia desde la orientación inicial\n          const deltaAlpha = event.alpha - initialOrientationRef.current.alpha;\n          const deltaBeta = event.beta - initialOrientationRef.current.beta;\n          const deltaGamma = event.gamma - initialOrientationRef.current.gamma;\n\n          // Convertir a radianes y aplicar sensibilidad\n          const sensitivity = 0.02;\n\n          // Rotación Y (horizontal) basada en alpha (rotación del dispositivo)\n          rotationRef.current.y = THREE.MathUtils.degToRad(deltaAlpha) * sensitivity;\n\n          // Rotación X (vertical) basada en beta (inclinación hacia adelante/atrás)\n          rotationRef.current.x = THREE.MathUtils.degToRad(deltaBeta - 90) * sensitivity;\n          console.log('Gyroscope data:', {\n            alpha: event.alpha,\n            beta: event.beta,\n            gamma: event.gamma,\n            deltaAlpha,\n            deltaBeta,\n            rotationX: rotationRef.current.x,\n            rotationY: rotationRef.current.y\n          });\n        }\n      };\n      gyroscopeRef.current = handleGyroscope;\n      window.addEventListener('deviceorientation', handleGyroscope);\n      setIsGyroscopeActive(true);\n      setError(null);\n\n      // Resetear orientación inicial\n      initialOrientationRef.current = null;\n    } catch (error) {\n      console.error('Error starting gyroscope:', error);\n      setError('Error al activar el giroscopio');\n    }\n  };\n  const stopGyroscope = () => {\n    if (gyroscopeRef.current) {\n      window.removeEventListener('deviceorientation', gyroscopeRef.current);\n      gyroscopeRef.current = null;\n    }\n    setIsGyroscopeActive(false);\n    // Mantener la rotación actual, no resetear\n  };\n  const toggleGyroscope = () => {\n    if (isGyroscopeActive) {\n      stopGyroscope();\n    } else {\n      startGyroscope();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gyroscope-test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyroscope-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => navigate('/hub'),\n        children: \"\\u2190 Volver al Hub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tour Virtual - Brands Shop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gyroscope-controls\",\n        children: isGyroscopeSupported ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `gyroscope-btn ${isGyroscopeActive ? 'active' : ''}`,\n          onClick: toggleGyroscope,\n          children: isGyroscopeActive ? '🔄 Detener Giroscopio' : '📱 Activar Giroscopio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"not-supported\",\n          children: \"\\u274C Giroscopio no soportado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"gyroscope-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-label\",\n          children: \"Giroscopio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-value ${isGyroscopeSupported ? 'supported' : 'not-supported'}`,\n          children: isGyroscopeSupported ? '✅ Soportado' : '❌ No soportado'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-label\",\n          children: \"Estado:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-value ${isGyroscopeActive ? 'active' : 'inactive'}`,\n          children: isGyroscopeActive ? '🔄 Activo' : '⏸️ Inactivo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), isGyroscopeActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-label\",\n          children: \"Modo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-value active\",\n          children: \"\\uD83D\\uDCF1 Mover dispositivo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), !isGyroscopeActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-label\",\n          children: \"Modo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-value inactive\",\n          children: \"\\uD83D\\uDDB1\\uFE0F Arrastrar pantalla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(GyroscopeTest, \"u8IfND/hgIzLrWzU8uQT4xm1tB4=\", false, function () {\n  return [useNavigate];\n});\n_c = GyroscopeTest;\nexport default GyroscopeTest;\nvar _c;\n$RefreshReg$(_c, \"GyroscopeTest\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","THREE","jsxDEV","_jsxDEV","GyroscopeTest","_s","canvasRef","navigate","isGyroscopeSupported","setIsGyroscopeSupported","isGyroscopeActive","setIsGyroscopeActive","error","setError","gyroscopeRef","animationRef","rotationRef","x","y","z","isMouseDownRef","mousePositionRef","lastMousePositionRef","sceneRef","cameraRef","rendererRef","sphereRef","initialOrientationRef","currentOrientationRef","alpha","beta","gamma","window","initializeScene","current","cancelAnimationFrame","removeEventListener","canvas","scene","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","Math","min","devicePixelRatio","geometry","SphereGeometry","scale","textureLoader","TextureLoader","load","texture","mapping","EquirectangularReflectionMapping","material","MeshBasicMaterial","map","sphere","Mesh","add","animate","undefined","console","handleResize","aspect","updateProjectionMatrix","addEventListener","canvasElement","handleMouseDown","event","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","deltaX","deltaY","sensitivity","handleMouseUp","preventDefault","touch","touches","requestAnimationFrame","rotation","render","startGyroscope","DeviceOrientationEvent","permission","requestPermission","err","log","handleGyroscope","deltaAlpha","deltaBeta","deltaGamma","MathUtils","degToRad","rotationX","rotationY","stopGyroscope","toggleGyroscope","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/GyroscopeTest.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as THREE from 'three';\r\nimport './GyroscopeTest.css';\r\n\r\nconst GyroscopeTest = () => {\r\n  const canvasRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [isGyroscopeSupported, setIsGyroscopeSupported] = useState(false);\r\n  const [isGyroscopeActive, setIsGyroscopeActive] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Variables para el giroscopio\r\n  const gyroscopeRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n  const rotationRef = useRef({ x: 0, y: 0, z: 0 });\r\n  \r\n  // Variables para controles de mouse/touch\r\n  const isMouseDownRef = useRef(false);\r\n  const mousePositionRef = useRef({ x: 0, y: 0 });\r\n  const lastMousePositionRef = useRef({ x: 0, y: 0 });\r\n\r\n  // Variables para el renderizado\r\n  const sceneRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const sphereRef = useRef(null);\r\n\r\n  // Variables para el giroscopio mejorado\r\n  const initialOrientationRef = useRef(null);\r\n  const currentOrientationRef = useRef({ alpha: 0, beta: 0, gamma: 0 });\r\n\r\n  useEffect(() => {\r\n    // Verificar soporte del giroscopio\r\n    if ('DeviceOrientationEvent' in window) {\r\n      setIsGyroscopeSupported(true);\r\n      initializeScene();\r\n    } else {\r\n      setError('Tu dispositivo no soporta el giroscopio');\r\n      initializeScene(); // Inicializar de todas formas para mouse/touch\r\n    }\r\n\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n      if (gyroscopeRef.current) {\r\n        window.removeEventListener('deviceorientation', gyroscopeRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const initializeScene = () => {\r\n    const canvas = canvasRef.current;\r\n    const scene = new THREE.Scene();\r\n    sceneRef.current = scene;\r\n\r\n    // Configurar cámara\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.set(0, 0, 0.1);\r\n    cameraRef.current = camera;\r\n\r\n    // Configurar renderer\r\n    const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    rendererRef.current = renderer;\r\n\r\n    // Crear esfera con la imagen 360°\r\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\r\n    geometry.scale(-1, 1, 1); // Invertir la geometría para ver la imagen desde dentro\r\n\r\n    // Cargar la imagen local brandshop1.jpg\r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(\r\n      '/brandshop1.jpg',\r\n      (texture) => {\r\n        texture.mapping = THREE.EquirectangularReflectionMapping;\r\n        const material = new THREE.MeshBasicMaterial({ map: texture });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        scene.add(sphere);\r\n        sphereRef.current = sphere;\r\n        animate();\r\n      },\r\n      undefined,\r\n      (error) => {\r\n        console.error('Error cargando la imagen:', error);\r\n        setError('Error al cargar la imagen 360° de la tienda');\r\n      }\r\n    );\r\n\r\n    // Manejar redimensionamiento\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Agregar controles de mouse/touch (solo cuando el giroscopio no está activo)\r\n    const canvasElement = canvasRef.current;\r\n    \r\n    const handleMouseDown = (event) => {\r\n      if (isGyroscopeActive) return; // No permitir mouse/touch cuando giroscopio está activo\r\n      isMouseDownRef.current = true;\r\n      const rect = canvasElement.getBoundingClientRect();\r\n      lastMousePositionRef.current = {\r\n        x: event.clientX - rect.left,\r\n        y: event.clientY - rect.top\r\n      };\r\n    };\r\n\r\n    const handleMouseMove = (event) => {\r\n      if (!isMouseDownRef.current || isGyroscopeActive) return;\r\n      \r\n      const rect = canvasElement.getBoundingClientRect();\r\n      mousePositionRef.current = {\r\n        x: event.clientX - rect.left,\r\n        y: event.clientY - rect.top\r\n      };\r\n\r\n      const deltaX = mousePositionRef.current.x - lastMousePositionRef.current.x;\r\n      const deltaY = mousePositionRef.current.y - lastMousePositionRef.current.y;\r\n\r\n      const sensitivity = 0.005;\r\n      rotationRef.current.y += deltaX * sensitivity;\r\n      rotationRef.current.x += deltaY * sensitivity;\r\n\r\n      lastMousePositionRef.current = { ...mousePositionRef.current };\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      isMouseDownRef.current = false;\r\n    };\r\n\r\n    // Eventos de mouse\r\n    canvasElement.addEventListener('mousedown', handleMouseDown);\r\n    canvasElement.addEventListener('mousemove', handleMouseMove);\r\n    canvasElement.addEventListener('mouseup', handleMouseUp);\r\n    canvasElement.addEventListener('mouseleave', handleMouseUp);\r\n\r\n    // Eventos de touch\r\n    canvasElement.addEventListener('touchstart', (event) => {\r\n      if (isGyroscopeActive) {\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n      event.preventDefault();\r\n      const touch = event.touches[0];\r\n      handleMouseDown(touch);\r\n    });\r\n\r\n    canvasElement.addEventListener('touchmove', (event) => {\r\n      if (isGyroscopeActive) {\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n      event.preventDefault();\r\n      const touch = event.touches[0];\r\n      handleMouseMove(touch);\r\n    });\r\n\r\n    canvasElement.addEventListener('touchend', (event) => {\r\n      event.preventDefault();\r\n      handleMouseUp();\r\n    });\r\n  };\r\n\r\n  const animate = () => {\r\n    animationRef.current = requestAnimationFrame(animate);\r\n    \r\n    if (sphereRef.current) {\r\n      // Aplicar rotación siempre\r\n      sphereRef.current.rotation.x = rotationRef.current.x;\r\n      sphereRef.current.rotation.y = rotationRef.current.y;\r\n    }\r\n    \r\n    if (rendererRef.current && sceneRef.current && cameraRef.current) {\r\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\r\n    }\r\n  };\r\n\r\n  const startGyroscope = async () => {\r\n    try {\r\n      // Intentar solicitar permisos si es necesario\r\n      if ('DeviceOrientationEvent' in window && 'requestPermission' in DeviceOrientationEvent) {\r\n        try {\r\n          const permission = await DeviceOrientationEvent.requestPermission();\r\n          if (permission !== 'granted') {\r\n            setError('Permiso denegado para acceder al giroscopio');\r\n            return;\r\n          }\r\n        } catch (err) {\r\n          console.log('No se requieren permisos explícitos');\r\n        }\r\n      }\r\n\r\n      const handleGyroscope = (event) => {\r\n        if (event.alpha !== null && event.beta !== null && event.gamma !== null) {\r\n          // Guardar orientación inicial si es la primera vez\r\n          if (!initialOrientationRef.current) {\r\n            initialOrientationRef.current = {\r\n              alpha: event.alpha,\r\n              beta: event.beta,\r\n              gamma: event.gamma\r\n            };\r\n            console.log('Orientación inicial establecida:', initialOrientationRef.current);\r\n          }\r\n\r\n          // Calcular la diferencia desde la orientación inicial\r\n          const deltaAlpha = event.alpha - initialOrientationRef.current.alpha;\r\n          const deltaBeta = event.beta - initialOrientationRef.current.beta;\r\n          const deltaGamma = event.gamma - initialOrientationRef.current.gamma;\r\n\r\n          // Convertir a radianes y aplicar sensibilidad\r\n          const sensitivity = 0.02;\r\n          \r\n          // Rotación Y (horizontal) basada en alpha (rotación del dispositivo)\r\n          rotationRef.current.y = THREE.MathUtils.degToRad(deltaAlpha) * sensitivity;\r\n          \r\n          // Rotación X (vertical) basada en beta (inclinación hacia adelante/atrás)\r\n          rotationRef.current.x = THREE.MathUtils.degToRad(deltaBeta - 90) * sensitivity;\r\n\r\n          console.log('Gyroscope data:', {\r\n            alpha: event.alpha,\r\n            beta: event.beta,\r\n            gamma: event.gamma,\r\n            deltaAlpha,\r\n            deltaBeta,\r\n            rotationX: rotationRef.current.x,\r\n            rotationY: rotationRef.current.y\r\n          });\r\n        }\r\n      };\r\n\r\n      gyroscopeRef.current = handleGyroscope;\r\n      window.addEventListener('deviceorientation', handleGyroscope);\r\n      setIsGyroscopeActive(true);\r\n      setError(null);\r\n      \r\n      // Resetear orientación inicial\r\n      initialOrientationRef.current = null;\r\n      \r\n    } catch (error) {\r\n      console.error('Error starting gyroscope:', error);\r\n      setError('Error al activar el giroscopio');\r\n    }\r\n  };\r\n\r\n  const stopGyroscope = () => {\r\n    if (gyroscopeRef.current) {\r\n      window.removeEventListener('deviceorientation', gyroscopeRef.current);\r\n      gyroscopeRef.current = null;\r\n    }\r\n    setIsGyroscopeActive(false);\r\n    // Mantener la rotación actual, no resetear\r\n  };\r\n\r\n  const toggleGyroscope = () => {\r\n    if (isGyroscopeActive) {\r\n      stopGyroscope();\r\n    } else {\r\n      startGyroscope();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gyroscope-test-container\">\r\n      <div className=\"gyroscope-header\">\r\n        <button className=\"back-btn\" onClick={() => navigate('/hub')}>\r\n          ← Volver al Hub\r\n        </button>\r\n        <h1>Tour Virtual - Brands Shop</h1>\r\n        <div className=\"gyroscope-controls\">\r\n          {isGyroscopeSupported ? (\r\n            <button \r\n              className={`gyroscope-btn ${isGyroscopeActive ? 'active' : ''}`}\r\n              onClick={toggleGyroscope}\r\n            >\r\n              {isGyroscopeActive ? '🔄 Detener Giroscopio' : '📱 Activar Giroscopio'}\r\n            </button>\r\n          ) : (\r\n            <span className=\"not-supported\">❌ Giroscopio no soportado</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <span>⚠️</span> {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"canvas-container\">\r\n        <canvas ref={canvasRef} className=\"gyroscope-canvas\" />\r\n      </div>\r\n\r\n      <div className=\"status-info\">\r\n        <div className=\"status-item\">\r\n          <span className=\"status-label\">Giroscopio:</span>\r\n          <span className={`status-value ${isGyroscopeSupported ? 'supported' : 'not-supported'}`}>\r\n            {isGyroscopeSupported ? '✅ Soportado' : '❌ No soportado'}\r\n          </span>\r\n        </div>\r\n        <div className=\"status-item\">\r\n          <span className=\"status-label\">Estado:</span>\r\n          <span className={`status-value ${isGyroscopeActive ? 'active' : 'inactive'}`}>\r\n            {isGyroscopeActive ? '🔄 Activo' : '⏸️ Inactivo'}\r\n          </span>\r\n        </div>\r\n        {isGyroscopeActive && (\r\n          <div className=\"status-item\">\r\n            <span className=\"status-label\">Modo:</span>\r\n            <span className=\"status-value active\">📱 Mover dispositivo</span>\r\n          </div>\r\n        )}\r\n        {!isGyroscopeActive && (\r\n          <div className=\"status-item\">\r\n            <span className=\"status-label\">Modo:</span>\r\n            <span className=\"status-value inactive\">🖱️ Arrastrar pantalla</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GyroscopeTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}