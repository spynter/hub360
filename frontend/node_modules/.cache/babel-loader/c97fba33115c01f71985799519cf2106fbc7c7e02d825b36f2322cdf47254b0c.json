{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\TourViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\n// Hotspot mejorado con efectos visuales similares a Kuula\nfunction createHotspotSprite(hotspot) {\n  const size = 80;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n\n  // Fondo con gradiente\n  const gradient = ctx.createRadialGradient(size / 2, size / 2, 0, size / 2, size / 2, size / 2);\n  gradient.addColorStop(0, 'rgba(56, 189, 248, 0.9)');\n  gradient.addColorStop(0.7, 'rgba(14, 165, 233, 0.7)');\n  gradient.addColorStop(1, 'rgba(14, 165, 233, 0.3)');\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 6, 0, 2 * Math.PI);\n  ctx.fillStyle = gradient;\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 12;\n  ctx.fill();\n\n  // Borde exterior\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#ffffff';\n  ctx.stroke();\n\n  // Borde interior\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 12, 0, 2 * Math.PI);\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n  ctx.stroke();\n\n  // Icono según el tipo\n  if (hotspot.type === 'access') {\n    // Flecha de navegación\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 15);\n    ctx.lineTo(size / 2 + 12, size / 2 + 5);\n    ctx.lineTo(size / 2 - 12, size / 2 + 5);\n    ctx.closePath();\n    ctx.fillStyle = '#ffffff';\n    ctx.fill();\n\n    // Punto central\n    ctx.beginPath();\n    ctx.arc(size / 2, size / 2 + 8, 3, 0, 2 * Math.PI);\n    ctx.fillStyle = '#ffffff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false,\n    transparent: true,\n    opacity: 0.9\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(25, 25, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\nfunction TourViewer() {\n  _s();\n  var _tour$scenes$currentS, _tour$scenes$currentS2;\n  const {\n    tourId\n  } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n  const [showSceneSelector, setShowSceneSelector] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(false);\n  const [fullscreen, setFullscreen] = useState(false);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  const animationRef = useRef();\n  useEffect(() => {\n    setIsMobile(isMobileDevice());\n  }, []);\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n\n  // Navegación con teclado\n  const handleKeyDown = useCallback(event => {\n    if (!tour || !tour.scenes) return;\n    switch (event.key) {\n      case 'ArrowLeft':\n        event.preventDefault();\n        navigateToSceneWithFeedback(currentSceneIndex - 1);\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        navigateToSceneWithFeedback(currentSceneIndex + 1);\n        break;\n      case ' ':\n        event.preventDefault();\n        setAutoRotate(!autoRotate);\n        break;\n      case 'f':\n        event.preventDefault();\n        toggleFullscreen();\n        break;\n      case 'Escape':\n        if (fullscreen) {\n          toggleFullscreen();\n        }\n        break;\n    }\n  }, [tour, currentSceneIndex, autoRotate, fullscreen, navigateToSceneWithFeedback]);\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  // Navegación entre escenas\n  const navigateToScene = useCallback(index => {\n    if (!tour || !tour.scenes || index < 0 || index >= tour.scenes.length) return;\n    if (transitioning) return;\n    startTransition(index);\n  }, [tour, transitioning]);\n\n  // Toggle fullscreen\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      var _containerRef$current;\n      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.requestFullscreen();\n      setFullscreen(true);\n    } else {\n      document.exitFullscreen();\n      setFullscreen(false);\n    }\n  };\n\n  // Transición mejorada\n  const startTransition = useCallback(targetIdx => {\n    if (transitioning) return;\n    const scene = sceneRef.current;\n    const renderer = rendererRef.current;\n    const camera = cameraRef.current;\n    if (!scene || !renderer || !camera) return;\n\n    // Capturar textura de la escena actual\n    const renderTarget = new THREE.WebGLRenderTarget(renderer.domElement.width, renderer.domElement.height);\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(scene, camera);\n    renderer.setRenderTarget(null);\n    setPrevTexture(renderTarget.texture);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n\n    // Animación de transición\n    const startTime = Date.now();\n    const duration = 800; // Duración más larga para transición más suave\n\n    const animateTransition = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      // Easing suave\n      const easedProgress = 1 - Math.pow(1 - progress, 3);\n      setTransitionProgress(easedProgress);\n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(animateTransition);\n      } else {\n        // Finalizar transición\n        setCurrentSceneIndex(targetIdx);\n        setTransitioning(false);\n        setPendingSceneIndex(null);\n        setPrevTexture(null);\n        if (renderTarget) {\n          renderTarget.dispose();\n        }\n      }\n    };\n    animationRef.current = requestAnimationFrame(animateTransition);\n  }, [transitioning]);\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1.0;\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5;\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    controls.autoRotate = autoRotate;\n    controls.autoRotateSpeed = 0.5;\n    controlsRef.current = controls;\n\n    // Zoom con scroll mejorado\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      const zoomSpeed = 0.1;\n      const zoomDelta = e.deltaY > 0 ? -zoomSpeed : zoomSpeed;\n      camera.fov = Math.max(30, Math.min(100, camera.fov + zoomDelta * 10));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        texture.generateMipmaps = false;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots mejorados\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const sprite = createHotspotSprite(hotspot);\n              sprite.position.set(x, y, z);\n              sprite.userData.hotspot = hotspot;\n              sprite.userData.isAccessHotspot = true;\n              scene.add(sprite);\n            }\n          });\n        }\n      });\n    };\n    loadScene(currentSceneIndex);\n\n    // Animación mejorada\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Actualizar controles\n      if (controls) {\n        controls.autoRotate = autoRotate;\n        controls.update();\n      }\n\n      // Animación de hotspots\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) {\n          accessSpheres.push(obj);\n        }\n      });\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.002;\n        accessSpheres.forEach((sphere, index) => {\n          // Animación de pulso\n          let scale = 1.0 + 0.1 * Math.sin(t * 2 + index * 0.5);\n          if (sphere === hoveredObj) {\n            scale *= 1.3;\n            sphere.material.opacity = 1.0;\n          } else {\n            sphere.material.opacity = 0.8 + 0.2 * Math.sin(t + index);\n          }\n          sphere.scale.set(scale, scale, 1);\n\n          // Rotación sutil\n          sphere.rotation.z = t * 0.5 + index * 0.3;\n        });\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Interacción mejorada\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                navigateToScene(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement) containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile, autoRotate, navigateToScene]);\n\n  // Gestos táctiles para navegación móvil\n  useEffect(() => {\n    if (!isMobile || !containerRef.current) return;\n    let startX = 0;\n    let startY = 0;\n    let isSwiping = false;\n    const swipeThreshold = 50;\n    const container = containerRef.current;\n    const handleTouchStart = e => {\n      if (e.touches.length === 1) {\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n        isSwiping = true;\n      }\n    };\n    const handleTouchMove = e => {\n      if (!isSwiping || e.touches.length !== 1) return;\n      const currentX = e.touches[0].clientX;\n      const currentY = e.touches[0].clientY;\n      const deltaX = currentX - startX;\n      const deltaY = currentY - startY;\n\n      // Solo procesar swipe horizontal si es más dominante que el vertical\n      if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > swipeThreshold) {\n        e.preventDefault();\n      }\n    };\n    const handleTouchEnd = e => {\n      if (!isSwiping) return;\n      const endX = e.changedTouches[0].clientX;\n      const endY = e.changedTouches[0].clientY;\n      const deltaX = endX - startX;\n      const deltaY = endY - startY;\n\n      // Swipe horizontal para navegación\n      if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > swipeThreshold) {\n        if (deltaX > 0) {\n          // Swipe derecha - escena anterior\n          navigateToSceneWithFeedback(currentSceneIndex - 1);\n        } else {\n          // Swipe izquierda - escena siguiente\n          navigateToSceneWithFeedback(currentSceneIndex + 1);\n        }\n      }\n      isSwiping = false;\n    };\n    container.addEventListener('touchstart', handleTouchStart, {\n      passive: false\n    });\n    container.addEventListener('touchmove', handleTouchMove, {\n      passive: false\n    });\n    container.addEventListener('touchend', handleTouchEnd, {\n      passive: false\n    });\n    return () => {\n      container.removeEventListener('touchstart', handleTouchStart);\n      container.removeEventListener('touchmove', handleTouchMove);\n      container.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [isMobile, currentSceneIndex, navigateToScene]);\n\n  // Efecto de vibración en móviles para feedback táctil\n  const triggerHapticFeedback = () => {\n    if (navigator.vibrate && isMobile) {\n      navigator.vibrate(50);\n    }\n  };\n\n  // Navegación con feedback háptico\n  const navigateToSceneWithFeedback = useCallback(index => {\n    triggerHapticFeedback();\n    navigateToScene(index);\n  }, [navigateToScene]);\n\n  // Renderizar transición\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      nextTexture.minFilter = THREE.LinearFilter;\n      nextTexture.magFilter = THREE.LinearFilter;\n      nextTexture.generateMipmaps = false;\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        if (material.uniforms && material.uniforms.uProgress) {\n          material.uniforms.uProgress.value = transitionProgress;\n          material.uniforms.uTime.value = Date.now() * 0.001;\n        }\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) {\n          requestAnimationFrame(renderTransition);\n        } else {\n          sceneRef.current.remove(sphere);\n        }\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress, tour, pendingSceneIndex]);\n\n  // Efecto de partículas para transiciones\n  useEffect(() => {\n    if (!transitioning || !containerRef.current) return;\n    const particles = [];\n    const particleCount = 20;\n    for (let i = 0; i < particleCount; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'transition-particle';\n      particle.style.cssText = `\n        position: absolute;\n        width: 4px;\n        height: 4px;\n        background: #38bdf8;\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 200;\n        opacity: 0;\n        animation: particleFloat 1.5s ease-out forwards;\n      `;\n      particle.style.left = Math.random() * 100 + '%';\n      particle.style.top = Math.random() * 100 + '%';\n      particle.style.animationDelay = Math.random() * 0.5 + 's';\n      containerRef.current.appendChild(particle);\n      particles.push(particle);\n    }\n\n    // Limpiar partículas después de la animación\n    const timeout = setTimeout(() => {\n      particles.forEach(particle => {\n        if (particle.parentNode) {\n          particle.parentNode.removeChild(particle);\n        }\n      });\n    }, 2000);\n    return () => {\n      clearTimeout(timeout);\n      particles.forEach(particle => {\n        if (particle.parentNode) {\n          particle.parentNode.removeChild(particle);\n        }\n      });\n    };\n  }, [transitioning]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: \"Tour no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-return\",\n        onClick: () => navigate('/'),\n        children: \"\\u2190 Volver al mapa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${autoRotate ? 'active' : ''}`,\n          onClick: () => setAutoRotate(!autoRotate),\n          title: \"Rotaci\\xF3n autom\\xE1tica (Espacio)\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: toggleFullscreen,\n          title: \"Pantalla completa (F)\",\n          children: fullscreen ? '⛶' : '⛶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${showSceneSelector ? 'active' : ''}`,\n          onClick: () => setShowSceneSelector(!showSceneSelector),\n          title: \"Selector de escenas\",\n          children: \"\\uD83D\\uDCCB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }, this), showSceneSelector && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene-selector\",\n      children: tour.scenes.map((scene, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `scene-btn ${index === currentSceneIndex ? 'active' : ''}`,\n        onClick: () => navigateToSceneWithFeedback(index),\n        disabled: transitioning,\n        children: index + 1\n      }, scene._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-arrows\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-arrow left\",\n        onClick: () => navigateToSceneWithFeedback(currentSceneIndex - 1),\n        disabled: currentSceneIndex === 0 || transitioning,\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-arrow right\",\n        onClick: () => navigateToSceneWithFeedback(currentSceneIndex + 1),\n        disabled: currentSceneIndex === tour.scenes.length - 1 || transitioning,\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scene-title\",\n        children: ((_tour$scenes$currentS = tour.scenes[currentSceneIndex]) === null || _tour$scenes$currentS === void 0 ? void 0 : _tour$scenes$currentS.title) || `Escena ${currentSceneIndex + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scene-description\",\n        children: ((_tour$scenes$currentS2 = tour.scenes[currentSceneIndex]) === null || _tour$scenes$currentS2 === void 0 ? void 0 : _tour$scenes$currentS2.description) || 'Explora esta vista 360°'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${(currentSceneIndex + 1) / tour.scenes.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [currentSceneIndex + 1, \" / \", tour.scenes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyro-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `gyro-toggle ${gyroEnabled ? 'active' : ''}`,\n        onClick: requestGyroPermission,\n        title: \"Activar giroscopio\",\n        children: \"\\uD83C\\uDF00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Usa las flechas del teclado para navegar \\u2022 Espacio para rotaci\\xF3n autom\\xE1tica \\u2022 F para pantalla completa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 663,\n    columnNumber: 5\n  }, this);\n}\n_s(TourViewer, \"d1wl9CbZC3smES1b7kN+qjxCvk0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TourViewer;\nexport default TourViewer;\nvar _c;\n$RefreshReg$(_c, \"TourViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","THREE","OrbitControls","api","useParams","useNavigate","RadialFadeMaterial","jsxDEV","_jsxDEV","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","isMobileDevice","test","navigator","userAgent","createHotspotSprite","hotspot","size","canvas","document","createElement","width","height","ctx","getContext","gradient","createRadialGradient","addColorStop","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","transparent","opacity","sprite","Sprite","scale","set","userData","TourViewer","_s","_tour$scenes$currentS","_tour$scenes$currentS2","tourId","tour","setTour","loading","setLoading","error","setError","currentSceneIndex","setCurrentSceneIndex","fade","setFade","pendingSceneIndex","setPendingSceneIndex","transitioning","setTransitioning","transitionProgress","setTransitionProgress","prevTexture","setPrevTexture","isMobile","setIsMobile","gyroEnabled","setGyroEnabled","gyroControls","setGyroControls","showSceneSelector","setShowSceneSelector","autoRotate","setAutoRotate","fullscreen","setFullscreen","containerRef","navigate","cameraRef","sceneRef","rendererRef","controlsRef","animationRef","fetchTour","response","getTour","data","err","requestGyroPermission","DeviceOrientationEvent","requestPermission","permission","console","handleKeyDown","event","scenes","key","preventDefault","navigateToSceneWithFeedback","toggleFullscreen","addEventListener","removeEventListener","navigateToScene","index","length","startTransition","fullscreenElement","_containerRef$current","current","requestFullscreen","exitFullscreen","targetIdx","scene","renderer","camera","renderTarget","WebGLRenderTarget","domElement","setRenderTarget","render","startTime","Date","now","duration","animateTransition","elapsed","progress","min","easedProgress","pow","requestAnimationFrame","dispose","firstChild","removeChild","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","WebGLRenderer","antialias","alpha","powerPreference","setSize","setPixelRatio","devicePixelRatio","toneMapping","ACESFilmicToneMapping","toneMappingExposure","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","autoRotateSpeed","e","zoomSpeed","zoomDelta","deltaY","fov","max","updateProjectionMatrix","passive","loadScene","children","remove","sceneData","geometry","SphereGeometry","textureLoader","TextureLoader","load","minFilter","LinearFilter","magFilter","generateMipmaps","colorSpace","undefined","LinearSRGBColorSpace","MeshBasicMaterial","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","forEach","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","isAccessHotspot","hoveredObj","animate","update","accessSpheres","traverse","obj","push","t","rotation","lastClickTime","dom","getAccessSpheres","arr","onPointerDown","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetSceneId","idx","findIndex","s","String","_id","onPointerMove","style","cursor","handleResize","aspect","cancelAnimationFrame","disconnect","startX","startY","isSwiping","swipeThreshold","container","handleTouchStart","touches","handleTouchMove","currentX","currentY","deltaX","abs","handleTouchEnd","endX","changedTouches","endY","triggerHapticFeedback","vibrate","currentScene","loader","nextTexture","renderTransition","uniforms","uProgress","value","uTime","particles","particleCount","i","particle","className","cssText","random","animationDelay","timeout","setTimeout","parentNode","clearTimeout","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","disabled","description","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/TourViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\n\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\n// Hotspot mejorado con efectos visuales similares a Kuula\nfunction createHotspotSprite(hotspot) {\n  const size = 80;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  \n  // Fondo con gradiente\n  const gradient = ctx.createRadialGradient(size/2, size/2, 0, size/2, size/2, size/2);\n  gradient.addColorStop(0, 'rgba(56, 189, 248, 0.9)');\n  gradient.addColorStop(0.7, 'rgba(14, 165, 233, 0.7)');\n  gradient.addColorStop(1, 'rgba(14, 165, 233, 0.3)');\n  \n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-6, 0, 2*Math.PI);\n  ctx.fillStyle = gradient;\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 12;\n  ctx.fill();\n  \n  // Borde exterior\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#ffffff';\n  ctx.stroke();\n  \n  // Borde interior\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-12, 0, 2*Math.PI);\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n  ctx.stroke();\n  \n  // Icono según el tipo\n  if (hotspot.type === 'access') {\n    // Flecha de navegación\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-15);\n    ctx.lineTo(size/2+12, size/2+5);\n    ctx.lineTo(size/2-12, size/2+5);\n    ctx.closePath();\n    ctx.fillStyle = '#ffffff';\n    ctx.fill();\n    \n    // Punto central\n    ctx.beginPath();\n    ctx.arc(size/2, size/2+8, 3, 0, 2*Math.PI);\n    ctx.fillStyle = '#ffffff';\n    ctx.fill();\n  }\n  \n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ \n    map: texture, \n    depthTest: false,\n    transparent: true,\n    opacity: 0.9\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(25, 25, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\n\nfunction TourViewer() {\n  const { tourId } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n  const [showSceneSelector, setShowSceneSelector] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(false);\n  const [fullscreen, setFullscreen] = useState(false);\n  \n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  const animationRef = useRef();\n\n  useEffect(() => {\n    setIsMobile(isMobileDevice());\n  }, []);\n\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n\n  // Navegación con teclado\n  const handleKeyDown = useCallback((event) => {\n    if (!tour || !tour.scenes) return;\n    \n    switch(event.key) {\n      case 'ArrowLeft':\n        event.preventDefault();\n        navigateToSceneWithFeedback(currentSceneIndex - 1);\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        navigateToSceneWithFeedback(currentSceneIndex + 1);\n        break;\n      case ' ':\n        event.preventDefault();\n        setAutoRotate(!autoRotate);\n        break;\n      case 'f':\n        event.preventDefault();\n        toggleFullscreen();\n        break;\n      case 'Escape':\n        if (fullscreen) {\n          toggleFullscreen();\n        }\n        break;\n    }\n  }, [tour, currentSceneIndex, autoRotate, fullscreen, navigateToSceneWithFeedback]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  // Navegación entre escenas\n  const navigateToScene = useCallback((index) => {\n    if (!tour || !tour.scenes || index < 0 || index >= tour.scenes.length) return;\n    if (transitioning) return;\n    \n    startTransition(index);\n  }, [tour, transitioning]);\n\n  // Toggle fullscreen\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      containerRef.current?.requestFullscreen();\n      setFullscreen(true);\n    } else {\n      document.exitFullscreen();\n      setFullscreen(false);\n    }\n  };\n\n  // Transición mejorada\n  const startTransition = useCallback((targetIdx) => {\n    if (transitioning) return;\n    \n    const scene = sceneRef.current;\n    const renderer = rendererRef.current;\n    const camera = cameraRef.current;\n    \n    if (!scene || !renderer || !camera) return;\n    \n    // Capturar textura de la escena actual\n    const renderTarget = new THREE.WebGLRenderTarget(\n      renderer.domElement.width,\n      renderer.domElement.height\n    );\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(scene, camera);\n    renderer.setRenderTarget(null);\n    \n    setPrevTexture(renderTarget.texture);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n    \n    // Animación de transición\n    const startTime = Date.now();\n    const duration = 800; // Duración más larga para transición más suave\n    \n    const animateTransition = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      \n      // Easing suave\n      const easedProgress = 1 - Math.pow(1 - progress, 3);\n      setTransitionProgress(easedProgress);\n      \n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(animateTransition);\n      } else {\n        // Finalizar transición\n        setCurrentSceneIndex(targetIdx);\n        setTransitioning(false);\n        setPendingSceneIndex(null);\n        setPrevTexture(null);\n        if (renderTarget) {\n          renderTarget.dispose();\n        }\n      }\n    };\n    \n    animationRef.current = requestAnimationFrame(animateTransition);\n  }, [transitioning]);\n\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    \n    const renderer = new THREE.WebGLRenderer({ \n      antialias: true,\n      alpha: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1.0;\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    \n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5;\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    controls.autoRotate = autoRotate;\n    controls.autoRotateSpeed = 0.5;\n    controlsRef.current = controls;\n    \n    // Zoom con scroll mejorado\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      const zoomSpeed = 0.1;\n      const zoomDelta = e.deltaY > 0 ? -zoomSpeed : zoomSpeed;\n      camera.fov = Math.max(30, Math.min(100, camera.fov + zoomDelta * 10));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    // Cargar escena actual\n    const loadScene = (index) => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      \n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      \n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        texture.generateMipmaps = false;\n        \n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        \n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        \n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots mejorados\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              \n              const sprite = createHotspotSprite(hotspot);\n              sprite.position.set(x, y, z);\n              sprite.userData.hotspot = hotspot;\n              sprite.userData.isAccessHotspot = true;\n              scene.add(sprite);\n            }\n          });\n        }\n      });\n    };\n\n    loadScene(currentSceneIndex);\n\n    // Animación mejorada\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      \n      // Actualizar controles\n      if (controls) {\n        controls.autoRotate = autoRotate;\n        controls.update();\n      }\n      \n      // Animación de hotspots\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) {\n          accessSpheres.push(obj);\n        }\n      });\n      \n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.002;\n        accessSpheres.forEach((sphere, index) => {\n          // Animación de pulso\n          let scale = 1.0 + 0.1 * Math.sin(t * 2 + index * 0.5);\n          if (sphere === hoveredObj) {\n            scale *= 1.3;\n            sphere.material.opacity = 1.0;\n          } else {\n            sphere.material.opacity = 0.8 + 0.2 * Math.sin(t + index);\n          }\n          sphere.scale.set(scale, scale, 1);\n          \n          // Rotación sutil\n          sphere.rotation.z = t * 0.5 + index * 0.3;\n        });\n      }\n      \n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Interacción mejorada\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    \n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    \n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      \n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      \n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        \n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                navigateToScene(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    \n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      \n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      \n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    \n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement)\n          containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile, autoRotate, navigateToScene]);\n\n  // Gestos táctiles para navegación móvil\n  useEffect(() => {\n    if (!isMobile || !containerRef.current) return;\n    \n    let startX = 0;\n    let startY = 0;\n    let isSwiping = false;\n    const swipeThreshold = 50;\n    const container = containerRef.current;\n    \n    const handleTouchStart = (e) => {\n      if (e.touches.length === 1) {\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n        isSwiping = true;\n      }\n    };\n    \n    const handleTouchMove = (e) => {\n      if (!isSwiping || e.touches.length !== 1) return;\n      \n      const currentX = e.touches[0].clientX;\n      const currentY = e.touches[0].clientY;\n      const deltaX = currentX - startX;\n      const deltaY = currentY - startY;\n      \n      // Solo procesar swipe horizontal si es más dominante que el vertical\n      if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > swipeThreshold) {\n        e.preventDefault();\n      }\n    };\n    \n    const handleTouchEnd = (e) => {\n      if (!isSwiping) return;\n      \n      const endX = e.changedTouches[0].clientX;\n      const endY = e.changedTouches[0].clientY;\n      const deltaX = endX - startX;\n      const deltaY = endY - startY;\n      \n             // Swipe horizontal para navegación\n       if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > swipeThreshold) {\n         if (deltaX > 0) {\n           // Swipe derecha - escena anterior\n           navigateToSceneWithFeedback(currentSceneIndex - 1);\n         } else {\n           // Swipe izquierda - escena siguiente\n           navigateToSceneWithFeedback(currentSceneIndex + 1);\n         }\n       }\n      \n      isSwiping = false;\n    };\n    \n    container.addEventListener('touchstart', handleTouchStart, { passive: false });\n    container.addEventListener('touchmove', handleTouchMove, { passive: false });\n    container.addEventListener('touchend', handleTouchEnd, { passive: false });\n    \n    return () => {\n      container.removeEventListener('touchstart', handleTouchStart);\n      container.removeEventListener('touchmove', handleTouchMove);\n      container.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [isMobile, currentSceneIndex, navigateToScene]);\n\n  // Efecto de vibración en móviles para feedback táctil\n  const triggerHapticFeedback = () => {\n    if (navigator.vibrate && isMobile) {\n      navigator.vibrate(50);\n    }\n  };\n\n  // Navegación con feedback háptico\n  const navigateToSceneWithFeedback = useCallback((index) => {\n    triggerHapticFeedback();\n    navigateToScene(index);\n  }, [navigateToScene]);\n\n  // Renderizar transición\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    \n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    \n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      nextTexture.minFilter = THREE.LinearFilter;\n      nextTexture.magFilter = THREE.LinearFilter;\n      nextTexture.generateMipmaps = false;\n      \n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      \n      function renderTransition() {\n        if (material.uniforms && material.uniforms.uProgress) {\n          material.uniforms.uProgress.value = transitionProgress;\n          material.uniforms.uTime.value = Date.now() * 0.001;\n        }\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) {\n          requestAnimationFrame(renderTransition);\n        } else {\n          sceneRef.current.remove(sphere);\n        }\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress, tour, pendingSceneIndex]);\n\n  // Efecto de partículas para transiciones\n  useEffect(() => {\n    if (!transitioning || !containerRef.current) return;\n    \n    const particles = [];\n    const particleCount = 20;\n    \n    for (let i = 0; i < particleCount; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'transition-particle';\n      particle.style.cssText = `\n        position: absolute;\n        width: 4px;\n        height: 4px;\n        background: #38bdf8;\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 200;\n        opacity: 0;\n        animation: particleFloat 1.5s ease-out forwards;\n      `;\n      \n      particle.style.left = Math.random() * 100 + '%';\n      particle.style.top = Math.random() * 100 + '%';\n      particle.style.animationDelay = Math.random() * 0.5 + 's';\n      \n      containerRef.current.appendChild(particle);\n      particles.push(particle);\n    }\n    \n    // Limpiar partículas después de la animación\n    const timeout = setTimeout(() => {\n      particles.forEach(particle => {\n        if (particle.parentNode) {\n          particle.parentNode.removeChild(particle);\n        }\n      });\n    }, 2000);\n    \n    return () => {\n      clearTimeout(timeout);\n      particles.forEach(particle => {\n        if (particle.parentNode) {\n          particle.parentNode.removeChild(particle);\n        }\n      });\n    };\n  }, [transitioning]);\n\n  if (loading) {\n    return <div className=\"viewer-loading\">Cargando tour...</div>;\n  }\n  if (error) {\n    return <div className=\"viewer-error\">{error}</div>;\n  }\n  if (!tour) {\n    return <div className=\"viewer-error\">Tour no encontrado</div>;\n  }\n\n  return (\n    <div className=\"tour-viewer-container\">\n      <div ref={containerRef} className=\"three-container\"></div>\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      \n      {/* Controles principales */}\n      <div className=\"viewer-controls\">\n        <button className=\"btn-return\" onClick={() => navigate('/')}>\n          ← Volver al mapa\n        </button>\n        \n        <div className=\"control-buttons\">\n          <button \n            className={`control-btn ${autoRotate ? 'active' : ''}`}\n            onClick={() => setAutoRotate(!autoRotate)}\n            title=\"Rotación automática (Espacio)\"\n          >\n            🔄\n          </button>\n          \n          <button \n            className=\"control-btn\"\n            onClick={toggleFullscreen}\n            title=\"Pantalla completa (F)\"\n          >\n            {fullscreen ? '⛶' : '⛶'}\n          </button>\n          \n          <button \n            className={`control-btn ${showSceneSelector ? 'active' : ''}`}\n            onClick={() => setShowSceneSelector(!showSceneSelector)}\n            title=\"Selector de escenas\"\n          >\n            📋\n          </button>\n        </div>\n      </div>\n      \n             {/* Selector de escenas */}\n       {showSceneSelector && (\n         <div className=\"scene-selector\">\n           {tour.scenes.map((scene, index) => (\n             <button\n               key={scene._id}\n               className={`scene-btn ${index === currentSceneIndex ? 'active' : ''}`}\n               onClick={() => navigateToSceneWithFeedback(index)}\n               disabled={transitioning}\n             >\n               {index + 1}\n             </button>\n           ))}\n         </div>\n       )}\n      \n             {/* Navegación con flechas */}\n       <div className=\"navigation-arrows\">\n         <button \n           className=\"nav-arrow left\"\n           onClick={() => navigateToSceneWithFeedback(currentSceneIndex - 1)}\n           disabled={currentSceneIndex === 0 || transitioning}\n         >\n           ‹\n         </button>\n         <button \n           className=\"nav-arrow right\"\n           onClick={() => navigateToSceneWithFeedback(currentSceneIndex + 1)}\n           disabled={currentSceneIndex === tour.scenes.length - 1 || transitioning}\n         >\n           ›\n         </button>\n       </div>\n      \n      {/* Información de la escena actual */}\n      <div className=\"scene-info\">\n        <div className=\"scene-title\">\n          {tour.scenes[currentSceneIndex]?.title || `Escena ${currentSceneIndex + 1}`}\n        </div>\n        <div className=\"scene-description\">\n          {tour.scenes[currentSceneIndex]?.description || 'Explora esta vista 360°'}\n        </div>\n      </div>\n\n      {/* Indicador de progreso */}\n      <div className=\"progress-indicator\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\"\n            style={{ width: `${((currentSceneIndex + 1) / tour.scenes.length) * 100}%` }}\n          ></div>\n        </div>\n        <span className=\"progress-text\">\n          {currentSceneIndex + 1} / {tour.scenes.length}\n        </span>\n      </div>\n      \n      {/* Controles de giroscopio */}\n      <div className=\"gyro-controls\">\n        <button\n          className={`gyro-toggle ${gyroEnabled ? 'active' : ''}`}\n          onClick={requestGyroPermission}\n          title=\"Activar giroscopio\"\n        >\n          🌀\n        </button>\n      </div>\n      \n      {/* Instrucciones */}\n      <div className=\"instructions\">\n        <p>Usa las flechas del teclado para navegar • Espacio para rotación automática • F para pantalla completa</p>\n      </div>\n    </div>\n  );\n}\n\nexport default TourViewer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,2CAA2C;AACzE,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,kBAAkB;AACzB,OAAOC,kBAAkB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,mBAAmBA,CAACC,KAAK,EAAE;EAClC,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;EACrB,IAAIA,KAAK,CAACC,UAAU,CAAC,WAAW,CAAC,EAAE;IAAA,IAAAC,qBAAA;IACjC,OAAO,GAAG,EAAAA,qBAAA,GAAAC,OAAO,CAACC,GAAG,CAACC,iBAAiB,cAAAH,qBAAA,uBAA7BA,qBAAA,CAA+BI,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,KAAI,uBAAuB,GAAGN,KAAK,EAAE;EACnG;EACA,OAAOA,KAAK;AACd;AAEA,SAASO,cAAcA,CAAA,EAAG;EACxB,OAAO,yDAAyD,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AAC5F;;AAEA;AACA,SAASC,mBAAmBA,CAACC,OAAO,EAAE;EACpC,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CF,MAAM,CAACG,KAAK,GAAGJ,IAAI;EACnBC,MAAM,CAACI,MAAM,GAAGL,IAAI;EACpB,MAAMM,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAMC,QAAQ,GAAGF,GAAG,CAACG,oBAAoB,CAACT,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,EAAE,CAAC,EAAEA,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,CAAC;EACpFQ,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAE,yBAAyB,CAAC;EACnDF,QAAQ,CAACE,YAAY,CAAC,GAAG,EAAE,yBAAyB,CAAC;EACrDF,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAE,yBAAyB,CAAC;EAEnDJ,GAAG,CAACK,SAAS,CAAC,CAAC;EACfL,GAAG,CAACM,GAAG,CAACZ,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAACa,IAAI,CAACC,EAAE,CAAC;EAC/CR,GAAG,CAACS,SAAS,GAAGP,QAAQ;EACxBF,GAAG,CAACU,WAAW,GAAG,SAAS;EAC3BV,GAAG,CAACW,UAAU,GAAG,EAAE;EACnBX,GAAG,CAACY,IAAI,CAAC,CAAC;;EAEV;EACAZ,GAAG,CAACa,SAAS,GAAG,CAAC;EACjBb,GAAG,CAACc,WAAW,GAAG,SAAS;EAC3Bd,GAAG,CAACe,MAAM,CAAC,CAAC;;EAEZ;EACAf,GAAG,CAACK,SAAS,CAAC,CAAC;EACfL,GAAG,CAACM,GAAG,CAACZ,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,GAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAACa,IAAI,CAACC,EAAE,CAAC;EAChDR,GAAG,CAACa,SAAS,GAAG,CAAC;EACjBb,GAAG,CAACc,WAAW,GAAG,0BAA0B;EAC5Cd,GAAG,CAACe,MAAM,CAAC,CAAC;;EAEZ;EACA,IAAItB,OAAO,CAACuB,IAAI,KAAK,QAAQ,EAAE;IAC7B;IACAhB,GAAG,CAACK,SAAS,CAAC,CAAC;IACfL,GAAG,CAACiB,MAAM,CAACvB,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,GAAC,EAAE,CAAC;IAC7BM,GAAG,CAACkB,MAAM,CAACxB,IAAI,GAAC,CAAC,GAAC,EAAE,EAAEA,IAAI,GAAC,CAAC,GAAC,CAAC,CAAC;IAC/BM,GAAG,CAACkB,MAAM,CAACxB,IAAI,GAAC,CAAC,GAAC,EAAE,EAAEA,IAAI,GAAC,CAAC,GAAC,CAAC,CAAC;IAC/BM,GAAG,CAACmB,SAAS,CAAC,CAAC;IACfnB,GAAG,CAACS,SAAS,GAAG,SAAS;IACzBT,GAAG,CAACY,IAAI,CAAC,CAAC;;IAEV;IACAZ,GAAG,CAACK,SAAS,CAAC,CAAC;IACfL,GAAG,CAACM,GAAG,CAACZ,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAACa,IAAI,CAACC,EAAE,CAAC;IAC1CR,GAAG,CAACS,SAAS,GAAG,SAAS;IACzBT,GAAG,CAACY,IAAI,CAAC,CAAC;EACZ;EAEA,MAAMQ,OAAO,GAAG,IAAIhD,KAAK,CAACiD,aAAa,CAAC1B,MAAM,CAAC;EAC/C,MAAM2B,QAAQ,GAAG,IAAIlD,KAAK,CAACmD,cAAc,CAAC;IACxCC,GAAG,EAAEJ,OAAO;IACZK,SAAS,EAAE,KAAK;IAChBC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMC,MAAM,GAAG,IAAIxD,KAAK,CAACyD,MAAM,CAACP,QAAQ,CAAC;EACzCM,MAAM,CAACE,KAAK,CAACC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3BH,MAAM,CAACI,QAAQ,CAACvC,OAAO,GAAGA,OAAO;EACjC,OAAOmC,MAAM;AACf;AAEA,SAASK,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAG9D,SAAS,CAAC,CAAC;EAC9B,MAAM,CAAC+D,IAAI,EAAEC,OAAO,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACsE,OAAO,EAAEC,UAAU,CAAC,GAAGvE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwE,KAAK,EAAEC,QAAQ,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0E,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3E,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC4E,IAAI,EAAEC,OAAO,CAAC,GAAG7E,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAAC8E,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG/E,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACgF,aAAa,EAAEC,gBAAgB,CAAC,GAAGjF,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkF,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnF,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACoF,WAAW,EAAEC,cAAc,CAAC,GAAGrF,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACsF,QAAQ,EAAEC,WAAW,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACwF,WAAW,EAAEC,cAAc,CAAC,GAAGzF,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0F,YAAY,EAAEC,eAAe,CAAC,GAAG3F,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC4F,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7F,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC8F,UAAU,EAAEC,aAAa,CAAC,GAAG/F,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgG,UAAU,EAAEC,aAAa,CAAC,GAAGjG,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMkG,YAAY,GAAGpG,MAAM,CAAC,CAAC;EAC7B,MAAMqG,QAAQ,GAAG7F,WAAW,CAAC,CAAC;EAC9B,MAAM8F,SAAS,GAAGtG,MAAM,CAAC,CAAC;EAC1B,MAAMuG,QAAQ,GAAGvG,MAAM,CAAC,CAAC;EACzB,MAAMwG,WAAW,GAAGxG,MAAM,CAAC,CAAC;EAC5B,MAAMyG,WAAW,GAAGzG,MAAM,CAAC,CAAC;EAC5B,MAAM0G,YAAY,GAAG1G,MAAM,CAAC,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACdwF,WAAW,CAACrE,cAAc,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,MAAM0G,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtG,GAAG,CAACuG,OAAO,CAACxC,MAAM,CAAC;QAC1CE,OAAO,CAACqC,QAAQ,CAACE,IAAI,CAAC;QACtBrC,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOsC,GAAG,EAAE;QACZpC,QAAQ,CAAC,2BAA2B,CAAC;QACrCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDkC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACtC,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM2C,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,IAAI,OAAOC,sBAAsB,CAACC,iBAAiB,KAAK,UAAU,EAAE;QAClE,MAAMC,UAAU,GAAG,MAAMF,sBAAsB,CAACC,iBAAiB,CAAC,CAAC;QACnE,IAAIC,UAAU,KAAK,SAAS,EAAE;UAC5BxB,cAAc,CAAC,IAAI,CAAC;QACtB;MACF,CAAC,MAAM;QACLA,cAAc,CAAC,IAAI,CAAC;MACtB;IACF,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZK,OAAO,CAAC1C,KAAK,CAAC,4CAA4C,EAAEqC,GAAG,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMM,aAAa,GAAGlH,WAAW,CAAEmH,KAAK,IAAK;IAC3C,IAAI,CAAChD,IAAI,IAAI,CAACA,IAAI,CAACiD,MAAM,EAAE;IAE3B,QAAOD,KAAK,CAACE,GAAG;MACd,KAAK,WAAW;QACdF,KAAK,CAACG,cAAc,CAAC,CAAC;QACtBC,2BAA2B,CAAC9C,iBAAiB,GAAG,CAAC,CAAC;QAClD;MACF,KAAK,YAAY;QACf0C,KAAK,CAACG,cAAc,CAAC,CAAC;QACtBC,2BAA2B,CAAC9C,iBAAiB,GAAG,CAAC,CAAC;QAClD;MACF,KAAK,GAAG;QACN0C,KAAK,CAACG,cAAc,CAAC,CAAC;QACtBxB,aAAa,CAAC,CAACD,UAAU,CAAC;QAC1B;MACF,KAAK,GAAG;QACNsB,KAAK,CAACG,cAAc,CAAC,CAAC;QACtBE,gBAAgB,CAAC,CAAC;QAClB;MACF,KAAK,QAAQ;QACX,IAAIzB,UAAU,EAAE;UACdyB,gBAAgB,CAAC,CAAC;QACpB;QACA;IACJ;EACF,CAAC,EAAE,CAACrD,IAAI,EAAEM,iBAAiB,EAAEoB,UAAU,EAAEE,UAAU,EAAEwB,2BAA2B,CAAC,CAAC;EAElFzH,SAAS,CAAC,MAAM;IACd2B,QAAQ,CAACgG,gBAAgB,CAAC,SAAS,EAAEP,aAAa,CAAC;IACnD,OAAO,MAAMzF,QAAQ,CAACiG,mBAAmB,CAAC,SAAS,EAAER,aAAa,CAAC;EACrE,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMS,eAAe,GAAG3H,WAAW,CAAE4H,KAAK,IAAK;IAC7C,IAAI,CAACzD,IAAI,IAAI,CAACA,IAAI,CAACiD,MAAM,IAAIQ,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAIzD,IAAI,CAACiD,MAAM,CAACS,MAAM,EAAE;IACvE,IAAI9C,aAAa,EAAE;IAEnB+C,eAAe,CAACF,KAAK,CAAC;EACxB,CAAC,EAAE,CAACzD,IAAI,EAAEY,aAAa,CAAC,CAAC;;EAEzB;EACA,MAAMyC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAC/F,QAAQ,CAACsG,iBAAiB,EAAE;MAAA,IAAAC,qBAAA;MAC/B,CAAAA,qBAAA,GAAA/B,YAAY,CAACgC,OAAO,cAAAD,qBAAA,uBAApBA,qBAAA,CAAsBE,iBAAiB,CAAC,CAAC;MACzClC,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLvE,QAAQ,CAAC0G,cAAc,CAAC,CAAC;MACzBnC,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAM8B,eAAe,GAAG9H,WAAW,CAAEoI,SAAS,IAAK;IACjD,IAAIrD,aAAa,EAAE;IAEnB,MAAMsD,KAAK,GAAGjC,QAAQ,CAAC6B,OAAO;IAC9B,MAAMK,QAAQ,GAAGjC,WAAW,CAAC4B,OAAO;IACpC,MAAMM,MAAM,GAAGpC,SAAS,CAAC8B,OAAO;IAEhC,IAAI,CAACI,KAAK,IAAI,CAACC,QAAQ,IAAI,CAACC,MAAM,EAAE;;IAEpC;IACA,MAAMC,YAAY,GAAG,IAAIvI,KAAK,CAACwI,iBAAiB,CAC9CH,QAAQ,CAACI,UAAU,CAAC/G,KAAK,EACzB2G,QAAQ,CAACI,UAAU,CAAC9G,MACtB,CAAC;IACD0G,QAAQ,CAACK,eAAe,CAACH,YAAY,CAAC;IACtCF,QAAQ,CAACM,MAAM,CAACP,KAAK,EAAEE,MAAM,CAAC;IAC9BD,QAAQ,CAACK,eAAe,CAAC,IAAI,CAAC;IAE9BvD,cAAc,CAACoD,YAAY,CAACvF,OAAO,CAAC;IACpC+B,gBAAgB,CAAC,IAAI,CAAC;IACtBE,qBAAqB,CAAC,CAAC,CAAC;IACxBJ,oBAAoB,CAACsD,SAAS,CAAC;;IAE/B;IACA,MAAMS,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5B,MAAMC,QAAQ,GAAG,GAAG,CAAC,CAAC;;IAEtB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,MAAMC,OAAO,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS;MACtC,MAAMM,QAAQ,GAAG/G,IAAI,CAACgH,GAAG,CAACF,OAAO,GAAGF,QAAQ,EAAE,CAAC,CAAC;;MAEhD;MACA,MAAMK,aAAa,GAAG,CAAC,GAAGjH,IAAI,CAACkH,GAAG,CAAC,CAAC,GAAGH,QAAQ,EAAE,CAAC,CAAC;MACnDjE,qBAAqB,CAACmE,aAAa,CAAC;MAEpC,IAAIF,QAAQ,GAAG,CAAC,EAAE;QAChB5C,YAAY,CAAC0B,OAAO,GAAGsB,qBAAqB,CAACN,iBAAiB,CAAC;MACjE,CAAC,MAAM;QACL;QACAvE,oBAAoB,CAAC0D,SAAS,CAAC;QAC/BpD,gBAAgB,CAAC,KAAK,CAAC;QACvBF,oBAAoB,CAAC,IAAI,CAAC;QAC1BM,cAAc,CAAC,IAAI,CAAC;QACpB,IAAIoD,YAAY,EAAE;UAChBA,YAAY,CAACgB,OAAO,CAAC,CAAC;QACxB;MACF;IACF,CAAC;IAEDjD,YAAY,CAAC0B,OAAO,GAAGsB,qBAAqB,CAACN,iBAAiB,CAAC;EACjE,CAAC,EAAE,CAAClE,aAAa,CAAC,CAAC;EAEnBjF,SAAS,CAAC,MAAM;IACd,IAAI,CAACqE,IAAI,IAAI,CAACA,IAAI,CAACiD,MAAM,IAAIjD,IAAI,CAACiD,MAAM,CAACS,MAAM,KAAK,CAAC,EAAE;;IAEvD;IACA,IAAI5B,YAAY,CAACgC,OAAO,EAAE;MACxB,OAAOhC,YAAY,CAACgC,OAAO,CAACwB,UAAU,EAAE;QACtCxD,YAAY,CAACgC,OAAO,CAACyB,WAAW,CAACzD,YAAY,CAACgC,OAAO,CAACwB,UAAU,CAAC;MACnE;IACF;;IAEA;IACA,MAAMpB,KAAK,GAAG,IAAIpI,KAAK,CAAC0J,KAAK,CAAC,CAAC;IAC/B,MAAMpB,MAAM,GAAG,IAAItI,KAAK,CAAC2J,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjGxB,MAAM,CAACyB,QAAQ,CAACpG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAC9BuC,SAAS,CAAC8B,OAAO,GAAGM,MAAM;IAC1BnC,QAAQ,CAAC6B,OAAO,GAAGI,KAAK;IAExB,MAAMC,QAAQ,GAAG,IAAIrI,KAAK,CAACgK,aAAa,CAAC;MACvCC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,IAAI;MACXC,eAAe,EAAE;IACnB,CAAC,CAAC;IACF9B,QAAQ,CAAC+B,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDzB,QAAQ,CAACgC,aAAa,CAAClI,IAAI,CAACgH,GAAG,CAACS,MAAM,CAACU,gBAAgB,EAAE,CAAC,CAAC,CAAC;IAC5DjC,QAAQ,CAACkC,WAAW,GAAGvK,KAAK,CAACwK,qBAAqB;IAClDnC,QAAQ,CAACoC,mBAAmB,GAAG,GAAG;IAClCrE,WAAW,CAAC4B,OAAO,GAAGK,QAAQ;IAC9BrC,YAAY,CAACgC,OAAO,CAAC0C,WAAW,CAACrC,QAAQ,CAACI,UAAU,CAAC;IAErD,IAAIkC,QAAQ,GAAG,IAAI1K,aAAa,CAACqI,MAAM,EAAED,QAAQ,CAACI,UAAU,CAAC;IAC7DkC,QAAQ,CAACC,aAAa,GAAG,IAAI;IAC7BD,QAAQ,CAACE,aAAa,GAAG,IAAI;IAC7BF,QAAQ,CAACG,WAAW,GAAG,CAAC,GAAG;IAC3BH,QAAQ,CAACI,UAAU,GAAG,IAAI;IAC1BJ,QAAQ,CAACK,WAAW,GAAG,IAAI;IAC3BL,QAAQ,CAACM,WAAW,GAAG,GAAG;IAC1BN,QAAQ,CAAC/E,UAAU,GAAGA,UAAU;IAChC+E,QAAQ,CAACO,eAAe,GAAG,GAAG;IAC9B7E,WAAW,CAAC2B,OAAO,GAAG2C,QAAQ;;IAE9B;IACAtC,QAAQ,CAACI,UAAU,CAACjB,gBAAgB,CAAC,OAAO,EAAG2D,CAAC,IAAK;MACnDA,CAAC,CAAC9D,cAAc,CAAC,CAAC;MAClB,MAAM+D,SAAS,GAAG,GAAG;MACrB,MAAMC,SAAS,GAAGF,CAAC,CAACG,MAAM,GAAG,CAAC,GAAG,CAACF,SAAS,GAAGA,SAAS;MACvD9C,MAAM,CAACiD,GAAG,GAAGpJ,IAAI,CAACqJ,GAAG,CAAC,EAAE,EAAErJ,IAAI,CAACgH,GAAG,CAAC,GAAG,EAAEb,MAAM,CAACiD,GAAG,GAAGF,SAAS,GAAG,EAAE,CAAC,CAAC;MACrE/C,MAAM,CAACmD,sBAAsB,CAAC,CAAC;IACjC,CAAC,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC;;IAEtB;IACA,MAAMC,SAAS,GAAIhE,KAAK,IAAK;MAC3B;MACA,OAAOS,KAAK,CAACwD,QAAQ,CAAChE,MAAM,GAAG,CAAC,EAAE;QAChCQ,KAAK,CAACyD,MAAM,CAACzD,KAAK,CAACwD,QAAQ,CAAC,CAAC,CAAC,CAAC;MACjC;MAEA,MAAME,SAAS,GAAG5H,IAAI,CAACiD,MAAM,CAACQ,KAAK,CAAC;MACpC,MAAMoE,QAAQ,GAAG,IAAI/L,KAAK,CAACgM,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;MACvDD,QAAQ,CAACrI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAExB,MAAMuI,aAAa,GAAG,IAAIjM,KAAK,CAACkM,aAAa,CAAC,CAAC;MAC/CD,aAAa,CAACE,IAAI,CAAC3L,mBAAmB,CAACsL,SAAS,CAACrL,KAAK,CAAC,EAAEuC,OAAO,IAAI;QAClEA,OAAO,CAACoJ,SAAS,GAAGpM,KAAK,CAACqM,YAAY;QACtCrJ,OAAO,CAACsJ,SAAS,GAAGtM,KAAK,CAACqM,YAAY;QACtCrJ,OAAO,CAACuJ,eAAe,GAAG,KAAK;QAE/B,IAAIvJ,OAAO,CAACwJ,UAAU,KAAKC,SAAS,IAAIzM,KAAK,CAAC0M,oBAAoB,EAAE;UAClE1J,OAAO,CAACwJ,UAAU,GAAGxM,KAAK,CAAC0M,oBAAoB;QACjD;QAEA,MAAMxJ,QAAQ,GAAG,IAAIlD,KAAK,CAAC2M,iBAAiB,CAAC;UAC3CvJ,GAAG,EAAEJ,OAAO;UACZ4J,IAAI,EAAE5M,KAAK,CAAC6M;QACd,CAAC,CAAC;QAEF,MAAMC,MAAM,GAAG,IAAI9M,KAAK,CAAC+M,IAAI,CAAChB,QAAQ,EAAE7I,QAAQ,CAAC;QACjDkF,KAAK,CAAC4E,GAAG,CAACF,MAAM,CAAC;;QAEjB;QACA,IAAIG,KAAK,CAACC,OAAO,CAACpB,SAAS,CAACqB,QAAQ,CAAC,EAAE;UACrCrB,SAAS,CAACqB,QAAQ,CAACC,OAAO,CAAC/L,OAAO,IAAI;YACpC,IAAIA,OAAO,CAACuB,IAAI,KAAK,QAAQ,EAAE;cAC7B,MAAMyK,MAAM,GAAG,GAAG;cAClB,MAAMC,GAAG,GAAGtN,KAAK,CAACuN,SAAS,CAACC,QAAQ,CAAC,EAAE,GAAGnM,OAAO,CAACoM,KAAK,CAAC;cACxD,MAAMC,KAAK,GAAG1N,KAAK,CAACuN,SAAS,CAACC,QAAQ,CAACnM,OAAO,CAACsM,GAAG,CAAC;cACnD,MAAMC,CAAC,GAAGP,MAAM,GAAGlL,IAAI,CAAC0L,GAAG,CAACP,GAAG,CAAC,GAAGnL,IAAI,CAAC0L,GAAG,CAACH,KAAK,CAAC;cAClD,MAAMI,CAAC,GAAGT,MAAM,GAAGlL,IAAI,CAAC4L,GAAG,CAACT,GAAG,CAAC;cAChC,MAAMU,CAAC,GAAGX,MAAM,GAAGlL,IAAI,CAAC0L,GAAG,CAACP,GAAG,CAAC,GAAGnL,IAAI,CAAC4L,GAAG,CAACL,KAAK,CAAC;cAElD,MAAMlK,MAAM,GAAGpC,mBAAmB,CAACC,OAAO,CAAC;cAC3CmC,MAAM,CAACuG,QAAQ,CAACpG,GAAG,CAACiK,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;cAC5BxK,MAAM,CAACI,QAAQ,CAACvC,OAAO,GAAGA,OAAO;cACjCmC,MAAM,CAACI,QAAQ,CAACqK,eAAe,GAAG,IAAI;cACtC7F,KAAK,CAAC4E,GAAG,CAACxJ,MAAM,CAAC;YACnB;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IAEDmI,SAAS,CAACnH,iBAAiB,CAAC;;IAE5B;IACA,IAAI0J,UAAU,GAAG,IAAI;IACrB,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpB7E,qBAAqB,CAAC6E,OAAO,CAAC;;MAE9B;MACA,IAAIxD,QAAQ,EAAE;QACZA,QAAQ,CAAC/E,UAAU,GAAGA,UAAU;QAChC+E,QAAQ,CAACyD,MAAM,CAAC,CAAC;MACnB;;MAEA;MACA,MAAMC,aAAa,GAAG,EAAE;MACxBjG,KAAK,CAACkG,QAAQ,CAACC,GAAG,IAAI;QACpB,IAAIA,GAAG,CAAC3K,QAAQ,IAAI2K,GAAG,CAAC3K,QAAQ,CAACqK,eAAe,EAAE;UAChDI,aAAa,CAACG,IAAI,CAACD,GAAG,CAAC;QACzB;MACF,CAAC,CAAC;MAEF,IAAIF,aAAa,CAACzG,MAAM,GAAG,CAAC,EAAE;QAC5B,MAAM6G,CAAC,GAAG5F,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,KAAK;QAC5BuF,aAAa,CAACjB,OAAO,CAAC,CAACN,MAAM,EAAEnF,KAAK,KAAK;UACvC;UACA,IAAIjE,KAAK,GAAG,GAAG,GAAG,GAAG,GAAGvB,IAAI,CAAC0L,GAAG,CAACY,CAAC,GAAG,CAAC,GAAG9G,KAAK,GAAG,GAAG,CAAC;UACrD,IAAImF,MAAM,KAAKoB,UAAU,EAAE;YACzBxK,KAAK,IAAI,GAAG;YACZoJ,MAAM,CAAC5J,QAAQ,CAACK,OAAO,GAAG,GAAG;UAC/B,CAAC,MAAM;YACLuJ,MAAM,CAAC5J,QAAQ,CAACK,OAAO,GAAG,GAAG,GAAG,GAAG,GAAGpB,IAAI,CAAC0L,GAAG,CAACY,CAAC,GAAG9G,KAAK,CAAC;UAC3D;UACAmF,MAAM,CAACpJ,KAAK,CAACC,GAAG,CAACD,KAAK,EAAEA,KAAK,EAAE,CAAC,CAAC;;UAEjC;UACAoJ,MAAM,CAAC4B,QAAQ,CAACV,CAAC,GAAGS,CAAC,GAAG,GAAG,GAAG9G,KAAK,GAAG,GAAG;QAC3C,CAAC,CAAC;MACJ;MAEAU,QAAQ,CAACM,MAAM,CAACP,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IACD6F,OAAO,CAAC,CAAC;;IAET;IACA,IAAIQ,aAAa,GAAG,CAAC;IACrB,MAAMC,GAAG,GAAGvG,QAAQ,CAACI,UAAU;IAE/B,SAASoG,gBAAgBA,CAAA,EAAG;MAC1B,MAAMC,GAAG,GAAG,EAAE;MACd1G,KAAK,CAACkG,QAAQ,CAACC,GAAG,IAAI;QACpB,IAAIA,GAAG,CAAC3K,QAAQ,IAAI2K,GAAG,CAAC3K,QAAQ,CAACqK,eAAe,EAAEa,GAAG,CAACN,IAAI,CAACD,GAAG,CAAC;MACjE,CAAC,CAAC;MACF,OAAOO,GAAG;IACZ;IAEA,SAASC,aAAaA,CAAC7H,KAAK,EAAE;MAC5B,IAAIA,KAAK,CAAC8H,MAAM,KAAK,CAAC,EAAE;MAExB,MAAMC,IAAI,GAAGL,GAAG,CAACM,qBAAqB,CAAC,CAAC;MACxC,MAAMC,KAAK,GAAG,IAAInP,KAAK,CAACoP,OAAO,CAC5B,CAAClI,KAAK,CAACmI,OAAO,GAAGJ,IAAI,CAACK,IAAI,IAAIL,IAAI,CAACvN,KAAK,GAAI,CAAC,GAAG,CAAC,EAClD,EAAE,CAACwF,KAAK,CAACqI,OAAO,GAAGN,IAAI,CAACO,GAAG,IAAIP,IAAI,CAACtN,MAAM,CAAC,GAAG,CAAC,GAAG,CACpD,CAAC;MAED,MAAM8N,SAAS,GAAG,IAAIzP,KAAK,CAAC0P,SAAS,CAAC,CAAC;MACvC,MAAMrB,aAAa,GAAGQ,gBAAgB,CAAC,CAAC;MACxCY,SAAS,CAACE,aAAa,CAACR,KAAK,EAAE7G,MAAM,CAAC;MACtC,MAAMsH,UAAU,GAAGH,SAAS,CAACI,gBAAgB,CAACxB,aAAa,EAAE,IAAI,CAAC;MAElE,IAAIuB,UAAU,CAAChI,MAAM,GAAG,CAAC,EAAE;QACzB,MAAM2G,GAAG,GAAGqB,UAAU,CAAC,CAAC,CAAC,CAACE,MAAM;QAChC,MAAMhH,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;QAEtB,IAAIyF,GAAG,CAAC3K,QAAQ,CAACqK,eAAe,EAAE;UAChC,IAAInF,GAAG,GAAG6F,aAAa,GAAG,GAAG,EAAE;YAC7B,MAAMtN,OAAO,GAAGkN,GAAG,CAAC3K,QAAQ,CAACvC,OAAO;YACpC,IAAIA,OAAO,IAAIA,OAAO,CAACuB,IAAI,KAAK,QAAQ,IAAIvB,OAAO,CAAC0O,aAAa,EAAE;cACjE,MAAMC,GAAG,GAAG9L,IAAI,CAACiD,MAAM,CAAC8I,SAAS,CAACC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAACE,GAAG,CAAC,KAAKD,MAAM,CAAC9O,OAAO,CAAC0O,aAAa,CAAC,CAAC;cACvF,IAAIC,GAAG,KAAK,CAAC,CAAC,EAAE;gBACdtI,eAAe,CAACsI,GAAG,CAAC;cACtB;YACF;UACF;UACArB,aAAa,GAAG7F,GAAG;QACrB;MACF;IACF;IAEA,SAASuH,aAAaA,CAACnJ,KAAK,EAAE;MAC5B,MAAM+H,IAAI,GAAGL,GAAG,CAACM,qBAAqB,CAAC,CAAC;MACxC,MAAMC,KAAK,GAAG,IAAInP,KAAK,CAACoP,OAAO,CAC5B,CAAClI,KAAK,CAACmI,OAAO,GAAGJ,IAAI,CAACK,IAAI,IAAIL,IAAI,CAACvN,KAAK,GAAI,CAAC,GAAG,CAAC,EAClD,EAAE,CAACwF,KAAK,CAACqI,OAAO,GAAGN,IAAI,CAACO,GAAG,IAAIP,IAAI,CAACtN,MAAM,CAAC,GAAG,CAAC,GAAG,CACpD,CAAC;MAED,MAAM8N,SAAS,GAAG,IAAIzP,KAAK,CAAC0P,SAAS,CAAC,CAAC;MACvC,MAAMrB,aAAa,GAAGQ,gBAAgB,CAAC,CAAC;MACxCY,SAAS,CAACE,aAAa,CAACR,KAAK,EAAE7G,MAAM,CAAC;MACtC,MAAMsH,UAAU,GAAGH,SAAS,CAACI,gBAAgB,CAACxB,aAAa,EAAE,IAAI,CAAC;MAElE,IAAIuB,UAAU,CAAChI,MAAM,GAAG,CAAC,EAAE;QACzBsG,UAAU,GAAG0B,UAAU,CAAC,CAAC,CAAC,CAACE,MAAM;QACjClB,GAAG,CAAC0B,KAAK,CAACC,MAAM,GAAG,SAAS;MAC9B,CAAC,MAAM;QACLrC,UAAU,GAAG,IAAI;QACjBU,GAAG,CAAC0B,KAAK,CAACC,MAAM,GAAG,EAAE;MACvB;IACF;IAEA3B,GAAG,CAACpH,gBAAgB,CAAC,aAAa,EAAEuH,aAAa,CAAC;IAClDH,GAAG,CAACpH,gBAAgB,CAAC,aAAa,EAAE6I,aAAa,CAAC;;IAElD;IACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;MACzBlI,MAAM,CAACmI,MAAM,GAAG7G,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW;MACtDxB,MAAM,CAACmD,sBAAsB,CAAC,CAAC;MAC/BpD,QAAQ,CAAC+B,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACzD,CAAC;IACDF,MAAM,CAACpC,gBAAgB,CAAC,QAAQ,EAAEgJ,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACX5G,MAAM,CAACnC,mBAAmB,CAAC,QAAQ,EAAE+I,YAAY,CAAC;MAClD5B,GAAG,CAACnH,mBAAmB,CAAC,aAAa,EAAEsH,aAAa,CAAC;MACrDH,GAAG,CAACnH,mBAAmB,CAAC,aAAa,EAAE4I,aAAa,CAAC;MACrD,IAAI/J,YAAY,CAAC0B,OAAO,EAAE;QACxB0I,oBAAoB,CAACpK,YAAY,CAAC0B,OAAO,CAAC;MAC5C;MACA,IAAIK,QAAQ,EAAE;QACZA,QAAQ,CAACkB,OAAO,CAAC,CAAC;QAClB,IAAIvD,YAAY,CAACgC,OAAO,IAAIK,QAAQ,CAACI,UAAU,EAC7CzC,YAAY,CAACgC,OAAO,CAACyB,WAAW,CAACpB,QAAQ,CAACI,UAAU,CAAC;MACzD;MACA,IAAIjD,YAAY,EAAE;QAChBA,YAAY,CAACmL,UAAU,CAAC,CAAC;MAC3B;IACF,CAAC;EACH,CAAC,EAAE,CAACzM,IAAI,EAAEM,iBAAiB,EAAEY,QAAQ,EAAEQ,UAAU,EAAE8B,eAAe,CAAC,CAAC;;EAEpE;EACA7H,SAAS,CAAC,MAAM;IACd,IAAI,CAACuF,QAAQ,IAAI,CAACY,YAAY,CAACgC,OAAO,EAAE;IAExC,IAAI4I,MAAM,GAAG,CAAC;IACd,IAAIC,MAAM,GAAG,CAAC;IACd,IAAIC,SAAS,GAAG,KAAK;IACrB,MAAMC,cAAc,GAAG,EAAE;IACzB,MAAMC,SAAS,GAAGhL,YAAY,CAACgC,OAAO;IAEtC,MAAMiJ,gBAAgB,GAAI9F,CAAC,IAAK;MAC9B,IAAIA,CAAC,CAAC+F,OAAO,CAACtJ,MAAM,KAAK,CAAC,EAAE;QAC1BgJ,MAAM,GAAGzF,CAAC,CAAC+F,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO;QAC7BwB,MAAM,GAAG1F,CAAC,CAAC+F,OAAO,CAAC,CAAC,CAAC,CAAC3B,OAAO;QAC7BuB,SAAS,GAAG,IAAI;MAClB;IACF,CAAC;IAED,MAAMK,eAAe,GAAIhG,CAAC,IAAK;MAC7B,IAAI,CAAC2F,SAAS,IAAI3F,CAAC,CAAC+F,OAAO,CAACtJ,MAAM,KAAK,CAAC,EAAE;MAE1C,MAAMwJ,QAAQ,GAAGjG,CAAC,CAAC+F,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO;MACrC,MAAMgC,QAAQ,GAAGlG,CAAC,CAAC+F,OAAO,CAAC,CAAC,CAAC,CAAC3B,OAAO;MACrC,MAAM+B,MAAM,GAAGF,QAAQ,GAAGR,MAAM;MAChC,MAAMtF,MAAM,GAAG+F,QAAQ,GAAGR,MAAM;;MAEhC;MACA,IAAI1O,IAAI,CAACoP,GAAG,CAACD,MAAM,CAAC,GAAGnP,IAAI,CAACoP,GAAG,CAACjG,MAAM,CAAC,IAAInJ,IAAI,CAACoP,GAAG,CAACD,MAAM,CAAC,GAAGP,cAAc,EAAE;QAC5E5F,CAAC,CAAC9D,cAAc,CAAC,CAAC;MACpB;IACF,CAAC;IAED,MAAMmK,cAAc,GAAIrG,CAAC,IAAK;MAC5B,IAAI,CAAC2F,SAAS,EAAE;MAEhB,MAAMW,IAAI,GAAGtG,CAAC,CAACuG,cAAc,CAAC,CAAC,CAAC,CAACrC,OAAO;MACxC,MAAMsC,IAAI,GAAGxG,CAAC,CAACuG,cAAc,CAAC,CAAC,CAAC,CAACnC,OAAO;MACxC,MAAM+B,MAAM,GAAGG,IAAI,GAAGb,MAAM;MAC5B,MAAMtF,MAAM,GAAGqG,IAAI,GAAGd,MAAM;;MAErB;MACN,IAAI1O,IAAI,CAACoP,GAAG,CAACD,MAAM,CAAC,GAAGnP,IAAI,CAACoP,GAAG,CAACjG,MAAM,CAAC,IAAInJ,IAAI,CAACoP,GAAG,CAACD,MAAM,CAAC,GAAGP,cAAc,EAAE;QAC5E,IAAIO,MAAM,GAAG,CAAC,EAAE;UACd;UACAhK,2BAA2B,CAAC9C,iBAAiB,GAAG,CAAC,CAAC;QACpD,CAAC,MAAM;UACL;UACA8C,2BAA2B,CAAC9C,iBAAiB,GAAG,CAAC,CAAC;QACpD;MACF;MAEDsM,SAAS,GAAG,KAAK;IACnB,CAAC;IAEDE,SAAS,CAACxJ,gBAAgB,CAAC,YAAY,EAAEyJ,gBAAgB,EAAE;MAAEvF,OAAO,EAAE;IAAM,CAAC,CAAC;IAC9EsF,SAAS,CAACxJ,gBAAgB,CAAC,WAAW,EAAE2J,eAAe,EAAE;MAAEzF,OAAO,EAAE;IAAM,CAAC,CAAC;IAC5EsF,SAAS,CAACxJ,gBAAgB,CAAC,UAAU,EAAEgK,cAAc,EAAE;MAAE9F,OAAO,EAAE;IAAM,CAAC,CAAC;IAE1E,OAAO,MAAM;MACXsF,SAAS,CAACvJ,mBAAmB,CAAC,YAAY,EAAEwJ,gBAAgB,CAAC;MAC7DD,SAAS,CAACvJ,mBAAmB,CAAC,WAAW,EAAE0J,eAAe,CAAC;MAC3DH,SAAS,CAACvJ,mBAAmB,CAAC,UAAU,EAAE+J,cAAc,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,CAACpM,QAAQ,EAAEZ,iBAAiB,EAAEkD,eAAe,CAAC,CAAC;;EAElD;EACA,MAAMkK,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAI1Q,SAAS,CAAC2Q,OAAO,IAAIzM,QAAQ,EAAE;MACjClE,SAAS,CAAC2Q,OAAO,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMvK,2BAA2B,GAAGvH,WAAW,CAAE4H,KAAK,IAAK;IACzDiK,qBAAqB,CAAC,CAAC;IACvBlK,eAAe,CAACC,KAAK,CAAC;EACxB,CAAC,EAAE,CAACD,eAAe,CAAC,CAAC;;EAErB;EACA7H,SAAS,CAAC,MAAM;IACd,IAAI,CAACsG,QAAQ,CAAC6B,OAAO,IAAI,CAAC5B,WAAW,CAAC4B,OAAO,IAAI,CAAC9B,SAAS,CAAC8B,OAAO,EAAE;IACrE,IAAI,CAAClD,aAAa,IAAI,CAACI,WAAW,EAAE;IAEpC,MAAM6G,QAAQ,GAAG,IAAI/L,KAAK,CAACgM,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACvDD,QAAQ,CAACrI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxB,MAAMoO,YAAY,GAAG5N,IAAI,CAACiD,MAAM,CAACvC,iBAAiB,CAAC;IACnD,MAAMmN,MAAM,GAAG,IAAI/R,KAAK,CAACkM,aAAa,CAAC,CAAC;IAExC6F,MAAM,CAAC5F,IAAI,CAAC3L,mBAAmB,CAACsR,YAAY,CAACrR,KAAK,CAAC,EAAEuR,WAAW,IAAI;MAClEA,WAAW,CAAC5F,SAAS,GAAGpM,KAAK,CAACqM,YAAY;MAC1C2F,WAAW,CAAC1F,SAAS,GAAGtM,KAAK,CAACqM,YAAY;MAC1C2F,WAAW,CAACzF,eAAe,GAAG,KAAK;MAEnC,MAAMrJ,QAAQ,GAAG7C,kBAAkB,CAAC6E,WAAW,EAAE8M,WAAW,EAAEhN,kBAAkB,CAAC;MACjF,MAAM8H,MAAM,GAAG,IAAI9M,KAAK,CAAC+M,IAAI,CAAChB,QAAQ,EAAE7I,QAAQ,CAAC;MACjDiD,QAAQ,CAAC6B,OAAO,CAACgF,GAAG,CAACF,MAAM,CAAC;MAE5B,SAASmF,gBAAgBA,CAAA,EAAG;QAC1B,IAAI/O,QAAQ,CAACgP,QAAQ,IAAIhP,QAAQ,CAACgP,QAAQ,CAACC,SAAS,EAAE;UACpDjP,QAAQ,CAACgP,QAAQ,CAACC,SAAS,CAACC,KAAK,GAAGpN,kBAAkB;UACtD9B,QAAQ,CAACgP,QAAQ,CAACG,KAAK,CAACD,KAAK,GAAGvJ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,KAAK;QACpD;QACA1C,WAAW,CAAC4B,OAAO,CAACW,MAAM,CAACxC,QAAQ,CAAC6B,OAAO,EAAE9B,SAAS,CAAC8B,OAAO,CAAC;QAC/D,IAAIlD,aAAa,EAAE;UACjBwE,qBAAqB,CAAC2I,gBAAgB,CAAC;QACzC,CAAC,MAAM;UACL9L,QAAQ,CAAC6B,OAAO,CAAC6D,MAAM,CAACiB,MAAM,CAAC;QACjC;MACF;MACAmF,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnN,aAAa,EAAEE,kBAAkB,EAAEd,IAAI,EAAEU,iBAAiB,CAAC,CAAC;;EAEhE;EACA/E,SAAS,CAAC,MAAM;IACd,IAAI,CAACiF,aAAa,IAAI,CAACkB,YAAY,CAACgC,OAAO,EAAE;IAE7C,MAAMsK,SAAS,GAAG,EAAE;IACpB,MAAMC,aAAa,GAAG,EAAE;IAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,EAAEC,CAAC,EAAE,EAAE;MACtC,MAAMC,QAAQ,GAAGjR,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC9CgR,QAAQ,CAACC,SAAS,GAAG,qBAAqB;MAC1CD,QAAQ,CAACnC,KAAK,CAACqC,OAAO,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MAEDF,QAAQ,CAACnC,KAAK,CAAChB,IAAI,GAAGnN,IAAI,CAACyQ,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;MAC/CH,QAAQ,CAACnC,KAAK,CAACd,GAAG,GAAGrN,IAAI,CAACyQ,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;MAC9CH,QAAQ,CAACnC,KAAK,CAACuC,cAAc,GAAG1Q,IAAI,CAACyQ,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;MAEzD5M,YAAY,CAACgC,OAAO,CAAC0C,WAAW,CAAC+H,QAAQ,CAAC;MAC1CH,SAAS,CAAC9D,IAAI,CAACiE,QAAQ,CAAC;IAC1B;;IAEA;IACA,MAAMK,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BT,SAAS,CAAClF,OAAO,CAACqF,QAAQ,IAAI;QAC5B,IAAIA,QAAQ,CAACO,UAAU,EAAE;UACvBP,QAAQ,CAACO,UAAU,CAACvJ,WAAW,CAACgJ,QAAQ,CAAC;QAC3C;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXQ,YAAY,CAACH,OAAO,CAAC;MACrBR,SAAS,CAAClF,OAAO,CAACqF,QAAQ,IAAI;QAC5B,IAAIA,QAAQ,CAACO,UAAU,EAAE;UACvBP,QAAQ,CAACO,UAAU,CAACvJ,WAAW,CAACgJ,QAAQ,CAAC;QAC3C;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAAC3N,aAAa,CAAC,CAAC;EAEnB,IAAIV,OAAO,EAAE;IACX,oBAAO7D,OAAA;MAAKmS,SAAS,EAAC,gBAAgB;MAAA9G,QAAA,EAAC;IAAgB;MAAAsH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/D;EACA,IAAI/O,KAAK,EAAE;IACT,oBAAO/D,OAAA;MAAKmS,SAAS,EAAC,cAAc;MAAA9G,QAAA,EAAEtH;IAAK;MAAA4O,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpD;EACA,IAAI,CAACnP,IAAI,EAAE;IACT,oBAAO3D,OAAA;MAAKmS,SAAS,EAAC,cAAc;MAAA9G,QAAA,EAAC;IAAkB;MAAAsH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/D;EAEA,oBACE9S,OAAA;IAAKmS,SAAS,EAAC,uBAAuB;IAAA9G,QAAA,gBACpCrL,OAAA;MAAK+S,GAAG,EAAEtN,YAAa;MAAC0M,SAAS,EAAC;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1D9S,OAAA;MAAKmS,SAAS,EAAE,eAAehO,IAAI,GAAG,UAAU,GAAG,EAAE;IAAG;MAAAwO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAG/D9S,OAAA;MAAKmS,SAAS,EAAC,iBAAiB;MAAA9G,QAAA,gBAC9BrL,OAAA;QAAQmS,SAAS,EAAC,YAAY;QAACa,OAAO,EAAEA,CAAA,KAAMtN,QAAQ,CAAC,GAAG,CAAE;QAAA2F,QAAA,EAAC;MAE7D;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAET9S,OAAA;QAAKmS,SAAS,EAAC,iBAAiB;QAAA9G,QAAA,gBAC9BrL,OAAA;UACEmS,SAAS,EAAE,eAAe9M,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;UACvD2N,OAAO,EAAEA,CAAA,KAAM1N,aAAa,CAAC,CAACD,UAAU,CAAE;UAC1C4N,KAAK,EAAC,qCAA+B;UAAA5H,QAAA,EACtC;QAED;UAAAsH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET9S,OAAA;UACEmS,SAAS,EAAC,aAAa;UACvBa,OAAO,EAAEhM,gBAAiB;UAC1BiM,KAAK,EAAC,uBAAuB;UAAA5H,QAAA,EAE5B9F,UAAU,GAAG,GAAG,GAAG;QAAG;UAAAoN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eAET9S,OAAA;UACEmS,SAAS,EAAE,eAAehN,iBAAiB,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC9D6N,OAAO,EAAEA,CAAA,KAAM5N,oBAAoB,CAAC,CAACD,iBAAiB,CAAE;UACxD8N,KAAK,EAAC,qBAAqB;UAAA5H,QAAA,EAC5B;QAED;UAAAsH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGJ3N,iBAAiB,iBAChBnF,OAAA;MAAKmS,SAAS,EAAC,gBAAgB;MAAA9G,QAAA,EAC5B1H,IAAI,CAACiD,MAAM,CAAC/D,GAAG,CAAC,CAACgF,KAAK,EAAET,KAAK,kBAC5BpH,OAAA;QAEEmS,SAAS,EAAE,aAAa/K,KAAK,KAAKnD,iBAAiB,GAAG,QAAQ,GAAG,EAAE,EAAG;QACtE+O,OAAO,EAAEA,CAAA,KAAMjM,2BAA2B,CAACK,KAAK,CAAE;QAClD8L,QAAQ,EAAE3O,aAAc;QAAA8G,QAAA,EAEvBjE,KAAK,GAAG;MAAC,GALLS,KAAK,CAACgI,GAAG;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAGD9S,OAAA;MAAKmS,SAAS,EAAC,mBAAmB;MAAA9G,QAAA,gBAChCrL,OAAA;QACEmS,SAAS,EAAC,gBAAgB;QAC1Ba,OAAO,EAAEA,CAAA,KAAMjM,2BAA2B,CAAC9C,iBAAiB,GAAG,CAAC,CAAE;QAClEiP,QAAQ,EAAEjP,iBAAiB,KAAK,CAAC,IAAIM,aAAc;QAAA8G,QAAA,EACpD;MAED;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9S,OAAA;QACEmS,SAAS,EAAC,iBAAiB;QAC3Ba,OAAO,EAAEA,CAAA,KAAMjM,2BAA2B,CAAC9C,iBAAiB,GAAG,CAAC,CAAE;QAClEiP,QAAQ,EAAEjP,iBAAiB,KAAKN,IAAI,CAACiD,MAAM,CAACS,MAAM,GAAG,CAAC,IAAI9C,aAAc;QAAA8G,QAAA,EACzE;MAED;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGP9S,OAAA;MAAKmS,SAAS,EAAC,YAAY;MAAA9G,QAAA,gBACzBrL,OAAA;QAAKmS,SAAS,EAAC,aAAa;QAAA9G,QAAA,EACzB,EAAA7H,qBAAA,GAAAG,IAAI,CAACiD,MAAM,CAAC3C,iBAAiB,CAAC,cAAAT,qBAAA,uBAA9BA,qBAAA,CAAgCyP,KAAK,KAAI,UAAUhP,iBAAiB,GAAG,CAAC;MAAE;QAAA0O,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACN9S,OAAA;QAAKmS,SAAS,EAAC,mBAAmB;QAAA9G,QAAA,EAC/B,EAAA5H,sBAAA,GAAAE,IAAI,CAACiD,MAAM,CAAC3C,iBAAiB,CAAC,cAAAR,sBAAA,uBAA9BA,sBAAA,CAAgC0P,WAAW,KAAI;MAAyB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN9S,OAAA;MAAKmS,SAAS,EAAC,oBAAoB;MAAA9G,QAAA,gBACjCrL,OAAA;QAAKmS,SAAS,EAAC,cAAc;QAAA9G,QAAA,eAC3BrL,OAAA;UACEmS,SAAS,EAAC,eAAe;UACzBpC,KAAK,EAAE;YAAE5O,KAAK,EAAE,GAAI,CAAC8C,iBAAiB,GAAG,CAAC,IAAIN,IAAI,CAACiD,MAAM,CAACS,MAAM,GAAI,GAAG;UAAI;QAAE;UAAAsL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN9S,OAAA;QAAMmS,SAAS,EAAC,eAAe;QAAA9G,QAAA,GAC5BpH,iBAAiB,GAAG,CAAC,EAAC,KAAG,EAACN,IAAI,CAACiD,MAAM,CAACS,MAAM;MAAA;QAAAsL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGN9S,OAAA;MAAKmS,SAAS,EAAC,eAAe;MAAA9G,QAAA,eAC5BrL,OAAA;QACEmS,SAAS,EAAE,eAAepN,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;QACxDiO,OAAO,EAAE3M,qBAAsB;QAC/B4M,KAAK,EAAC,oBAAoB;QAAA5H,QAAA,EAC3B;MAED;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN9S,OAAA;MAAKmS,SAAS,EAAC,cAAc;MAAA9G,QAAA,eAC3BrL,OAAA;QAAAqL,QAAA,EAAG;MAAsG;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1G,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvP,EAAA,CAjrBQD,UAAU;EAAA,QACE1D,SAAS,EAkBXC,WAAW;AAAA;AAAAuT,EAAA,GAnBrB9P,UAAU;AAmrBnB,eAAeA,UAAU;AAAC,IAAA8P,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}