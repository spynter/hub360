{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // 1. Agregar cache de texturas y precarga en segundo plano\n  const textureCache = useRef({});\n\n  // Precarga en segundo plano\n  useEffect(() => {\n    if (!tour || !tour.scenes) return;\n    const loader = new THREE.TextureLoader();\n    tour.scenes.forEach(scene => {\n      const url = getAbsoluteImageUrl(scene.image);\n      if (!textureCache.current[url]) {\n        loader.load(url, texture => {\n          textureCache.current[url] = texture;\n        });\n      }\n    });\n  }, [tour]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      // Anisotropía para mayor nitidez\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots ---\n      hotspotSpritesRef.current = [];\n      if (Array.isArray(currentScene.hotspots)) {\n        currentScene.hotspots.forEach(hotspot => {\n          // Convertir pitch/yaw a coordenadas cartesianas\n          const radius = 500;\n          const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n          const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n          const x = radius * Math.sin(phi) * Math.sin(theta);\n          const y = radius * Math.cos(phi);\n          const z = radius * Math.sin(phi) * Math.cos(theta);\n          let obj3d;\n          if (hotspot.type === 'access') {\n            // Esfera 3D para access\n            const geometry = new THREE.SphereGeometry(12, 32, 32);\n            const material = new THREE.MeshStandardMaterial({\n              color: 0x38bdf8,\n              emissive: 0x0ea5e9,\n              metalness: 0.3,\n              roughness: 0.5\n            });\n            obj3d = new THREE.Mesh(geometry, material);\n            obj3d.userData.hotspot = hotspot;\n            obj3d.userData.isAccessHotspot = true;\n            accessSpheresRef.current.push(obj3d);\n          } else {\n            // Sprite para otros tipos\n            const size = 64;\n            const canvas = document.createElement('canvas');\n            canvas.width = size;\n            canvas.height = size;\n            const ctx = canvas.getContext('2d');\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n            ctx.fillStyle = '#38bdf8';\n            ctx.shadowColor = '#0ea5e9';\n            ctx.shadowBlur = 8;\n            ctx.fill();\n            ctx.lineWidth = 4;\n            ctx.strokeStyle = '#fff';\n            ctx.stroke();\n            const texture = new THREE.CanvasTexture(canvas);\n            const material = new THREE.SpriteMaterial({\n              map: texture,\n              depthTest: false\n            });\n            obj3d = new THREE.Sprite(material);\n            obj3d.scale.set(20, 20, 1);\n            obj3d.userData.hotspot = hotspot;\n          }\n          obj3d.position.set(x, y, z);\n          scene.add(obj3d);\n          hotspotSpritesRef.current.push(obj3d);\n        });\n      }\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // 1. Comparación de IDs como string en la navegación de hotspots\n    const doubleClickNavigateToAccessHotspot = hotspot => {\n      if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n        const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n        if (idx !== -1) {\n          startTransition(idx);\n        }\n      }\n    };\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            // doble click\n            doubleClickNavigateToAccessHotspot(obj.userData.hotspot);\n          }\n          lastClickTime = now;\n        } else if (obj.userData.hotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (fade) return; // Evitar doble trigger\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n    // Animar FOV (zoom in)\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 35;\n    let duration = 350;\n    let start = null;\n    function animateZoomIn(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomIn);\n      } else {\n        // Esperar un poco y luego cambiar escena\n        setTimeout(() => {\n          setCurrentSceneIndex(targetIdx);\n        }, 200);\n      }\n    }\n    requestAnimationFrame(animateZoomIn);\n  }\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        var _uploadRes$data;\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async files => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const handlePointerDown = event => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - phi * 180 / Math.PI;\n      const yaw = theta * 180 / Math.PI;\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async hotspotData => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async deleteIdx => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => {\n      window.handleDeleteScene = undefined;\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async hotspotIdx => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = {\n      ...updatedScenes[currentSceneIndex]\n    };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = {\n      ...tour,\n      scenes: updatedScenes\n    };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      setIsAddingHotspot: () => setPlacementMode(true),\n      onReturn: () => navigate('/hub'),\n      handleDeleteHotspot: handleDeleteHotspot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 668,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"NTRAJvnOmH1DbxBE3ogswKWVA90=\", false, function () {\n  return [useNavigate];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  var _scenes$currentSceneI;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  flex: 1,\n                  cursor: 'pointer'\n                },\n                onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                  alt: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 23\n              }, this), scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete-scene\",\n                style: {\n                  background: 'transparent',\n                  color: '#ef4444',\n                  border: 'none',\n                  marginLeft: 8,\n                  fontSize: 20,\n                  cursor: 'pointer'\n                },\n                title: \"Eliminar escena\",\n                onClick: e => {\n                  e.stopPropagation();\n                  if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                    if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                  }\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 25\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this), Array.isArray((_scenes$currentSceneI = scenes[currentSceneIndex]) === null || _scenes$currentSceneI === void 0 ? void 0 : _scenes$currentSceneI.hotspots) && scenes[currentSceneIndex].hotspots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hotspots de la Escena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-hotspot-list\",\n            children: scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n              let accessInfo = null;\n              if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n              }\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  gap: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [hotspot.type === 'access' ? 'Punto de Acceso' : hotspot.title || 'Hotspot', accessInfo && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#38bdf8',\n                      marginLeft: 8,\n                      fontSize: 13\n                    },\n                    children: accessInfo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 42\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'transparent',\n                    color: '#ef4444',\n                    border: 'none',\n                    fontSize: 18,\n                    cursor: 'pointer'\n                  },\n                  title: \"Eliminar hotspot\",\n                  onClick: () => {\n                    if (window.confirm('¿Eliminar este hotspot?')) handleDeleteHotspot(idx);\n                  },\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 25\n                }, this)]\n              }, hotspot._id || idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Haz clic en \\\"Agregar Punto de Acceso\\\" en la vista principal para conectar im\\xE1genes entre s\\xED.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-hotspot\",\n          onClick: () => setIsAddingHotspot && setIsAddingHotspot(true),\n          children: \"\\u2795 Agregar Punto de Acceso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 7\n    }, this), !open && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-toggle-collapsed\",\n      onClick: () => setOpen(true),\n      \"aria-label\": \"Abrir panel de control\",\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","fade","setFade","pendingSceneIndex","setPendingSceneIndex","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","accessSpheresRef","textureCache","scenes","loader","TextureLoader","forEach","scene","url","current","load","fetchTour","response","getTour","data","err","console","domElement","contains","removeChild","dispose","firstChild","clientWidth","window","innerWidth","clientHeight","innerHeight","Scene","camera","PerspectiveCamera","position","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","max","min","deltaY","updateProjectionMatrix","passive","animationId","animate","requestAnimationFrame","length","t","Date","now","sphere","sin","x","update","render","handleResize","w","h","aspect","removeEventListener","cancelAnimationFrame","Array","isArray","currentScene","children","remove","geometry","SphereGeometry","textureLoader","imageUrl","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","MeshBasicMaterial","side","DoubleSide","Mesh","add","hotspots","radius","phi","MathUtils","degToRad","pitch","theta","yaw","y","cos","z","obj3d","MeshStandardMaterial","color","emissive","metalness","roughness","isAccessHotspot","push","dom","lastClickTime","doubleClickNavigateToAccessHotspot","targetSceneId","idx","findIndex","s","String","_id","startTransition","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","obj","object","targetIdx","startFov","endFov","duration","start","animateZoomIn","ts","progress","setTimeout","animateZoomOut","handleImageUpload","files","target","from","File","file","_uploadRes$data","uploadRes","uploadImage","Error","newScene","name","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","index","toString","handlePointerDown","vector","Vector3","unproject","camPos","dir","sub","normalize","acos","atan2","Number","toFixed","style","cursor","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","handleSceneClick","point","radToDeg","saveNewHotspot","sceneId","addHotspot","newHotspot","refreshed","handleDeleteScene","deleteIdx","filter","_","newIndex","handleDeleteHotspot","hotspotIdx","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","onReturn","onSave","onCancel","_c","_scenes$currentSceneI","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","id","accept","onChange","display","alignItems","justifyContent","flex","src","alt","marginLeft","title","stopPropagation","confirm","accessInfo","find","gap","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\n\nfunction TourEditor({ tourId }) {\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // 1. Agregar cache de texturas y precarga en segundo plano\n  const textureCache = useRef({});\n\n  // Precarga en segundo plano\n  useEffect(() => {\n    if (!tour || !tour.scenes) return;\n    const loader = new THREE.TextureLoader();\n    tour.scenes.forEach(scene => {\n      const url = getAbsoluteImageUrl(scene.image);\n      if (!textureCache.current[url]) {\n        loader.load(url, texture => {\n          textureCache.current[url] = texture;\n        });\n      }\n    });\n  }, [tour]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (\n        rendererRef.current &&\n        rendererRef.current.domElement &&\n        containerRef.current &&\n        containerRef.current.contains(rendererRef.current.domElement)\n      ) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (\n      !tour ||\n      !sceneRef.current ||\n      !tour.scenes ||\n      !Array.isArray(tour.scenes) ||\n      tour.scenes.length === 0 ||\n      currentSceneIndex === -1 ||\n      !tour.scenes[currentSceneIndex]\n    ) return;\n\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        // Anisotropía para mayor nitidez\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // --- Renderizar Hotspots ---\n        hotspotSpritesRef.current = [];\n        if (Array.isArray(currentScene.hotspots)) {\n          currentScene.hotspots.forEach(hotspot => {\n            // Convertir pitch/yaw a coordenadas cartesianas\n            const radius = 500;\n            const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n            const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n            const x = radius * Math.sin(phi) * Math.sin(theta);\n            const y = radius * Math.cos(phi);\n            const z = radius * Math.sin(phi) * Math.cos(theta);\n            let obj3d;\n            if (hotspot.type === 'access') {\n              // Esfera 3D para access\n              const geometry = new THREE.SphereGeometry(12, 32, 32);\n              const material = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              obj3d = new THREE.Mesh(geometry, material);\n              obj3d.userData.hotspot = hotspot;\n              obj3d.userData.isAccessHotspot = true;\n              accessSpheresRef.current.push(obj3d);\n            } else {\n              // Sprite para otros tipos\n              const size = 64;\n              const canvas = document.createElement('canvas');\n              canvas.width = size;\n              canvas.height = size;\n              const ctx = canvas.getContext('2d');\n              ctx.beginPath();\n              ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n              ctx.fillStyle = '#38bdf8';\n              ctx.shadowColor = '#0ea5e9';\n              ctx.shadowBlur = 8;\n              ctx.fill();\n              ctx.lineWidth = 4;\n              ctx.strokeStyle = '#fff';\n              ctx.stroke();\n              const texture = new THREE.CanvasTexture(canvas);\n              const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n              obj3d = new THREE.Sprite(material);\n              obj3d.scale.set(20, 20, 1);\n              obj3d.userData.hotspot = hotspot;\n            }\n            obj3d.position.set(x, y, z);\n            scene.add(obj3d);\n            hotspotSpritesRef.current.push(obj3d);\n          });\n        }\n      },\n      undefined,\n      err => {\n        console.error('Error al cargar la textura:', err, imageUrl);\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      }\n    );\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // 1. Comparación de IDs como string en la navegación de hotspots\n    const doubleClickNavigateToAccessHotspot = (hotspot) => {\n      if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n        const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n        if (idx !== -1) {\n          startTransition(idx);\n        }\n      }\n    };\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) { // doble click\n            doubleClickNavigateToAccessHotspot(obj.userData.hotspot);\n          }\n          lastClickTime = now;\n        } else if (obj.userData.hotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (fade) return; // Evitar doble trigger\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n    // Animar FOV (zoom in)\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 35;\n    let duration = 350;\n    let start = null;\n    function animateZoomIn(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomIn);\n      } else {\n        // Esperar un poco y luego cambiar escena\n        setTimeout(() => {\n          setCurrentSceneIndex(targetIdx);\n        }, 200);\n      }\n    }\n    requestAnimationFrame(animateZoomIn);\n  }\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async (e) => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async (files) => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async (hotspotData) => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n\n    const handlePointerDown = (event) => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - (phi * 180 / Math.PI);\n      const yaw = theta * 180 / Math.PI;\n\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = (hotspotData) => {\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = (event) => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({ pitch, yaw });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async (hotspotData) => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = { ...tour };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async (deleteIdx) => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => { window.handleDeleteScene = undefined; };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async (hotspotIdx) => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = { ...updatedScenes[currentSceneIndex] };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = { ...tour, scenes: updatedScenes };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Cargando tour...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return (\n      <div className=\"tour-editor\">\n        <div ref={containerRef} className=\"three-container\" />\n        <ControlPanel\n          open={panelOpen}\n          setOpen={setPanelOpen}\n          tour={tour}\n          handleDragDropImage={handleDragDropImage}\n          handleImageUpload={handleImageUpload}\n          scenes={[]}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tour-editor\">\n      <div\n        ref={containerRef}\n        className=\"three-container\"\n        onClick={handleSceneClick}\n      />\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <ControlPanel\n        open={panelOpen}\n        setOpen={setPanelOpen}\n        tour={tour}\n        handleDragDropImage={handleDragDropImage}\n        handleImageUpload={handleImageUpload}\n        scenes={tour.scenes}\n        currentSceneIndex={currentSceneIndex}\n        setCurrentSceneIndex={setCurrentSceneIndex}\n        setIsAddingHotspot={() => setPlacementMode(true)}\n        onReturn={() => navigate('/hub')}\n        handleDeleteHotspot={handleDeleteHotspot}\n      />\n      {(selectedHotspot || pendingHotspot) && (\n        <HotspotEditor\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\n          scenes={tour.scenes}\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\n          onCancel={() => {\n            setSelectedHotspot(null);\n            setIsAddingHotspot(false);\n            setPendingHotspot(null);\n          }}\n        />\n      )}\n      {showHotspotModal && newHotspotPosition && (\n        <HotspotCreationModal\n          position={newHotspotPosition}\n          tour={tour}\n          currentSceneIndex={currentSceneIndex}\n          onSave={saveNewHotspot}\n          onCancel={() => {\n            setShowHotspotModal(false);\n            setNewHotspotPosition(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Panel lateral plegable\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return (\n    <>\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\n        <div className=\"panel-header\">\n          <span className=\"panel-title\">Tour Virtual 360°</span>\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\n            {open ? <>&#10094;</> : <>&#10095;</>}\n          </button>\n        </div>\n        {open && (\n          <div className=\"panel-content\">\n            <button\n              className=\"btn-return-hub\"\n              onClick={onReturn}\n              style={{\n                background: '#23272f',\n                color: '#38bdf8',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 0',\n                fontSize: '1rem',\n                fontWeight: 500,\n                marginBottom: 18,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s, color 0.2s'\n              }}\n            >\n              ← Volver al Hub\n            </button>\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\n            <div className=\"panel-section\">\n              <h3>Imágenes 360°</h3>\n              <DragDrop onFileUpload={handleDragDropImage} />\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div className=\"panel-section\">\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\n              {scenes.length === 0 ? (\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\n              ) : (\n                <ul className=\"panel-image-list\">\n                  {scenes.map((scene, idx) => (\n                    <li\n                      key={scene._id || idx}\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\n                      style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center', flex: 1, cursor: 'pointer' }} onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}>\n                        <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\n                        <span>{scene.name}</span>\n                      </div>\n                      {scenes.length > 1 && (\n                        <button\n                          className=\"btn-delete-scene\"\n                          style={{ background: 'transparent', color: '#ef4444', border: 'none', marginLeft: 8, fontSize: 20, cursor: 'pointer' }}\n                          title=\"Eliminar escena\"\n                          onClick={e => {\n                            e.stopPropagation();\n                            if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                              if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                            }\n                          }}\n                        >\n                          🗑️\n                        </button>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            {Array.isArray(scenes[currentSceneIndex]?.hotspots) && scenes[currentSceneIndex].hotspots.length > 0 && (\n              <div className=\"panel-section\">\n                <h3>Hotspots de la Escena</h3>\n                <ul className=\"panel-hotspot-list\">\n                  {scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                    let accessInfo = null;\n                    if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                      const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                      accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                    }\n                    return (\n                      <li key={hotspot._id || idx} style={{display:'flex',alignItems:'center',justifyContent:'space-between',gap:8}}>\n                        <span>\n                          {hotspot.type === 'access' ? 'Punto de Acceso' : (hotspot.title || 'Hotspot')}\n                          {accessInfo && <span style={{color:'#38bdf8',marginLeft:8,fontSize:13}}>{accessInfo}</span>}\n                        </span>\n                        <button style={{background:'transparent',color:'#ef4444',border:'none',fontSize:18,cursor:'pointer'}} title=\"Eliminar hotspot\" onClick={()=>{if(window.confirm('¿Eliminar este hotspot?'))handleDeleteHotspot(idx)}}>🗑️</button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n            )}\n            <div className=\"panel-section panel-hint\">\n              <span>\n                Haz clic en \"Agregar Punto de Acceso\" en la vista principal para conectar imágenes entre sí.\n              </span>\n            </div>\n            <button\n              className=\"btn-add-hotspot\"\n              onClick={() => setIsAddingHotspot && setIsAddingHotspot(true)}\n            >\n              ➕ Agregar Punto de Acceso\n            </button>\n          </div>\n        )}\n      </aside>\n      {!open && (\n        <button\n          className=\"panel-toggle-collapsed\"\n          onClick={() => setOpen(true)}\n          aria-label=\"Abrir panel de control\"\n        >\n          &#10095;\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}