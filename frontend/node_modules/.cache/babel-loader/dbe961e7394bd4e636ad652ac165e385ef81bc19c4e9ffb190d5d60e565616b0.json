{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\GyroscopeTest.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport './GyroscopeTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GyroscopeTest() {\n  _s();\n  var _deviceOrientation$al, _deviceOrientation$be, _deviceOrientation$ga;\n  const navigate = useNavigate();\n  const containerRef = useRef();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  const [isMobile, setIsMobile] = useState(false);\n  const [deviceOrientation, setDeviceOrientation] = useState({\n    alpha: 0,\n    beta: 0,\n    gamma: 0\n  });\n  const [imageLoaded, setImageLoaded] = useState(false);\n  useEffect(() => {\n    // Detectar si es dispositivo móvil\n    const checkMobile = () => {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      const mobileRegex = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i;\n      const isMobileDevice = mobileRegex.test(userAgent);\n      setIsMobile(isMobileDevice);\n      return isMobileDevice;\n    };\n    const mobile = checkMobile();\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n    if (containerRef.current) {\n      containerRef.current.appendChild(renderer.domElement);\n    }\n\n    // Controles de órbita para desktop\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    controlsRef.current = controls;\n\n    // Cargar imagen 360\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n\n    // Función para cargar imagen con fallback\n    const loadImage = () => {\n      textureLoader.load('/brandshop1.jpg', texture => {\n        console.log('Imagen cargada exitosamente');\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        texture.generateMipmaps = false;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n        setImageLoaded(true);\n      }, progress => {\n        console.log('Progreso de carga:', (progress.loaded / progress.total * 100).toFixed(2) + '%');\n      }, error => {\n        console.error('Error al cargar la imagen:', error);\n\n        // Crear una textura procedural como fallback\n        const canvas = document.createElement('canvas');\n        canvas.width = 1024;\n        canvas.height = 512;\n        const ctx = canvas.getContext('2d');\n\n        // Crear un patrón de gradiente para simular una imagen 360\n        const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n        gradient.addColorStop(0, '#1e40af');\n        gradient.addColorStop(0.25, '#38bdf8');\n        gradient.addColorStop(0.5, '#818cf8');\n        gradient.addColorStop(0.75, '#38bdf8');\n        gradient.addColorStop(1, '#1e40af');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Agregar texto indicativo\n        ctx.fillStyle = 'white';\n        ctx.font = '48px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('Vista de Prueba 360°', canvas.width / 2, canvas.height / 2);\n        ctx.font = '24px Arial';\n        ctx.fillText('Giroscopio Funcionando', canvas.width / 2, canvas.height / 2 + 40);\n        const fallbackTexture = new THREE.CanvasTexture(canvas);\n        fallbackTexture.minFilter = THREE.LinearFilter;\n        fallbackTexture.magFilter = THREE.LinearFilter;\n        const material = new THREE.MeshBasicMaterial({\n          map: fallbackTexture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n        setImageLoaded(true);\n      });\n    };\n\n    // Manejar eventos de orientación del dispositivo\n    const handleDeviceOrientation = event => {\n      if (mobile) {\n        setDeviceOrientation({\n          alpha: event.alpha || 0,\n          beta: event.beta || 0,\n          gamma: event.gamma || 0\n        });\n      }\n    };\n\n    // Configurar giroscopio para móviles\n    if (mobile && 'DeviceOrientationEvent' in window) {\n      // Para iOS 13+\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        DeviceOrientationEvent.requestPermission().then(permission => {\n          if (permission === 'granted') {\n            window.addEventListener('deviceorientation', handleDeviceOrientation);\n          }\n        }).catch(console.error);\n      } else {\n        // Para Android y otros dispositivos\n        window.addEventListener('deviceorientation', handleDeviceOrientation);\n      }\n    }\n\n    // Cargar imagen\n    loadImage();\n\n    // Función de animación\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (mobile) {\n        // Usar datos del giroscopio para rotar la cámara\n        const {\n          alpha,\n          beta,\n          gamma\n        } = deviceOrientation;\n        if (alpha !== null && beta !== null && gamma !== null) {\n          // Convertir grados a radianes\n          const alphaRad = THREE.MathUtils.degToRad(alpha);\n          const betaRad = THREE.MathUtils.degToRad(beta);\n          const gammaRad = THREE.MathUtils.degToRad(gamma);\n\n          // Aplicar rotación basada en el giroscopio con suavizado\n          const targetRotationX = betaRad - Math.PI / 2; // Pitch (rotación X)\n          const targetRotationY = alphaRad; // Yaw (rotación Y)\n          const targetRotationZ = gammaRad; // Roll (rotación Z)\n\n          // Suavizar la rotación para evitar movimientos bruscos\n          camera.rotation.x += (targetRotationX - camera.rotation.x) * 0.1;\n          camera.rotation.y += (targetRotationY - camera.rotation.y) * 0.1;\n          camera.rotation.z += (targetRotationZ - camera.rotation.z) * 0.1;\n        }\n      } else {\n        // Usar controles de órbita para desktop\n        controls.update();\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Manejar cambio de tamaño de ventana\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('deviceorientation', handleDeviceOrientation);\n      if (containerRef.current && renderer.domElement) {\n        containerRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, [isMobile, deviceOrientation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gyroscope-test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate('/hub'),\n      children: \"\\u2190 Volver al Hub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyroscope-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Prueba de Giroscopio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dispositivo: \", isMobile ? 'Móvil' : 'Desktop']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Giroscopio: \", isMobile ? 'Activado' : 'No disponible']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orientation-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Alpha: \", (_deviceOrientation$al = deviceOrientation.alpha) === null || _deviceOrientation$al === void 0 ? void 0 : _deviceOrientation$al.toFixed(2), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Beta: \", (_deviceOrientation$be = deviceOrientation.beta) === null || _deviceOrientation$be === void 0 ? void 0 : _deviceOrientation$be.toFixed(2), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Gamma: \", (_deviceOrientation$ga = deviceOrientation.gamma) === null || _deviceOrientation$ga === void 0 ? void 0 : _deviceOrientation$ga.toFixed(2), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"gyroscope-viewer\",\n      style: {\n        width: '100%',\n        height: 'calc(100vh - 200px)',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      children: !imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cargando imagen 360\\xB0...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyroscope-instructions\",\n      children: isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instrucciones para m\\xF3vil:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Mueve tu dispositivo para explorar la imagen 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 El movimiento del tel\\xE9fono se refleja en tiempo real\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 El giroscopio est\\xE1 activado autom\\xE1ticamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instrucciones para desktop:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Usa el mouse para arrastrar y explorar la imagen 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Usa la rueda del mouse para hacer zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Prueba esta funci\\xF3n en un dispositivo m\\xF3vil para el giroscopio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s(GyroscopeTest, \"fy5pawrwNXX0Hhd+J9VAdKwG8Tw=\", false, function () {\n  return [useNavigate];\n});\n_c = GyroscopeTest;\nexport default GyroscopeTest;\nvar _c;\n$RefreshReg$(_c, \"GyroscopeTest\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","THREE","OrbitControls","jsxDEV","_jsxDEV","GyroscopeTest","_s","_deviceOrientation$al","_deviceOrientation$be","_deviceOrientation$ga","navigate","containerRef","cameraRef","sceneRef","rendererRef","controlsRef","isMobile","setIsMobile","deviceOrientation","setDeviceOrientation","alpha","beta","gamma","imageLoaded","setImageLoaded","checkMobile","userAgent","navigator","vendor","window","opera","mobileRegex","isMobileDevice","test","mobile","scene","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","position","set","current","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","Math","min","devicePixelRatio","appendChild","domElement","controls","enableDamping","dampingFactor","enableZoom","minDistance","maxDistance","geometry","SphereGeometry","scale","textureLoader","TextureLoader","loadImage","load","texture","console","log","minFilter","LinearFilter","magFilter","generateMipmaps","colorSpace","undefined","LinearSRGBColorSpace","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","progress","loaded","total","toFixed","error","canvas","document","createElement","width","height","ctx","getContext","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","font","textAlign","fillText","fallbackTexture","CanvasTexture","handleDeviceOrientation","event","DeviceOrientationEvent","requestPermission","then","permission","addEventListener","catch","animate","requestAnimationFrame","alphaRad","MathUtils","degToRad","betaRad","gammaRad","targetRotationX","PI","targetRotationY","targetRotationZ","rotation","x","y","z","update","render","handleResize","aspect","updateProjectionMatrix","removeEventListener","removeChild","dispose","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","overflow","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/GyroscopeTest.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport './GyroscopeTest.css';\r\n\r\nfunction GyroscopeTest() {\r\n  const navigate = useNavigate();\r\n  const containerRef = useRef();\r\n  const cameraRef = useRef();\r\n  const sceneRef = useRef();\r\n  const rendererRef = useRef();\r\n  const controlsRef = useRef();\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [deviceOrientation, setDeviceOrientation] = useState({ alpha: 0, beta: 0, gamma: 0 });\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Detectar si es dispositivo móvil\r\n    const checkMobile = () => {\r\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n      const mobileRegex = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i;\r\n      const isMobileDevice = mobileRegex.test(userAgent);\r\n      setIsMobile(isMobileDevice);\r\n      return isMobileDevice;\r\n    };\r\n\r\n    const mobile = checkMobile();\r\n\r\n    // Configuración de Three.js\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.set(0, 0, 0.1);\r\n    cameraRef.current = camera;\r\n    sceneRef.current = scene;\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    rendererRef.current = renderer;\r\n    \r\n    if (containerRef.current) {\r\n      containerRef.current.appendChild(renderer.domElement);\r\n    }\r\n\r\n    // Controles de órbita para desktop\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.enableZoom = true;\r\n    controls.minDistance = 0.05;\r\n    controls.maxDistance = 2.5;\r\n    controlsRef.current = controls;\r\n\r\n    // Cargar imagen 360\r\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\r\n    geometry.scale(-1, 1, 1);\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n    \r\n    // Función para cargar imagen con fallback\r\n    const loadImage = () => {\r\n      textureLoader.load(\r\n        '/brandshop1.jpg',\r\n        texture => {\r\n          console.log('Imagen cargada exitosamente');\r\n          texture.minFilter = THREE.LinearFilter;\r\n          texture.magFilter = THREE.LinearFilter;\r\n          texture.generateMipmaps = false;\r\n          \r\n          if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\r\n            texture.colorSpace = THREE.LinearSRGBColorSpace;\r\n          }\r\n          \r\n          const material = new THREE.MeshBasicMaterial({\r\n            map: texture,\r\n            side: THREE.DoubleSide\r\n          });\r\n          \r\n          const sphere = new THREE.Mesh(geometry, material);\r\n          scene.add(sphere);\r\n          setImageLoaded(true);\r\n        },\r\n        (progress) => {\r\n          console.log('Progreso de carga:', (progress.loaded / progress.total * 100).toFixed(2) + '%');\r\n        },\r\n        error => {\r\n          console.error('Error al cargar la imagen:', error);\r\n          \r\n          // Crear una textura procedural como fallback\r\n          const canvas = document.createElement('canvas');\r\n          canvas.width = 1024;\r\n          canvas.height = 512;\r\n          const ctx = canvas.getContext('2d');\r\n          \r\n          // Crear un patrón de gradiente para simular una imagen 360\r\n          const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n          gradient.addColorStop(0, '#1e40af');\r\n          gradient.addColorStop(0.25, '#38bdf8');\r\n          gradient.addColorStop(0.5, '#818cf8');\r\n          gradient.addColorStop(0.75, '#38bdf8');\r\n          gradient.addColorStop(1, '#1e40af');\r\n          \r\n          ctx.fillStyle = gradient;\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n          \r\n          // Agregar texto indicativo\r\n          ctx.fillStyle = 'white';\r\n          ctx.font = '48px Arial';\r\n          ctx.textAlign = 'center';\r\n          ctx.fillText('Vista de Prueba 360°', canvas.width / 2, canvas.height / 2);\r\n          ctx.font = '24px Arial';\r\n          ctx.fillText('Giroscopio Funcionando', canvas.width / 2, canvas.height / 2 + 40);\r\n          \r\n          const fallbackTexture = new THREE.CanvasTexture(canvas);\r\n          fallbackTexture.minFilter = THREE.LinearFilter;\r\n          fallbackTexture.magFilter = THREE.LinearFilter;\r\n          \r\n          const material = new THREE.MeshBasicMaterial({\r\n            map: fallbackTexture,\r\n            side: THREE.DoubleSide\r\n          });\r\n          \r\n          const sphere = new THREE.Mesh(geometry, material);\r\n          scene.add(sphere);\r\n          setImageLoaded(true);\r\n        }\r\n      );\r\n    };\r\n\r\n    // Manejar eventos de orientación del dispositivo\r\n    const handleDeviceOrientation = (event) => {\r\n      if (mobile) {\r\n        setDeviceOrientation({\r\n          alpha: event.alpha || 0,\r\n          beta: event.beta || 0,\r\n          gamma: event.gamma || 0\r\n        });\r\n      }\r\n    };\r\n\r\n    // Configurar giroscopio para móviles\r\n    if (mobile && 'DeviceOrientationEvent' in window) {\r\n      // Para iOS 13+\r\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n        DeviceOrientationEvent.requestPermission().then(permission => {\r\n          if (permission === 'granted') {\r\n            window.addEventListener('deviceorientation', handleDeviceOrientation);\r\n          }\r\n        }).catch(console.error);\r\n      } else {\r\n        // Para Android y otros dispositivos\r\n        window.addEventListener('deviceorientation', handleDeviceOrientation);\r\n      }\r\n    }\r\n\r\n    // Cargar imagen\r\n    loadImage();\r\n\r\n    // Función de animación\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      \r\n      if (mobile) {\r\n        // Usar datos del giroscopio para rotar la cámara\r\n        const { alpha, beta, gamma } = deviceOrientation;\r\n        \r\n        if (alpha !== null && beta !== null && gamma !== null) {\r\n          // Convertir grados a radianes\r\n          const alphaRad = THREE.MathUtils.degToRad(alpha);\r\n          const betaRad = THREE.MathUtils.degToRad(beta);\r\n          const gammaRad = THREE.MathUtils.degToRad(gamma);\r\n          \r\n          // Aplicar rotación basada en el giroscopio con suavizado\r\n          const targetRotationX = betaRad - Math.PI / 2; // Pitch (rotación X)\r\n          const targetRotationY = alphaRad; // Yaw (rotación Y)\r\n          const targetRotationZ = gammaRad; // Roll (rotación Z)\r\n          \r\n          // Suavizar la rotación para evitar movimientos bruscos\r\n          camera.rotation.x += (targetRotationX - camera.rotation.x) * 0.1;\r\n          camera.rotation.y += (targetRotationY - camera.rotation.y) * 0.1;\r\n          camera.rotation.z += (targetRotationZ - camera.rotation.z) * 0.1;\r\n        }\r\n      } else {\r\n        // Usar controles de órbita para desktop\r\n        controls.update();\r\n      }\r\n      \r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Manejar cambio de tamaño de ventana\r\n    const handleResize = () => {\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      \r\n      camera.aspect = width / height;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(width, height);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      window.removeEventListener('deviceorientation', handleDeviceOrientation);\r\n      if (containerRef.current && renderer.domElement) {\r\n        containerRef.current.removeChild(renderer.domElement);\r\n      }\r\n      renderer.dispose();\r\n    };\r\n  }, [isMobile, deviceOrientation]);\r\n\r\n  return (\r\n    <div className=\"gyroscope-test-container\">\r\n      <button className=\"back-button\" onClick={() => navigate('/hub')}>\r\n        ← Volver al Hub\r\n      </button>\r\n      \r\n      <div className=\"gyroscope-header\">\r\n        <h2>Prueba de Giroscopio</h2>\r\n        <div className=\"device-info\">\r\n          <p>Dispositivo: {isMobile ? 'Móvil' : 'Desktop'}</p>\r\n          <p>Giroscopio: {isMobile ? 'Activado' : 'No disponible'}</p>\r\n          {isMobile && (\r\n            <div className=\"orientation-data\">\r\n              <p>Alpha: {deviceOrientation.alpha?.toFixed(2)}°</p>\r\n              <p>Beta: {deviceOrientation.beta?.toFixed(2)}°</p>\r\n              <p>Gamma: {deviceOrientation.gamma?.toFixed(2)}°</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <div \r\n        ref={containerRef} \r\n        className=\"gyroscope-viewer\"\r\n        style={{ \r\n          width: '100%', \r\n          height: 'calc(100vh - 200px)',\r\n          position: 'relative',\r\n          overflow: 'hidden'\r\n        }}\r\n      >\r\n        {!imageLoaded && (\r\n          <div className=\"loading-indicator\">\r\n            <div className=\"spinner\"></div>\r\n            <p>Cargando imagen 360°...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"gyroscope-instructions\">\r\n        {isMobile ? (\r\n          <div>\r\n            <h3>Instrucciones para móvil:</h3>\r\n            <p>• Mueve tu dispositivo para explorar la imagen 360°</p>\r\n            <p>• El movimiento del teléfono se refleja en tiempo real</p>\r\n            <p>• El giroscopio está activado automáticamente</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h3>Instrucciones para desktop:</h3>\r\n            <p>• Usa el mouse para arrastrar y explorar la imagen 360°</p>\r\n            <p>• Usa la rueda del mouse para hacer zoom</p>\r\n            <p>• Prueba esta función en un dispositivo móvil para el giroscopio</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GyroscopeTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}