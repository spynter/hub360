{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport { useAdvancedTransition } from '../../hooks/useAdvancedTransition';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  // Hook personalizado para transiciones avanzadas\n  const {\n    transitioning,\n    transitionProgress,\n    fade,\n    pendingSceneIndex,\n    startTransition,\n    renderTransition,\n    loadNewScene\n  } = useAdvancedTransition(sceneRef, cameraRef, rendererRef);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        var _tourData$scenes, _tourData$scenes2;\n        const response = await api.getTour(tourId);\n        const tourData = response.data;\n\n        // Validar y limpiar datos del tour\n        if (tourData && tourData.scenes) {\n          tourData.scenes = tourData.scenes.map((scene, sceneIndex) => {\n            if (scene.hotspots && Array.isArray(scene.hotspots)) {\n              // Limpiar hotspots inválidos\n              scene.hotspots = scene.hotspots.filter(hotspot => {\n                if (!hotspot || typeof hotspot.pitch !== 'number' || typeof hotspot.yaw !== 'number') {\n                  console.warn(`Eliminando hotspot inválido en escena ${sceneIndex}:`, hotspot);\n                  return false;\n                }\n                return true;\n              });\n            }\n            return scene;\n          });\n        }\n        setTour(tourData);\n        setLoading(false);\n        console.log('Tour cargado:', {\n          id: tourData._id,\n          name: tourData.name,\n          scenes: ((_tourData$scenes = tourData.scenes) === null || _tourData$scenes === void 0 ? void 0 : _tourData$scenes.length) || 0,\n          totalHotspots: ((_tourData$scenes2 = tourData.scenes) === null || _tourData$scenes2 === void 0 ? void 0 : _tourData$scenes2.reduce((total, scene) => {\n            var _scene$hotspots;\n            return total + (((_scene$hotspots = scene.hotspots) === null || _scene$hotspots === void 0 ? void 0 : _scene$hotspots.length) || 0);\n          }, 0)) || 0\n        });\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error('Error cargando tour:', err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5; // INVERTIR dirección de rotación\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current con manejo optimizado de hotspots\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior completamente\n    while (scene.children.length > 0) {\n      const child = scene.children[0];\n      // Limpiar recursos de Three.js\n      if (child.geometry) child.geometry.dispose();\n      if (child.material) {\n        if (Array.isArray(child.material)) {\n          child.material.forEach(mat => mat.dispose());\n        } else {\n          child.material.dispose();\n        }\n      }\n      scene.remove(child);\n    }\n\n    // Limpiar referencias\n    hotspotSpritesRef.current = [];\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots con estado optimizado ---\n      renderHotspotsForScene(currentScene, scene);\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // Función de utilidad para depurar hotspots\n  const debugHotspots = (sceneData, sceneIndex) => {\n    if (!sceneData.hotspots || !Array.isArray(sceneData.hotspots)) {\n      console.log(`Escena ${sceneIndex}: No hay hotspots`);\n      return;\n    }\n    console.log(`Escena ${sceneIndex} (${sceneData.name}):`, {\n      totalHotspots: sceneData.hotspots.length,\n      accessHotspots: sceneData.hotspots.filter(h => h.type === 'access').length,\n      commerceHotspots: sceneData.hotspots.filter(h => h.type === 'commerce').length,\n      locationHotspots: sceneData.hotspots.filter(h => h.type === 'location').length,\n      hotspots: sceneData.hotspots.map((h, i) => ({\n        index: i,\n        type: h.type,\n        pitch: h.pitch,\n        yaw: h.yaw,\n        targetSceneId: h.targetSceneId,\n        title: h.title\n      }))\n    });\n  };\n\n  // Función optimizada para renderizar hotspots\n  const renderHotspotsForScene = (sceneData, threeScene) => {\n    if (!Array.isArray(sceneData.hotspots) || sceneData.hotspots.length === 0) {\n      return;\n    }\n\n    // Validar y limpiar hotspots antes de renderizar\n    const validHotspots = sceneData.hotspots.filter((hotspot, index) => {\n      // Validar que el hotspot tenga las propiedades requeridas\n      if (!hotspot || typeof hotspot.pitch !== 'number' || typeof hotspot.yaw !== 'number') {\n        console.warn(`Hotspot inválido en índice ${index}:`, hotspot);\n        return false;\n      }\n\n      // Validar que el hotspot de acceso tenga targetSceneId\n      if (hotspot.type === 'access' && !hotspot.targetSceneId) {\n        console.warn(`Hotspot de acceso sin targetSceneId en índice ${index}:`, hotspot);\n        return false;\n      }\n      return true;\n    });\n    console.log(`Renderizando ${validHotspots.length} hotspots válidos para la escena ${currentSceneIndex}`);\n\n    // Depurar hotspots para esta escena\n    debugHotspots(sceneData, currentSceneIndex);\n    validHotspots.forEach((hotspot, index) => {\n      try {\n        // Convertir pitch/yaw a coordenadas cartesianas\n        const radius = 500;\n        const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n        const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n        const x = radius * Math.sin(phi) * Math.sin(theta);\n        const y = radius * Math.cos(phi);\n        const z = radius * Math.sin(phi) * Math.cos(theta);\n        let obj3d;\n        if (hotspot.type === 'access') {\n          // Esfera 3D para access con mejor visualización\n          const geometry = new THREE.SphereGeometry(12, 32, 32);\n          const material = new THREE.MeshStandardMaterial({\n            color: 0x38bdf8,\n            emissive: 0x0ea5e9,\n            metalness: 0.3,\n            roughness: 0.5\n          });\n          obj3d = new THREE.Mesh(geometry, material);\n\n          // Agregar información adicional al hotspot para mejor navegación\n          obj3d.userData.hotspot = {\n            ...hotspot,\n            sceneIndex: currentSceneIndex,\n            sceneName: sceneData.name\n          };\n          obj3d.userData.isAccessHotspot = true;\n          obj3d.userData.hotspotIndex = index;\n          accessSpheresRef.current.push(obj3d);\n        } else {\n          // Sprite para otros tipos con mejor diseño\n          const size = 64;\n          const canvas = document.createElement('canvas');\n          canvas.width = size;\n          canvas.height = size;\n          const ctx = canvas.getContext('2d');\n\n          // Fondo con gradiente\n          const gradient = ctx.createRadialGradient(size / 2, size / 2, 0, size / 2, size / 2, size / 2);\n          gradient.addColorStop(0, '#38bdf8');\n          gradient.addColorStop(1, '#0ea5e9');\n          ctx.fillStyle = gradient;\n          ctx.beginPath();\n          ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n          ctx.fill();\n\n          // Borde blanco\n          ctx.lineWidth = 4;\n          ctx.strokeStyle = '#fff';\n          ctx.stroke();\n\n          // Sombra\n          ctx.shadowColor = '#0ea5e9';\n          ctx.shadowBlur = 8;\n          const texture = new THREE.CanvasTexture(canvas);\n          const material = new THREE.SpriteMaterial({\n            map: texture,\n            depthTest: false,\n            transparent: true\n          });\n          obj3d = new THREE.Sprite(material);\n          obj3d.scale.set(20, 20, 1);\n          obj3d.userData.hotspot = {\n            ...hotspot,\n            sceneIndex: currentSceneIndex,\n            sceneName: sceneData.name\n          };\n          obj3d.userData.hotspotIndex = index;\n        }\n        obj3d.position.set(x, y, z);\n        threeScene.add(obj3d);\n        hotspotSpritesRef.current.push(obj3d);\n      } catch (error) {\n        console.error('Error renderizando hotspot:', error, hotspot);\n      }\n    });\n  };\n\n  // --- Detección de clics en hotspots optimizada ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current || !tour) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n\n    // Función optimizada para navegar a hotspots de acceso\n    const doubleClickNavigateToAccessHotspot = hotspot => {\n      if (!hotspot || hotspot.type !== 'access' || !hotspot.targetSceneId) {\n        console.log('Hotspot inválido para navegación:', hotspot);\n        return;\n      }\n\n      // Buscar la escena destino usando diferentes métodos de comparación\n      let targetIdx = -1;\n\n      // Método 1: Comparación directa de IDs\n      targetIdx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n\n      // Método 2: Si no se encuentra, buscar por índice (fallback)\n      if (targetIdx === -1 && typeof hotspot.targetSceneId === 'number') {\n        targetIdx = hotspot.targetSceneId;\n      }\n\n      // Método 3: Buscar por nombre de escena (fallback adicional)\n      if (targetIdx === -1 && hotspot.targetSceneName) {\n        targetIdx = tour.scenes.findIndex(s => s.name === hotspot.targetSceneName);\n      }\n      if (targetIdx !== -1 && targetIdx < tour.scenes.length) {\n        console.log(`Navegando de escena ${currentSceneIndex} a escena ${targetIdx}`);\n        handleSceneTransition(targetIdx);\n      } else {\n        console.error('Escena destino no encontrada:', {\n          targetSceneId: hotspot.targetSceneId,\n          availableScenes: tour.scenes.map((s, i) => ({\n            index: i,\n            id: s._id,\n            name: s.name\n          }))\n        });\n      }\n    };\n\n    // Función optimizada para manejar clics en hotspots\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n\n      // Usar todos los objetos de la escena actual para detectar hotspots\n      const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n\n        // Verificar si es un hotspot\n        if (obj.userData && obj.userData.hotspot) {\n          const hotspot = obj.userData.hotspot;\n          if (obj.userData.isAccessHotspot) {\n            if (now - lastClickTime < 400) {\n              // doble click\n              console.log('Doble clic en hotspot de acceso:', hotspot);\n              doubleClickNavigateToAccessHotspot(hotspot);\n            }\n            lastClickTime = now;\n          } else {\n            console.log('Clic en hotspot informativo:', hotspot);\n            setSelectedHotspot(hotspot);\n          }\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex, hotspotSpritesRef.current]);\n\n  // Animación de transición optimizada\n  // Función para manejar transiciones entre escenas\n  const handleSceneTransition = targetIdx => {\n    if (startTransition(targetIdx, currentSceneIndex)) {\n      // Limpiar estados de hotspots antes de la transición\n      setSelectedHotspot(null);\n      setPlacementMode(false);\n      console.log(`Transición iniciada hacia escena ${targetIdx}`);\n    }\n  };\n\n  // Efecto para manejar transiciones cuando se completa\n  useEffect(() => {\n    if (!pendingSceneIndex || !tour) return;\n    const nextScene = tour.scenes[pendingSceneIndex];\n    if (!nextScene) return;\n\n    // Cargar la nueva textura y renderizar la transición\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(nextScene.image), nextTexture => {\n      const sceneData = {\n        texture: nextTexture,\n        hotspots: nextScene.hotspots || []\n      };\n      renderTransition(nextTexture, sceneData);\n    });\n  }, [pendingSceneIndex, tour, renderTransition]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        var _uploadRes$data;\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async files => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot optimizado\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      console.log('Guardando hotspot:', hotspotData);\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        // Actualizar hotspot existente\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = {\n            ...currentScene.hotspots[index],\n            ...hotspotData\n          };\n        }\n      } else {\n        // Crear nuevo hotspot\n        const newHotspot = {\n          ...hotspotData,\n          _id: Date.now().toString()\n        };\n        currentScene.hotspots.push(newHotspot);\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n\n      // Guardar en el backend\n      await api.updateTour(tourId, updatedTour);\n\n      // Recargar el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      const refreshedTour = response.data ? response.data : response;\n      setTour(refreshedTour);\n\n      // Limpiar estados\n      setSelectedHotspot(null);\n      setPlacementMode(false);\n      console.log('Hotspot guardado exitosamente');\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Efecto unificado para manejar el modo de colocación de hotspots\n  useEffect(() => {\n    if (!rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const dom = rendererRef.current.domElement;\n    if (placementMode) {\n      dom.style.cursor = 'crosshair';\n      // Elimina overlay visual, solo usa cursor\n      // El handler de click está en el canvas principal (ver más abajo)\n    } else {\n      dom.style.cursor = '';\n    }\n  }, [placementMode, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST optimizado\n  const saveNewHotspot = async hotspotData => {\n    try {\n      console.log('Guardando nuevo hotspot:', hotspotData);\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) {\n        throw new Error('Tour o escena no disponible');\n      }\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n\n      // Obtener el hotspot creado\n      const newHotspot = response.data ? response.data : response;\n      console.log('Hotspot creado en backend:', newHotspot);\n\n      // Actualizar el estado local\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n\n      // Limpiar estados\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      setPlacementMode(false);\n\n      // Recargar el tour desde la API para asegurar sincronización completa\n      const refreshed = await api.getTour(tourId);\n      const refreshedTour = refreshed.data ? refreshed.data : refreshed;\n      setTour(refreshedTour);\n      console.log('Nuevo hotspot guardado exitosamente');\n    } catch (error) {\n      console.error('Error al guardar el hotspot:', error);\n      alert(`Error al guardar el hotspot: ${error.message || 'Intente nuevamente'}`);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      setPlacementMode(false);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async deleteIdx => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => {\n      window.handleDeleteScene = undefined;\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async hotspotIdx => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = {\n      ...updatedScenes[currentSceneIndex]\n    };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = {\n      ...tour,\n      scenes: updatedScenes\n    };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  // --- GIROSCOPIO: Lógica de activación y manejo estilo YouTube 360 ---\n  useEffect(() => {\n    if (!isMobileDevice() || !cameraRef.current || !controlsRef.current) return;\n\n    // Habilitar/deshabilitar OrbitControls según el estado del giroscopio\n    controlsRef.current.enabled = true;\n    let lastAlpha = 0,\n      lastBeta = 0,\n      lastGamma = 0;\n    let smoothAlpha = 0,\n      smoothBeta = 0,\n      smoothGamma = 0;\n    const smoothFactor = 0.15;\n    function getScreenOrientation() {\n      if (window.screen.orientation && window.screen.orientation.angle !== undefined) {\n        return window.screen.orientation.angle;\n      }\n      return window.orientation || 0;\n    }\n    function handleOrientation(event) {\n      let alpha = event.alpha || 0;\n      let beta = event.beta || 0;\n      let gamma = event.gamma || 0;\n\n      // INVERTIR alpha para invertir la rotación horizontal\n      alpha = -alpha;\n      smoothAlpha = smoothAlpha * (1 - smoothFactor) + alpha * smoothFactor;\n      smoothBeta = smoothBeta * (1 - smoothFactor) + beta * smoothFactor;\n      smoothGamma = smoothGamma * (1 - smoothFactor) + gamma * smoothFactor;\n      const _alpha = THREE.MathUtils.degToRad(smoothAlpha);\n      const _beta = THREE.MathUtils.degToRad(smoothBeta);\n      const _gamma = THREE.MathUtils.degToRad(smoothGamma);\n      const orient = getScreenOrientation();\n      const orientRad = THREE.MathUtils.degToRad(orient);\n      const zee = new THREE.Vector3(0, 0, 1);\n      const euler = new THREE.Euler();\n      const q0 = new THREE.Quaternion();\n      const q1 = new THREE.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n      euler.set(_beta, _alpha, -_gamma, 'YXZ');\n      let quaternion = new THREE.Quaternion().setFromEuler(euler);\n      quaternion.multiply(q1);\n      quaternion.multiply(q0.setFromAxisAngle(zee, -orientRad));\n      cameraRef.current.quaternion.copy(quaternion);\n    }\n    window.addEventListener('deviceorientation', handleOrientation, true);\n    const handleScreenOrientation = () => {\n      smoothAlpha = lastAlpha;\n      smoothBeta = lastBeta;\n      smoothGamma = lastGamma;\n    };\n    window.addEventListener('orientationchange', handleScreenOrientation);\n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation, true);\n      window.removeEventListener('orientationchange', handleScreenOrientation);\n      // Rehabilitar OrbitControls al salir del modo giroscopio\n      if (controlsRef.current) controlsRef.current.enabled = true;\n    };\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: [],\n        placementMode: placementMode,\n        setPlacementMode: setPlacementMode,\n        onReturn: () => navigate('/hub'),\n        handleDeleteHotspot: handleDeleteHotspot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      placementMode: placementMode,\n      setPlacementMode: setPlacementMode,\n      onReturn: () => navigate('/hub'),\n      handleDeleteHotspot: handleDeleteHotspot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setPlacementMode(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 886,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"I8byUTEXvav8zE4lpwl8aVsGZFo=\", false, function () {\n  return [useNavigate, useAdvancedTransition];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  placementMode,\n  setPlacementMode,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  var _scenes$currentSceneI, _scenes$currentSceneI2, _scenes$currentSceneI3, _scenes$currentSceneI4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  flex: 1,\n                  cursor: 'pointer'\n                },\n                onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                  alt: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 23\n              }, this), scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete-scene\",\n                style: {\n                  background: 'transparent',\n                  color: '#ef4444',\n                  border: 'none',\n                  marginLeft: 8,\n                  fontSize: 20,\n                  cursor: 'pointer'\n                },\n                title: \"Eliminar escena\",\n                onClick: e => {\n                  e.stopPropagation();\n                  if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                    if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                  }\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 25\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotspots de la Escena (\", ((_scenes$currentSceneI = scenes[currentSceneIndex]) === null || _scenes$currentSceneI === void 0 ? void 0 : (_scenes$currentSceneI2 = _scenes$currentSceneI.hotspots) === null || _scenes$currentSceneI2 === void 0 ? void 0 : _scenes$currentSceneI2.length) || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hotspot-controls\",\n            style: {\n              marginBottom: 15\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-add-hotspot\",\n              onClick: () => setPlacementMode(true),\n              title: \"Haz clic para activar el modo de colocaci\\xF3n de hotspots. Luego haz clic en la imagen 360\\xB0 donde quieras colocar el hotspot.\",\n              style: {\n                background: '#38bdf8',\n                color: '#fff',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 16px',\n                fontSize: '14px',\n                fontWeight: 500,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: 8,\n                position: 'relative'\n              },\n              onMouseEnter: e => e.target.style.background = '#0ea5e9',\n              onMouseLeave: e => e.target.style.background = '#38bdf8',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '16px'\n                },\n                children: \"\\uD83D\\uDCCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 19\n              }, this), \"Agregar Hotspot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 17\n            }, this), placementMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"placement-mode-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Modo de colocaci\\xF3n activado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1062,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setPlacementMode(false),\n                  style: {\n                    background: 'transparent',\n                    border: '1px solid #ef4444',\n                    color: '#ef4444',\n                    borderRadius: 4,\n                    padding: '4px 8px',\n                    fontSize: '11px',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s'\n                  },\n                  onMouseEnter: e => {\n                    e.target.style.background = '#ef4444';\n                    e.target.style.color = '#fff';\n                  },\n                  onMouseLeave: e => {\n                    e.target.style.background = 'transparent';\n                    e.target.style.color = '#ef4444';\n                  },\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 21\n              }, this), \"Haz clic en la imagen 360\\xB0 para colocar el hotspot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 15\n          }, this), ((_scenes$currentSceneI3 = scenes[currentSceneIndex]) === null || _scenes$currentSceneI3 === void 0 ? void 0 : (_scenes$currentSceneI4 = _scenes$currentSceneI3.hotspots) === null || _scenes$currentSceneI4 === void 0 ? void 0 : _scenes$currentSceneI4.length) === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#1e293b',\n              border: '1px dashed #334155',\n              borderRadius: 6,\n              padding: '20px',\n              textAlign: 'center',\n              color: '#64748b',\n              fontSize: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '24px',\n                marginBottom: '8px'\n              },\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 19\n            }, this), \"No hay hotspots en esta escena\", /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                marginTop: '4px'\n              },\n              children: \"Haz clic en \\\"Agregar Hotspot\\\" para comenzar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#1e293b',\n                border: '1px solid #334155',\n                borderRadius: 6,\n                padding: '8px 12px',\n                marginBottom: '12px',\n                fontSize: '12px',\n                color: '#94a3b8'\n              },\n              children: (() => {\n                const hotspots = scenes[currentSceneIndex].hotspots;\n                const types = {\n                  access: hotspots.filter(h => h.type === 'access').length,\n                  commerce: hotspots.filter(h => h.type === 'commerce').length,\n                  location: hotspots.filter(h => h.type === 'location').length\n                };\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\uD83D\\uDCCD Acceso: \", types.access]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1128,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\uD83C\\uDFEA Comercio: \", types.commerce]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1129,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\uD83D\\uDCCD Locaci\\xF3n: \", types.location]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1130,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1127,\n                  columnNumber: 25\n                }, this);\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"panel-hotspot-list\",\n              children: scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                let accessInfo = null;\n                if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                  const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                  accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                }\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    gap: 8\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [hotspot.type === 'access' ? 'Punto de Acceso' : hotspot.title || 'Hotspot', accessInfo && /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: '#38bdf8',\n                        marginLeft: 8,\n                        fontSize: 13\n                      },\n                      children: accessInfo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1146,\n                      columnNumber: 44\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1144,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      background: 'transparent',\n                      color: '#ef4444',\n                      border: 'none',\n                      fontSize: 18,\n                      cursor: 'pointer'\n                    },\n                    title: \"Eliminar hotspot\",\n                    onClick: () => {\n                      if (window.confirm('¿Eliminar este hotspot?')) handleDeleteHotspot(idx);\n                    },\n                    children: \"\\uD83D\\uDDD1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 27\n                  }, this)]\n                }, hotspot._id || idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1143,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipos de Hotspots:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              margin: '8px 0',\n              paddingLeft: '20px',\n              fontSize: '13px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83D\\uDCCD Acceso:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1159,\n                columnNumber: 21\n              }, this), \" Navega a otra escena del tour\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83C\\uDFEA Comercio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 21\n              }, this), \" Muestra informaci\\xF3n de un negocio\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83D\\uDCCD Locaci\\xF3n:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 21\n              }, this), \" Muestra informaci\\xF3n de un lugar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: '12px',\n              fontSize: '13px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Controles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 44\n            }, this), \"\\u2022 Haz doble clic en hotspots de acceso para navegar\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 68\n            }, this), \"\\u2022 Haz clic en hotspots para ver/editar informaci\\xF3n\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `editor-backdrop${open ? ' open' : ''}`,\n      onClick: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","useAdvancedTransition","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","isMobileDevice","test","navigator","userAgent","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","transitioning","transitionProgress","fade","pendingSceneIndex","startTransition","renderTransition","loadNewScene","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","accessSpheresRef","fetchTour","_tourData$scenes","_tourData$scenes2","response","getTour","tourData","data","scenes","scene","sceneIndex","hotspots","Array","isArray","filter","pitch","yaw","console","warn","log","id","_id","name","length","totalHotspots","reduce","total","_scene$hotspots","err","current","domElement","contains","removeChild","dispose","firstChild","clientWidth","window","innerWidth","clientHeight","innerHeight","Scene","camera","PerspectiveCamera","position","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","max","min","deltaY","updateProjectionMatrix","passive","animationId","animate","requestAnimationFrame","t","Date","now","forEach","sphere","sin","x","update","render","handleResize","w","h","aspect","removeEventListener","cancelAnimationFrame","currentScene","children","child","geometry","mat","remove","SphereGeometry","textureLoader","TextureLoader","imageUrl","load","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","MeshBasicMaterial","side","DoubleSide","Mesh","add","renderHotspotsForScene","color","debugHotspots","sceneData","accessHotspots","commerceHotspots","locationHotspots","i","index","targetSceneId","title","threeScene","validHotspots","radius","phi","MathUtils","degToRad","theta","y","cos","z","obj3d","MeshStandardMaterial","emissive","metalness","roughness","sceneName","isAccessHotspot","hotspotIndex","push","gradient","createRadialGradient","addColorStop","transparent","dom","lastClickTime","doubleClickNavigateToAccessHotspot","targetIdx","findIndex","s","String","targetSceneName","handleSceneTransition","availableScenes","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","obj","object","nextScene","loader","nextTexture","handleImageUpload","files","target","from","File","file","_uploadRes$data","uploadRes","uploadImage","Error","newScene","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","newHotspot","toString","refreshedTour","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","style","cursor","handleSceneClick","point","acos","atan2","radToDeg","saveNewHotspot","sceneId","addHotspot","refreshed","handleDeleteScene","deleteIdx","_","idx","newIndex","handleDeleteHotspot","hotspotIdx","enabled","lastAlpha","lastBeta","lastGamma","smoothAlpha","smoothBeta","smoothGamma","smoothFactor","getScreenOrientation","screen","orientation","angle","handleOrientation","alpha","beta","gamma","_alpha","_beta","_gamma","orient","orientRad","zee","Vector3","euler","Euler","q0","Quaternion","q1","sqrt","quaternion","setFromEuler","multiply","setFromAxisAngle","copy","handleScreenOrientation","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","onReturn","onSave","onCancel","_c","_scenes$currentSceneI","_scenes$currentSceneI2","_scenes$currentSceneI3","_scenes$currentSceneI4","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","accept","onChange","display","alignItems","justifyContent","flex","src","alt","marginLeft","stopPropagation","confirm","gap","onMouseEnter","onMouseLeave","textAlign","marginTop","types","access","commerce","location","accessInfo","find","margin","paddingLeft","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport { useAdvancedTransition } from '../../hooks/useAdvancedTransition';\n\n// Utilidad para obtener la URL absoluta de la imagen\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\nfunction TourEditor({ tourId }) {\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  // Hook personalizado para transiciones avanzadas\n  const {\n    transitioning,\n    transitionProgress,\n    fade,\n    pendingSceneIndex,\n    startTransition,\n    renderTransition,\n    loadNewScene\n  } = useAdvancedTransition(sceneRef, cameraRef, rendererRef);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        const tourData = response.data;\n        \n        // Validar y limpiar datos del tour\n        if (tourData && tourData.scenes) {\n          tourData.scenes = tourData.scenes.map((scene, sceneIndex) => {\n            if (scene.hotspots && Array.isArray(scene.hotspots)) {\n              // Limpiar hotspots inválidos\n              scene.hotspots = scene.hotspots.filter(hotspot => {\n                if (!hotspot || typeof hotspot.pitch !== 'number' || typeof hotspot.yaw !== 'number') {\n                  console.warn(`Eliminando hotspot inválido en escena ${sceneIndex}:`, hotspot);\n                  return false;\n                }\n                return true;\n              });\n            }\n            return scene;\n          });\n        }\n        \n        setTour(tourData);\n        setLoading(false);\n        \n        console.log('Tour cargado:', {\n          id: tourData._id,\n          name: tourData.name,\n          scenes: tourData.scenes?.length || 0,\n          totalHotspots: tourData.scenes?.reduce((total, scene) => total + (scene.hotspots?.length || 0), 0) || 0\n        });\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error('Error cargando tour:', err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5; // INVERTIR dirección de rotación\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (\n        rendererRef.current &&\n        rendererRef.current.domElement &&\n        containerRef.current &&\n        containerRef.current.contains(rendererRef.current.domElement)\n      ) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current con manejo optimizado de hotspots\n  useEffect(() => {\n    if (\n      !tour ||\n      !sceneRef.current ||\n      !tour.scenes ||\n      !Array.isArray(tour.scenes) ||\n      tour.scenes.length === 0 ||\n      currentSceneIndex === -1 ||\n      !tour.scenes[currentSceneIndex]\n    ) return;\n\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior completamente\n    while (scene.children.length > 0) {\n      const child = scene.children[0];\n      // Limpiar recursos de Three.js\n      if (child.geometry) child.geometry.dispose();\n      if (child.material) {\n        if (Array.isArray(child.material)) {\n          child.material.forEach(mat => mat.dispose());\n        } else {\n          child.material.dispose();\n        }\n      }\n      scene.remove(child);\n    }\n    \n    // Limpiar referencias\n    hotspotSpritesRef.current = [];\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n        }\n        \n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // --- Renderizar Hotspots con estado optimizado ---\n        renderHotspotsForScene(currentScene, scene);\n      },\n      undefined,\n      err => {\n        console.error('Error al cargar la textura:', err, imageUrl);\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      }\n    );\n  }, [tour, currentSceneIndex]);\n\n  // Función de utilidad para depurar hotspots\n  const debugHotspots = (sceneData, sceneIndex) => {\n    if (!sceneData.hotspots || !Array.isArray(sceneData.hotspots)) {\n      console.log(`Escena ${sceneIndex}: No hay hotspots`);\n      return;\n    }\n    \n    console.log(`Escena ${sceneIndex} (${sceneData.name}):`, {\n      totalHotspots: sceneData.hotspots.length,\n      accessHotspots: sceneData.hotspots.filter(h => h.type === 'access').length,\n      commerceHotspots: sceneData.hotspots.filter(h => h.type === 'commerce').length,\n      locationHotspots: sceneData.hotspots.filter(h => h.type === 'location').length,\n      hotspots: sceneData.hotspots.map((h, i) => ({\n        index: i,\n        type: h.type,\n        pitch: h.pitch,\n        yaw: h.yaw,\n        targetSceneId: h.targetSceneId,\n        title: h.title\n      }))\n    });\n  };\n\n  // Función optimizada para renderizar hotspots\n  const renderHotspotsForScene = (sceneData, threeScene) => {\n    if (!Array.isArray(sceneData.hotspots) || sceneData.hotspots.length === 0) {\n      return;\n    }\n\n    // Validar y limpiar hotspots antes de renderizar\n    const validHotspots = sceneData.hotspots.filter((hotspot, index) => {\n      // Validar que el hotspot tenga las propiedades requeridas\n      if (!hotspot || typeof hotspot.pitch !== 'number' || typeof hotspot.yaw !== 'number') {\n        console.warn(`Hotspot inválido en índice ${index}:`, hotspot);\n        return false;\n      }\n      \n      // Validar que el hotspot de acceso tenga targetSceneId\n      if (hotspot.type === 'access' && !hotspot.targetSceneId) {\n        console.warn(`Hotspot de acceso sin targetSceneId en índice ${index}:`, hotspot);\n        return false;\n      }\n      \n      return true;\n    });\n\n    console.log(`Renderizando ${validHotspots.length} hotspots válidos para la escena ${currentSceneIndex}`);\n    \n    // Depurar hotspots para esta escena\n    debugHotspots(sceneData, currentSceneIndex);\n\n    validHotspots.forEach((hotspot, index) => {\n      try {\n        // Convertir pitch/yaw a coordenadas cartesianas\n        const radius = 500;\n        const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n        const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n        const x = radius * Math.sin(phi) * Math.sin(theta);\n        const y = radius * Math.cos(phi);\n        const z = radius * Math.sin(phi) * Math.cos(theta);\n\n        let obj3d;\n        \n        if (hotspot.type === 'access') {\n          // Esfera 3D para access con mejor visualización\n          const geometry = new THREE.SphereGeometry(12, 32, 32);\n          const material = new THREE.MeshStandardMaterial({ \n            color: 0x38bdf8, \n            emissive: 0x0ea5e9, \n            metalness: 0.3, \n            roughness: 0.5 \n          });\n          obj3d = new THREE.Mesh(geometry, material);\n          \n          // Agregar información adicional al hotspot para mejor navegación\n          obj3d.userData.hotspot = { \n            ...hotspot, \n            sceneIndex: currentSceneIndex,\n            sceneName: sceneData.name\n          };\n          obj3d.userData.isAccessHotspot = true;\n          obj3d.userData.hotspotIndex = index;\n          accessSpheresRef.current.push(obj3d);\n        } else {\n          // Sprite para otros tipos con mejor diseño\n          const size = 64;\n          const canvas = document.createElement('canvas');\n          canvas.width = size;\n          canvas.height = size;\n          const ctx = canvas.getContext('2d');\n          \n          // Fondo con gradiente\n          const gradient = ctx.createRadialGradient(size/2, size/2, 0, size/2, size/2, size/2);\n          gradient.addColorStop(0, '#38bdf8');\n          gradient.addColorStop(1, '#0ea5e9');\n          ctx.fillStyle = gradient;\n          ctx.beginPath();\n          ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n          ctx.fill();\n          \n          // Borde blanco\n          ctx.lineWidth = 4;\n          ctx.strokeStyle = '#fff';\n          ctx.stroke();\n          \n          // Sombra\n          ctx.shadowColor = '#0ea5e9';\n          ctx.shadowBlur = 8;\n          \n          const texture = new THREE.CanvasTexture(canvas);\n          const material = new THREE.SpriteMaterial({ \n            map: texture, \n            depthTest: false,\n            transparent: true\n          });\n          obj3d = new THREE.Sprite(material);\n          obj3d.scale.set(20, 20, 1);\n          obj3d.userData.hotspot = { \n            ...hotspot, \n            sceneIndex: currentSceneIndex,\n            sceneName: sceneData.name\n          };\n          obj3d.userData.hotspotIndex = index;\n        }\n        \n        obj3d.position.set(x, y, z);\n        threeScene.add(obj3d);\n        hotspotSpritesRef.current.push(obj3d);\n        \n      } catch (error) {\n        console.error('Error renderizando hotspot:', error, hotspot);\n      }\n    });\n  };\n\n  // --- Detección de clics en hotspots optimizada ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current || !tour) return;\n    \n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    \n    // Función optimizada para navegar a hotspots de acceso\n    const doubleClickNavigateToAccessHotspot = (hotspot) => {\n      if (!hotspot || hotspot.type !== 'access' || !hotspot.targetSceneId) {\n        console.log('Hotspot inválido para navegación:', hotspot);\n        return;\n      }\n      \n      // Buscar la escena destino usando diferentes métodos de comparación\n      let targetIdx = -1;\n      \n      // Método 1: Comparación directa de IDs\n      targetIdx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n      \n      // Método 2: Si no se encuentra, buscar por índice (fallback)\n      if (targetIdx === -1 && typeof hotspot.targetSceneId === 'number') {\n        targetIdx = hotspot.targetSceneId;\n      }\n      \n      // Método 3: Buscar por nombre de escena (fallback adicional)\n      if (targetIdx === -1 && hotspot.targetSceneName) {\n        targetIdx = tour.scenes.findIndex(s => s.name === hotspot.targetSceneName);\n      }\n      \n      if (targetIdx !== -1 && targetIdx < tour.scenes.length) {\n        console.log(`Navegando de escena ${currentSceneIndex} a escena ${targetIdx}`);\n                        handleSceneTransition(targetIdx);\n      } else {\n        console.error('Escena destino no encontrada:', {\n          targetSceneId: hotspot.targetSceneId,\n          availableScenes: tour.scenes.map((s, i) => ({ index: i, id: s._id, name: s.name }))\n        });\n      }\n    };\n    \n    // Función optimizada para manejar clics en hotspots\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      \n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      \n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      \n      // Usar todos los objetos de la escena actual para detectar hotspots\n      const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        \n        // Verificar si es un hotspot\n        if (obj.userData && obj.userData.hotspot) {\n          const hotspot = obj.userData.hotspot;\n          \n          if (obj.userData.isAccessHotspot) {\n            if (now - lastClickTime < 400) { // doble click\n              console.log('Doble clic en hotspot de acceso:', hotspot);\n              doubleClickNavigateToAccessHotspot(hotspot);\n            }\n            lastClickTime = now;\n          } else {\n            console.log('Clic en hotspot informativo:', hotspot);\n            setSelectedHotspot(hotspot);\n          }\n        }\n      }\n    }\n    \n    dom.addEventListener('pointerdown', onPointerDown);\n    \n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex, hotspotSpritesRef.current]);\n\n  // Animación de transición optimizada\n  // Función para manejar transiciones entre escenas\n  const handleSceneTransition = (targetIdx) => {\n    if (startTransition(targetIdx, currentSceneIndex)) {\n      // Limpiar estados de hotspots antes de la transición\n      setSelectedHotspot(null);\n      setPlacementMode(false);\n      console.log(`Transición iniciada hacia escena ${targetIdx}`);\n    }\n  };\n\n  // Efecto para manejar transiciones cuando se completa\n  useEffect(() => {\n    if (!pendingSceneIndex || !tour) return;\n    \n    const nextScene = tour.scenes[pendingSceneIndex];\n    if (!nextScene) return;\n    \n    // Cargar la nueva textura y renderizar la transición\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(nextScene.image), (nextTexture) => {\n      const sceneData = {\n        texture: nextTexture,\n        hotspots: nextScene.hotspots || []\n      };\n      renderTransition(nextTexture, sceneData);\n    });\n  }, [pendingSceneIndex, tour, renderTransition]);\n\n\n\n\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async (e) => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async (files) => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot optimizado\n  const handleSaveHotspot = async (hotspotData) => {\n    try {\n      console.log('Guardando hotspot:', hotspotData);\n      \n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n\n      if (hotspotData._id) {\n        // Actualizar hotspot existente\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = {\n            ...currentScene.hotspots[index],\n            ...hotspotData\n          };\n        }\n      } else {\n        // Crear nuevo hotspot\n        const newHotspot = {\n          ...hotspotData,\n          _id: Date.now().toString()\n        };\n        currentScene.hotspots.push(newHotspot);\n      }\n\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      \n      // Guardar en el backend\n      await api.updateTour(tourId, updatedTour);\n      \n      // Recargar el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      const refreshedTour = response.data ? response.data : response;\n      setTour(refreshedTour);\n      \n      // Limpiar estados\n      setSelectedHotspot(null);\n      setPlacementMode(false);\n      \n      console.log('Hotspot guardado exitosamente');\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = (hotspotData) => {\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Efecto unificado para manejar el modo de colocación de hotspots\n  useEffect(() => {\n    if (!rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n\n    const dom = rendererRef.current.domElement;\n\n    if (placementMode) {\n      dom.style.cursor = 'crosshair';\n      // Elimina overlay visual, solo usa cursor\n      // El handler de click está en el canvas principal (ver más abajo)\n    } else {\n      dom.style.cursor = '';\n    }\n  }, [placementMode, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = (event) => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({ pitch, yaw });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST optimizado\n  const saveNewHotspot = async (hotspotData) => {\n    try {\n      console.log('Guardando nuevo hotspot:', hotspotData);\n      \n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) {\n        throw new Error('Tour o escena no disponible');\n      }\n      \n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      \n      // Obtener el hotspot creado\n      const newHotspot = response.data ? response.data : response;\n      console.log('Hotspot creado en backend:', newHotspot);\n      \n      // Actualizar el estado local\n      const updatedTour = { ...tour };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      \n      // Limpiar estados\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      setPlacementMode(false);\n      \n      // Recargar el tour desde la API para asegurar sincronización completa\n      const refreshed = await api.getTour(tourId);\n      const refreshedTour = refreshed.data ? refreshed.data : refreshed;\n      setTour(refreshedTour);\n      \n      console.log('Nuevo hotspot guardado exitosamente');\n    } catch (error) {\n      console.error('Error al guardar el hotspot:', error);\n      alert(`Error al guardar el hotspot: ${error.message || 'Intente nuevamente'}`);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      setPlacementMode(false);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async (deleteIdx) => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => { window.handleDeleteScene = undefined; };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async (hotspotIdx) => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = { ...updatedScenes[currentSceneIndex] };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = { ...tour, scenes: updatedScenes };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  // --- GIROSCOPIO: Lógica de activación y manejo estilo YouTube 360 ---\n  useEffect(() => {\n    if (!isMobileDevice() || !cameraRef.current || !controlsRef.current) return;\n\n    // Habilitar/deshabilitar OrbitControls según el estado del giroscopio\n    controlsRef.current.enabled = true;\n\n    let lastAlpha = 0, lastBeta = 0, lastGamma = 0;\n    let smoothAlpha = 0, smoothBeta = 0, smoothGamma = 0;\n    const smoothFactor = 0.15;\n\n    function getScreenOrientation() {\n      if (window.screen.orientation && window.screen.orientation.angle !== undefined) {\n        return window.screen.orientation.angle;\n      }\n      return window.orientation || 0;\n    }\n\n    function handleOrientation(event) {\n      let alpha = event.alpha || 0;\n      let beta = event.beta || 0;\n      let gamma = event.gamma || 0;\n\n      // INVERTIR alpha para invertir la rotación horizontal\n      alpha = -alpha;\n\n      smoothAlpha = smoothAlpha * (1 - smoothFactor) + alpha * smoothFactor;\n      smoothBeta = smoothBeta * (1 - smoothFactor) + beta * smoothFactor;\n      smoothGamma = smoothGamma * (1 - smoothFactor) + gamma * smoothFactor;\n\n      const _alpha = THREE.MathUtils.degToRad(smoothAlpha);\n      const _beta = THREE.MathUtils.degToRad(smoothBeta);\n      const _gamma = THREE.MathUtils.degToRad(smoothGamma);\n\n      const orient = getScreenOrientation();\n      const orientRad = THREE.MathUtils.degToRad(orient);\n\n      const zee = new THREE.Vector3(0, 0, 1);\n      const euler = new THREE.Euler();\n      const q0 = new THREE.Quaternion();\n      const q1 = new THREE.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n\n      euler.set(_beta, _alpha, -_gamma, 'YXZ');\n      let quaternion = new THREE.Quaternion().setFromEuler(euler);\n      quaternion.multiply(q1);\n      quaternion.multiply(q0.setFromAxisAngle(zee, -orientRad));\n\n      cameraRef.current.quaternion.copy(quaternion);\n    }\n\n    window.addEventListener('deviceorientation', handleOrientation, true);\n\n    const handleScreenOrientation = () => {\n      smoothAlpha = lastAlpha;\n      smoothBeta = lastBeta;\n      smoothGamma = lastGamma;\n    };\n    window.addEventListener('orientationchange', handleScreenOrientation);\n\n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation, true);\n      window.removeEventListener('orientationchange', handleScreenOrientation);\n      // Rehabilitar OrbitControls al salir del modo giroscopio\n      if (controlsRef.current) controlsRef.current.enabled = true;\n    };\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading\">Cargando tour...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return (\n      <div className=\"tour-editor\">\n        <div ref={containerRef} className=\"three-container\" />\n        <ControlPanel\n          open={panelOpen}\n          setOpen={setPanelOpen}\n          tour={tour}\n          handleDragDropImage={handleDragDropImage}\n          handleImageUpload={handleImageUpload}\n          scenes={[]}\n          placementMode={placementMode}\n          setPlacementMode={setPlacementMode}\n          onReturn={() => navigate('/hub')}\n          handleDeleteHotspot={handleDeleteHotspot}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tour-editor\">\n      <div\n        ref={containerRef}\n        className=\"three-container\"\n        onClick={handleSceneClick}\n      />\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <ControlPanel\n        open={panelOpen}\n        setOpen={setPanelOpen}\n        tour={tour}\n        handleDragDropImage={handleDragDropImage}\n        handleImageUpload={handleImageUpload}\n        scenes={tour.scenes}\n        currentSceneIndex={currentSceneIndex}\n        setCurrentSceneIndex={setCurrentSceneIndex}\n        placementMode={placementMode}\n        setPlacementMode={setPlacementMode}\n        onReturn={() => navigate('/hub')}\n        handleDeleteHotspot={handleDeleteHotspot}\n      />\n      {(selectedHotspot || pendingHotspot) && (\n        <HotspotEditor\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\n          scenes={tour.scenes}\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\n          onCancel={() => {\n            setSelectedHotspot(null);\n            setPlacementMode(false);\n            setPendingHotspot(null);\n          }}\n        />\n      )}\n      {showHotspotModal && newHotspotPosition && (\n        <HotspotCreationModal\n          position={newHotspotPosition}\n          tour={tour}\n          currentSceneIndex={currentSceneIndex}\n          onSave={saveNewHotspot}\n          onCancel={() => {\n            setShowHotspotModal(false);\n            setNewHotspotPosition(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Panel lateral plegable\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  placementMode,\n  setPlacementMode,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return (\n    <>\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\n        <div className=\"panel-header\">\n          <span className=\"panel-title\">Tour Virtual 360°</span>\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\n            {open ? <>&#10094;</> : <>&#10095;</>}\n          </button>\n        </div>\n        {open && (\n          <div className=\"panel-content\">\n            <button\n              className=\"btn-return-hub\"\n              onClick={onReturn}\n              style={{\n                background: '#23272f',\n                color: '#38bdf8',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 0',\n                fontSize: '1rem',\n                fontWeight: 500,\n                marginBottom: 18,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s, color 0.2s'\n              }}\n            >\n              ← Volver al Hub\n            </button>\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\n            <div className=\"panel-section\">\n              <h3>Imágenes 360°</h3>\n              <DragDrop onFileUpload={handleDragDropImage} />\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div className=\"panel-section\">\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\n              {scenes.length === 0 ? (\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\n              ) : (\n                <ul className=\"panel-image-list\">\n                  {scenes.map((scene, idx) => (\n                    <li\n                      key={scene._id || idx}\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\n                      style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center', flex: 1, cursor: 'pointer' }} onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}>\n                        <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\n                        <span>{scene.name}</span>\n                      </div>\n                      {scenes.length > 1 && (\n                        <button\n                          className=\"btn-delete-scene\"\n                          style={{ background: 'transparent', color: '#ef4444', border: 'none', marginLeft: 8, fontSize: 20, cursor: 'pointer' }}\n                          title=\"Eliminar escena\"\n                          onClick={e => {\n                            e.stopPropagation();\n                            if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                              if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                            }\n                          }}\n                        >\n                          🗑️\n                        </button>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            <div className=\"panel-section\">\n              <h3>Hotspots de la Escena ({scenes[currentSceneIndex]?.hotspots?.length || 0})</h3>\n              <div className=\"hotspot-controls\" style={{marginBottom: 15}}>\n                <button\n                  className=\"btn-add-hotspot\"\n                  onClick={() => setPlacementMode(true)}\n                  title=\"Haz clic para activar el modo de colocación de hotspots. Luego haz clic en la imagen 360° donde quieras colocar el hotspot.\"\n                  style={{\n                    background: '#38bdf8',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: 8,\n                    padding: '10px 16px',\n                    fontSize: '14px',\n                    fontWeight: 500,\n                    cursor: 'pointer',\n                    width: '100%',\n                    transition: 'background 0.2s',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    gap: 8,\n                    position: 'relative'\n                  }}\n                  onMouseEnter={(e) => e.target.style.background = '#0ea5e9'}\n                  onMouseLeave={(e) => e.target.style.background = '#38bdf8'}\n                >\n                  <span style={{fontSize: '16px'}}>📍</span>\n                  Agregar Hotspot\n                </button>\n                {placementMode && (\n                  <div className=\"placement-mode-indicator\">\n                    <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8}}>\n                      <strong>Modo de colocación activado</strong>\n                      <button\n                        onClick={() => setPlacementMode(false)}\n                        style={{\n                          background: 'transparent',\n                          border: '1px solid #ef4444',\n                          color: '#ef4444',\n                          borderRadius: 4,\n                          padding: '4px 8px',\n                          fontSize: '11px',\n                          cursor: 'pointer',\n                          transition: 'all 0.2s'\n                        }}\n                        onMouseEnter={(e) => {\n                          e.target.style.background = '#ef4444';\n                          e.target.style.color = '#fff';\n                        }}\n                        onMouseLeave={(e) => {\n                          e.target.style.background = 'transparent';\n                          e.target.style.color = '#ef4444';\n                        }}\n                      >\n                        Cancelar\n                      </button>\n                    </div>\n                    Haz clic en la imagen 360° para colocar el hotspot\n                  </div>\n                )}\n              </div>\n              {scenes[currentSceneIndex]?.hotspots?.length === 0 ? (\n                <div style={{\n                  background: '#1e293b',\n                  border: '1px dashed #334155',\n                  borderRadius: 6,\n                  padding: '20px',\n                  textAlign: 'center',\n                  color: '#64748b',\n                  fontSize: '14px'\n                }}>\n                  <div style={{fontSize: '24px', marginBottom: '8px'}}>📍</div>\n                  No hay hotspots en esta escena\n                  <div style={{fontSize: '12px', marginTop: '4px'}}>\n                    Haz clic en \"Agregar Hotspot\" para comenzar\n                  </div>\n                </div>\n              ) : (\n                <>\n                  {/* Resumen de tipos de hotspots */}\n                  <div style={{\n                    background: '#1e293b',\n                    border: '1px solid #334155',\n                    borderRadius: 6,\n                    padding: '8px 12px',\n                    marginBottom: '12px',\n                    fontSize: '12px',\n                    color: '#94a3b8'\n                  }}>\n                    {(() => {\n                      const hotspots = scenes[currentSceneIndex].hotspots;\n                      const types = {\n                        access: hotspots.filter(h => h.type === 'access').length,\n                        commerce: hotspots.filter(h => h.type === 'commerce').length,\n                        location: hotspots.filter(h => h.type === 'location').length\n                      };\n                      return (\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                          <span>📍 Acceso: {types.access}</span>\n                          <span>🏪 Comercio: {types.commerce}</span>\n                          <span>📍 Locación: {types.location}</span>\n                        </div>\n                      );\n                    })()}\n                  </div>\n                  <ul className=\"panel-hotspot-list\">\n                    {scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                      let accessInfo = null;\n                      if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                        const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                        accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                      }\n                      return (\n                        <li key={hotspot._id || idx} style={{display:'flex',alignItems:'center',justifyContent:'space-between',gap:8}}>\n                          <span>\n                            {hotspot.type === 'access' ? 'Punto de Acceso' : (hotspot.title || 'Hotspot')}\n                            {accessInfo && <span style={{color:'#38bdf8',marginLeft:8,fontSize:13}}>{accessInfo}</span>}\n                          </span>\n                          <button style={{background:'transparent',color:'#ef4444',border:'none',fontSize:18,cursor:'pointer'}} title=\"Eliminar hotspot\" onClick={()=>{if(window.confirm('¿Eliminar este hotspot?'))handleDeleteHotspot(idx)}}>🗑️</button>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </>\n              )}\n            </div>\n            <div className=\"panel-section panel-hint\">\n              <p><strong>Tipos de Hotspots:</strong></p>\n              <ul style={{margin: '8px 0', paddingLeft: '20px', fontSize: '13px'}}>\n                <li><strong>📍 Acceso:</strong> Navega a otra escena del tour</li>\n                <li><strong>🏪 Comercio:</strong> Muestra información de un negocio</li>\n                <li><strong>📍 Locación:</strong> Muestra información de un lugar</li>\n              </ul>\n              <p style={{marginTop: '12px', fontSize: '13px'}}>\n                <strong>Controles:</strong><br/>\n                • Haz doble clic en hotspots de acceso para navegar<br/>\n                • Haz clic en hotspots para ver/editar información\n              </p>\n            </div>\n          </div>\n        )}\n      </aside>\n      <div className={`editor-backdrop${open ? ' open' : ''}`} onClick={() => setOpen(false)} />\n    </>\n  );\n}\n\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}