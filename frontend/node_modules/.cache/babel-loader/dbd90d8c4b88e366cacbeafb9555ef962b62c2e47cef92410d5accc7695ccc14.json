{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fixRequestBody = fixRequestBody;\nconst querystring = require(\"querystring\");\n/**\n * Fix proxied body if bodyParser is involved.\n */\nfunction fixRequestBody(proxyReq, req) {\n  // skip fixRequestBody() when req.readableLength not 0 (bodyParser failure)\n  if (req.readableLength !== 0) {\n    return;\n  }\n  const requestBody = req.body;\n  if (!requestBody) {\n    return;\n  }\n  const contentType = proxyReq.getHeader('Content-Type');\n  if (!contentType) {\n    return;\n  }\n  const writeBody = bodyData => {\n    proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n    proxyReq.write(bodyData);\n  };\n  // Use if-elseif to prevent multiple writeBody/setHeader calls:\n  // Error: \"Cannot set headers after they are sent to the client\"\n  if (contentType.includes('application/json') || contentType.includes('+json')) {\n    writeBody(JSON.stringify(requestBody));\n  } else if (contentType.includes('application/x-www-form-urlencoded')) {\n    writeBody(querystring.stringify(requestBody));\n  } else if (contentType.includes('multipart/form-data')) {\n    writeBody(handlerFormDataBodyData(contentType, requestBody));\n  }\n}\n/**\n * format FormData data\n * @param contentType\n * @param data\n * @returns\n */\nfunction handlerFormDataBodyData(contentType, data) {\n  const boundary = contentType.replace(/^.*boundary=(.*)$/, '$1');\n  let str = '';\n  for (const [key, value] of Object.entries(data)) {\n    str += `--${boundary}\\r\\nContent-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n${value}\\r\\n`;\n  }\n  return str;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","fixRequestBody","querystring","require","proxyReq","req","readableLength","requestBody","body","contentType","getHeader","writeBody","bodyData","setHeader","Buffer","byteLength","write","includes","JSON","stringify","handlerFormDataBodyData","data","boundary","replace","str","key","entries"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/node_modules/http-proxy-middleware/dist/handlers/fix-request-body.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixRequestBody = fixRequestBody;\nconst querystring = require(\"querystring\");\n/**\n * Fix proxied body if bodyParser is involved.\n */\nfunction fixRequestBody(proxyReq, req) {\n    // skip fixRequestBody() when req.readableLength not 0 (bodyParser failure)\n    if (req.readableLength !== 0) {\n        return;\n    }\n    const requestBody = req.body;\n    if (!requestBody) {\n        return;\n    }\n    const contentType = proxyReq.getHeader('Content-Type');\n    if (!contentType) {\n        return;\n    }\n    const writeBody = (bodyData) => {\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n        proxyReq.write(bodyData);\n    };\n    // Use if-elseif to prevent multiple writeBody/setHeader calls:\n    // Error: \"Cannot set headers after they are sent to the client\"\n    if (contentType.includes('application/json') || contentType.includes('+json')) {\n        writeBody(JSON.stringify(requestBody));\n    }\n    else if (contentType.includes('application/x-www-form-urlencoded')) {\n        writeBody(querystring.stringify(requestBody));\n    }\n    else if (contentType.includes('multipart/form-data')) {\n        writeBody(handlerFormDataBodyData(contentType, requestBody));\n    }\n}\n/**\n * format FormData data\n * @param contentType\n * @param data\n * @returns\n */\nfunction handlerFormDataBodyData(contentType, data) {\n    const boundary = contentType.replace(/^.*boundary=(.*)$/, '$1');\n    let str = '';\n    for (const [key, value] of Object.entries(data)) {\n        str += `--${boundary}\\r\\nContent-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n${value}\\r\\n`;\n    }\n    return str;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGA,cAAc;AACvC,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC1C;AACA;AACA;AACA,SAASF,cAAcA,CAACG,QAAQ,EAAEC,GAAG,EAAE;EACnC;EACA,IAAIA,GAAG,CAACC,cAAc,KAAK,CAAC,EAAE;IAC1B;EACJ;EACA,MAAMC,WAAW,GAAGF,GAAG,CAACG,IAAI;EAC5B,IAAI,CAACD,WAAW,EAAE;IACd;EACJ;EACA,MAAME,WAAW,GAAGL,QAAQ,CAACM,SAAS,CAAC,cAAc,CAAC;EACtD,IAAI,CAACD,WAAW,EAAE;IACd;EACJ;EACA,MAAME,SAAS,GAAIC,QAAQ,IAAK;IAC5BR,QAAQ,CAACS,SAAS,CAAC,gBAAgB,EAAEC,MAAM,CAACC,UAAU,CAACH,QAAQ,CAAC,CAAC;IACjER,QAAQ,CAACY,KAAK,CAACJ,QAAQ,CAAC;EAC5B,CAAC;EACD;EACA;EACA,IAAIH,WAAW,CAACQ,QAAQ,CAAC,kBAAkB,CAAC,IAAIR,WAAW,CAACQ,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC3EN,SAAS,CAACO,IAAI,CAACC,SAAS,CAACZ,WAAW,CAAC,CAAC;EAC1C,CAAC,MACI,IAAIE,WAAW,CAACQ,QAAQ,CAAC,mCAAmC,CAAC,EAAE;IAChEN,SAAS,CAACT,WAAW,CAACiB,SAAS,CAACZ,WAAW,CAAC,CAAC;EACjD,CAAC,MACI,IAAIE,WAAW,CAACQ,QAAQ,CAAC,qBAAqB,CAAC,EAAE;IAClDN,SAAS,CAACS,uBAAuB,CAACX,WAAW,EAAEF,WAAW,CAAC,CAAC;EAChE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASa,uBAAuBA,CAACX,WAAW,EAAEY,IAAI,EAAE;EAChD,MAAMC,QAAQ,GAAGb,WAAW,CAACc,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC;EAC/D,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,MAAM,CAACC,GAAG,EAAEzB,KAAK,CAAC,IAAIH,MAAM,CAAC6B,OAAO,CAACL,IAAI,CAAC,EAAE;IAC7CG,GAAG,IAAI,KAAKF,QAAQ,6CAA6CG,GAAG,YAAYzB,KAAK,MAAM;EAC/F;EACA,OAAOwB,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}