{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\TourViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\nimport { getAbsoluteImageUrl, isMobileDevice, createHotspotSprite, createPointerHandlers, loadOptimizedTexture, createOptimizedSphereGeometry, navigateToAccessHotspot, createOptimizedControls, createZoomHandler, createOptimizedRenderer } from '../../utils/tourUtils';\n\n// Funciones locales específicas del viewer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TourViewer() {\n  _s();\n  const {\n    tourId\n  } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({\n                color: 0x38bdf8,\n                emissive: 0x0ea5e9,\n                metalness: 0.3,\n                roughness: 0.5\n              });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    // Función para manejar clics en hotspots\n    const handleHotspotClick = hotspot => {\n      if (navigateToAccessHotspot(hotspot, tour, startTransition)) {\n        // Navegación exitosa\n      }\n    };\n\n    // Crear manejadores de eventos optimizados\n    const {\n      onPointerDown,\n      onPointerMove\n    } = createPointerHandlers(dom, camera, getAccessSpheres, handleHotspotClick);\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement) containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (transitioning) return; // Evitar doble trigger\n    const scene = sceneRef.current;\n    const renderer = rendererRef.current;\n    // Capturar textura de la escena actual\n    const renderTarget = new THREE.WebGLRenderTarget(renderer.domElement.width, renderer.domElement.height);\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(scene, cameraRef.current);\n    renderer.setRenderTarget(null);\n    setPrevTexture(renderTarget.texture);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n  }\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: \"Tour no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyro-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `gyro-toggle ${gyroEnabled ? 'active' : ''}`,\n        onClick: requestGyroPermission,\n        title: \"Activar giroscopio\",\n        children: \"\\uD83C\\uDF00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-return\",\n        onClick: () => navigate('/'),\n        children: \"Volver al mapa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n}\n_s(TourViewer, \"WbRvMpSRMpHD2XPSccGKBMXAaRg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TourViewer;\nexport default TourViewer;\nvar _c;\n$RefreshReg$(_c, \"TourViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","api","useParams","useNavigate","RadialFadeMaterial","getAbsoluteImageUrl","isMobileDevice","createHotspotSprite","createPointerHandlers","loadOptimizedTexture","createOptimizedSphereGeometry","navigateToAccessHotspot","createOptimizedControls","createZoomHandler","createOptimizedRenderer","jsxDEV","_jsxDEV","TourViewer","_s","tourId","tour","setTour","loading","setLoading","error","setError","currentSceneIndex","setCurrentSceneIndex","fade","setFade","pendingSceneIndex","setPendingSceneIndex","containerRef","navigate","cameraRef","sceneRef","rendererRef","transitioning","setTransitioning","transitionProgress","setTransitionProgress","prevTexture","setPrevTexture","isMobile","setIsMobile","gyroEnabled","setGyroEnabled","gyroControls","setGyroControls","fetchTour","response","getTour","data","err","requestGyroPermission","DeviceOrientationEvent","requestPermission","permission","console","scenes","length","current","firstChild","removeChild","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableDamping","dampingFactor","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","Math","max","min","deltaY","updateProjectionMatrix","passive","loadScene","index","children","remove","sceneData","geometry","SphereGeometry","scale","textureLoader","TextureLoader","load","image","texture","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","forEach","hotspot","type","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","hGeo","hMat","MeshStandardMaterial","color","emissive","metalness","roughness","hMesh","userData","isAccessHotspot","hoveredObj","animate","requestAnimationFrame","accessSpheres","traverse","obj","push","t","Date","now","update","render","lastClickTime","dom","getAccessSpheres","arr","handleHotspotClick","startTransition","onPointerDown","onPointerMove","handleResize","aspect","removeEventListener","dispose","disconnect","targetIdx","renderTarget","WebGLRenderTarget","width","height","setRenderTarget","startFov","endFov","duration","start","animateZoomOut","ts","progress","setTimeout","currentScene","loader","nextTexture","renderTransition","uniforms","uProgress","value","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/TourViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\nimport {\n  getAbsoluteImageUrl,\n  isMobileDevice,\n  createHotspotSprite,\n  createPointerHandlers,\n  loadOptimizedTexture,\n  createOptimizedSphereGeometry,\n  navigateToAccessHotspot,\n  createOptimizedControls,\n  createZoomHandler,\n  createOptimizedRenderer\n} from '../../utils/tourUtils';\n\n// Funciones locales específicas del viewer\n\nfunction TourViewer() {\n  const { tourId } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    // Cargar escena actual\n    const loadScene = (index) => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    // Función para manejar clics en hotspots\n    const handleHotspotClick = (hotspot) => {\n      if (navigateToAccessHotspot(hotspot, tour, startTransition)) {\n        // Navegación exitosa\n      }\n    };\n\n    // Crear manejadores de eventos optimizados\n    const { onPointerDown, onPointerMove } = createPointerHandlers(\n      dom,\n      camera,\n      getAccessSpheres,\n      handleHotspotClick\n    );\n\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement)\n          containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (transitioning) return; // Evitar doble trigger\n    const scene = sceneRef.current;\n    const renderer = rendererRef.current;\n    // Capturar textura de la escena actual\n    const renderTarget = new THREE.WebGLRenderTarget(\n      renderer.domElement.width,\n      renderer.domElement.height\n    );\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(scene, cameraRef.current);\n    renderer.setRenderTarget(null);\n    setPrevTexture(renderTarget.texture);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n  }\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);\n        else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n\n  if (loading) {\n    return <div className=\"viewer-loading\">Cargando tour...</div>;\n  }\n  if (error) {\n    return <div className=\"viewer-error\">{error}</div>;\n  }\n  if (!tour) {\n    return <div className=\"viewer-error\">Tour no encontrado</div>;\n  }\n\n  return (\n    <div className=\"tour-viewer-container\">\n      <div ref={containerRef} className=\"three-container\"></div>\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <div className=\"gyro-controls\">\n        <button\n          className={`gyro-toggle ${gyroEnabled ? 'active' : ''}`}\n          onClick={requestGyroPermission}\n          title=\"Activar giroscopio\"\n        >\n          🌀\n        </button>\n        <button className=\"btn-return\" onClick={() => navigate('/')}>Volver al mapa</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TourViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}