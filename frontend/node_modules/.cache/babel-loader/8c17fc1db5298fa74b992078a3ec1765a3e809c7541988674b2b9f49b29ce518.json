{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport SceneManager from './SceneManager';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      // Anisotropía para mayor nitidez\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let file;\n    if (e.target && e.target.files && e.target.files[0]) {\n      file = e.target.files[0];\n    } else if (e instanceof File) {\n      file = e;\n    } else if (e && e.target && e.target.files) {\n      file = e.target.files[0];\n    }\n    if (!file) return;\n    try {\n      var _uploadRes$data;\n      // Asegura que imageUrl siempre sea un string válido\n      let uploadRes = await api.uploadImage(file);\n      let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n      if (!imageUrl) {\n        throw new Error('No se recibió la URL de la imagen');\n      }\n      const newScene = {\n        name: `Escena ${tour.scenes.length + 1}`,\n        image: imageUrl,\n        hotspots: []\n      };\n      const updatedTour = {\n        ...tour,\n        scenes: [...tour.scenes, newScene]\n      };\n      const savedTour = await api.updateTour(tourId, updatedTour);\n      setTour(savedTour.data ? savedTour.data : savedTour);\n      setCurrentSceneIndex(updatedTour.scenes.length - 1);\n    } catch (err) {\n      console.error('Error subiendo imagen:', err);\n      alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async file => {\n    await handleImageUpload(file);\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const handlePointerDown = event => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - phi * 180 / Math.PI;\n      const yaw = theta * 180 / Math.PI;\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.z, point.x);\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async hotspotData => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Actualizar el tour localmente\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, response];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      setIsAddingHotspot: () => setPlacementMode(true),\n      onReturn: () => navigate('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"qajnuCh9c5WYh7JNDUB5cW3EU5A=\", false, function () {\n  return [useNavigate];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                alt: scene.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: scene.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 23\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Haz clic en \\\"Agregar Punto de Acceso\\\" en la vista principal para conectar im\\xE1genes entre s\\xED.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-hotspot\",\n          onClick: () => setIsAddingHotspot && setIsAddingHotspot(true),\n          children: \"\\u2795 Agregar Punto de Acceso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), !open && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-toggle-collapsed\",\n      onClick: () => setOpen(true),\n      \"aria-label\": \"Abrir panel de control\",\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","SceneManager","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","sceneRef","cameraRef","rendererRef","controlsRef","fetchTour","response","getTour","data","err","console","current","domElement","contains","removeChild","dispose","firstChild","width","clientWidth","window","innerWidth","height","clientHeight","innerHeight","scene","Scene","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","animationId","animate","requestAnimationFrame","update","render","handleResize","w","h","aspect","updateProjectionMatrix","addEventListener","removeEventListener","cancelAnimationFrame","scenes","Array","isArray","length","currentScene","children","remove","geometry","SphereGeometry","scale","textureLoader","TextureLoader","imageUrl","load","texture","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","Math","min","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","color","handleImageUpload","e","file","target","files","File","_uploadRes$data","uploadRes","uploadImage","Error","newScene","name","hotspots","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","_id","index","findIndex","push","Date","now","toString","handlePointerDown","event","button","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","vector","Vector3","unproject","camPos","dir","sub","normalize","phi","acos","theta","atan2","z","pitch","PI","yaw","Number","toFixed","dom","style","cursor","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","handleSceneClick","mouse","Vector2","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","point","radius","MathUtils","radToDeg","saveNewHotspot","sceneId","addHotspot","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","onClick","onReturn","hotspot","onSave","onCancel","_c","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","type","id","accept","onChange","display","idx","src","alt","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport SceneManager from './SceneManager';\r\nimport HotspotEditor from './HotspotEditor';\r\nimport api from '../../services/api';\r\nimport DragDrop from './DragDrop';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TourEditor.css';\r\nimport ApiKeyManager from './ApiKeyManager';\r\nimport HotspotCreationModal from './HotspotCreationModal';\r\n\r\n// Utilidad para obtener la URL absoluta de la imagen\r\nfunction getAbsoluteImageUrl(image) {\r\n  if (!image) return '';\r\n  if (image.startsWith('/uploads/')) {\r\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\r\n  }\r\n  return image;\r\n}\r\n\r\nfunction TourEditor({ tourId }) {\r\n  const containerRef = useRef();\r\n  const [tour, setTour] = useState(null);\r\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\r\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\r\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [panelOpen, setPanelOpen] = useState(true);\r\n  const [pendingHotspot, setPendingHotspot] = useState(null);\r\n  const [placementMode, setPlacementMode] = useState(false);\r\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\r\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Referencias de Three.js\r\n  const sceneRef = useRef();\r\n  const cameraRef = useRef();\r\n  const rendererRef = useRef();\r\n  const controlsRef = useRef();\r\n\r\n  // Cargar tour desde la API\r\n  useEffect(() => {\r\n    const fetchTour = async () => {\r\n      try {\r\n        const response = await api.getTour(tourId);\r\n        setTour(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al cargar el tour');\r\n        setLoading(false);\r\n        console.error(err);\r\n      }\r\n    };\r\n    fetchTour();\r\n  }, [tourId]);\r\n\r\n  // Inicializar Three.js\r\n  useEffect(() => {\r\n    if (!tour || loading) return;\r\n\r\n    // Limpiar canvas anterior si existe\r\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\r\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\r\n        containerRef.current.removeChild(rendererRef.current.domElement);\r\n      }\r\n      rendererRef.current.dispose();\r\n    }\r\n\r\n    // Eliminar cualquier canvas sobrante (por si acaso)\r\n    if (containerRef.current) {\r\n      while (containerRef.current.firstChild) {\r\n        containerRef.current.removeChild(containerRef.current.firstChild);\r\n      }\r\n    }\r\n\r\n    // Usar el tamaño del contenedor para el renderer\r\n    const width = containerRef.current.clientWidth || window.innerWidth;\r\n    const height = containerRef.current.clientHeight || window.innerHeight;\r\n\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      width / height,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.set(0, 0, 0.1);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(width, height);\r\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\r\n    containerRef.current.appendChild(renderer.domElement);\r\n\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.rotateSpeed = 0.5;\r\n\r\n    sceneRef.current = scene;\r\n    cameraRef.current = camera;\r\n    rendererRef.current = renderer;\r\n    controlsRef.current = controls;\r\n\r\n    let animationId;\r\n    const animate = () => {\r\n      animationId = requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Responsivo al tamaño del contenedor\r\n    const handleResize = () => {\r\n      if (!containerRef.current) return;\r\n      const w = containerRef.current.clientWidth || window.innerWidth;\r\n      const h = containerRef.current.clientHeight || window.innerHeight;\r\n      camera.aspect = w / h;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(w, h);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Limpieza\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (animationId) cancelAnimationFrame(animationId);\r\n      if (\r\n        rendererRef.current &&\r\n        rendererRef.current.domElement &&\r\n        containerRef.current &&\r\n        containerRef.current.contains(rendererRef.current.domElement)\r\n      ) {\r\n        rendererRef.current.dispose();\r\n        containerRef.current.removeChild(rendererRef.current.domElement);\r\n      }\r\n    };\r\n  }, [tour, loading]);\r\n\r\n  // Cargar la escena current\r\n  useEffect(() => {\r\n    if (\r\n      !tour ||\r\n      !sceneRef.current ||\r\n      !tour.scenes ||\r\n      !Array.isArray(tour.scenes) ||\r\n      tour.scenes.length === 0 ||\r\n      currentSceneIndex === -1 ||\r\n      !tour.scenes[currentSceneIndex]\r\n    ) return;\r\n\r\n    const scene = sceneRef.current;\r\n    const currentScene = tour.scenes[currentSceneIndex];\r\n\r\n    // Limpiar escena anterior\r\n    while (scene.children.length > 0) {\r\n      scene.remove(scene.children[0]);\r\n    }\r\n\r\n    // Crear esfera para la imagen 360 con mayor calidad visual\r\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\r\n    geometry.scale(-1, 1, 1);\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\r\n\r\n    textureLoader.load(\r\n      imageUrl,\r\n      texture => {\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.magFilter = THREE.LinearFilter;\r\n        // Usar LinearSRGBColorSpace si está disponible, si no, omitir\r\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\r\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\r\n        }\r\n        // Anisotropía para mayor nitidez\r\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\r\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\r\n        }\r\n        const material = new THREE.MeshBasicMaterial({\r\n          map: texture,\r\n          side: THREE.DoubleSide\r\n        });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        scene.add(sphere);\r\n      },\r\n      undefined,\r\n      err => {\r\n        console.error('Error al cargar la textura:', err, imageUrl);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        scene.add(sphere);\r\n      }\r\n    );\r\n  }, [tour, currentSceneIndex]);\r\n\r\n  // Manejar subida de imágenes\r\n  const handleImageUpload = async (e) => {\r\n    let file;\r\n    if (e.target && e.target.files && e.target.files[0]) {\r\n      file = e.target.files[0];\r\n    } else if (e instanceof File) {\r\n      file = e;\r\n    } else if (e && e.target && e.target.files) {\r\n      file = e.target.files[0];\r\n    }\r\n    if (!file) return;\r\n\r\n    try {\r\n      // Asegura que imageUrl siempre sea un string válido\r\n      let uploadRes = await api.uploadImage(file);\r\n      let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\r\n      if (!imageUrl) {\r\n        throw new Error('No se recibió la URL de la imagen');\r\n      }\r\n      const newScene = {\r\n        name: `Escena ${tour.scenes.length + 1}`,\r\n        image: imageUrl,\r\n        hotspots: []\r\n      };\r\n      const updatedTour = {\r\n        ...tour,\r\n        scenes: [...tour.scenes, newScene]\r\n      };\r\n      const savedTour = await api.updateTour(tourId, updatedTour);\r\n      setTour(savedTour.data ? savedTour.data : savedTour);\r\n      setCurrentSceneIndex(updatedTour.scenes.length - 1);\r\n    } catch (err) {\r\n      console.error('Error subiendo imagen:', err);\r\n      alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\r\n    }\r\n  };\r\n\r\n  // Manejar subida de imágenes (DragDrop)\r\n  const handleDragDropImage = async (file) => {\r\n    await handleImageUpload(file);\r\n  };\r\n\r\n  // Guardar hotspot\r\n  const handleSaveHotspot = async (hotspotData) => {\r\n    try {\r\n      const updatedScenes = [...tour.scenes];\r\n      const currentScene = updatedScenes[currentSceneIndex];\r\n\r\n      if (hotspotData._id) {\r\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\r\n        if (index !== -1) {\r\n          currentScene.hotspots[index] = hotspotData;\r\n        }\r\n      } else {\r\n        currentScene.hotspots.push({\r\n          ...hotspotData,\r\n          _id: Date.now().toString()\r\n        });\r\n      }\r\n\r\n      const updatedTour = { ...tour, scenes: updatedScenes };\r\n      setTour(updatedTour);\r\n      await api.updateTour(tourId, updatedTour);\r\n      setSelectedHotspot(null);\r\n      setIsAddingHotspot(false);\r\n    } catch (err) {\r\n      console.error('Error guardando hotspot:', err);\r\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\r\n    }\r\n  };\r\n\r\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\r\n  useEffect(() => {\r\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\r\n\r\n    const handlePointerDown = (event) => {\r\n      // Solo permitir click izquierdo\r\n      if (event.button !== 0) return;\r\n\r\n      // Evitar que el panel de control capture el click\r\n      if (event.target !== rendererRef.current.domElement) return;\r\n\r\n      // Obtener posición del click relativo al canvas\r\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\r\n      const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n\r\n      // Vector 3D en la dirección de la cámara\r\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\r\n\r\n      // Convertir a coordenadas esféricas (pitch/yaw)\r\n      const camPos = cameraRef.current.position;\r\n      const dir = vector.sub(camPos).normalize();\r\n      const phi = Math.acos(dir.y); // [0, PI]\r\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\r\n\r\n      // Convertir a grados\r\n      const pitch = 90 - (phi * 180 / Math.PI);\r\n      const yaw = theta * 180 / Math.PI;\r\n\r\n      setPendingHotspot({\r\n        pitch: Number(pitch.toFixed(2)),\r\n        yaw: Number(yaw.toFixed(2))\r\n      });\r\n      setIsAddingHotspot(false);\r\n    };\r\n\r\n    const dom = rendererRef.current.domElement;\r\n    dom.style.cursor = 'crosshair';\r\n    dom.addEventListener('pointerdown', handlePointerDown);\r\n\r\n    return () => {\r\n      dom.style.cursor = '';\r\n      dom.removeEventListener('pointerdown', handlePointerDown);\r\n    };\r\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\r\n\r\n  // Nuevo: Guardar hotspot con pitch/yaw del click\r\n  const handleSaveHotspotWithCoords = (hotspotData) => {\r\n    handleSaveHotspot({\r\n      ...hotspotData,\r\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\r\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\r\n    });\r\n    setPendingHotspot(null);\r\n  };\r\n\r\n  // Nuevo: Manejar click en la escena para colocar hotspot\r\n  const handleSceneClick = (event) => {\r\n    if (!placementMode) return;\r\n    // Obtener coordenadas del ratón normalizadas\r\n    const mouse = new THREE.Vector2();\r\n    const rect = containerRef.current.getBoundingClientRect();\r\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n\r\n    const raycaster = new THREE.Raycaster();\r\n    raycaster.setFromCamera(mouse, cameraRef.current);\r\n\r\n    // Intersectar con la esfera (único mesh en la escena)\r\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\r\n    if (intersects.length > 0) {\r\n      const point = intersects[0].point;\r\n      const radius = 500;\r\n      const phi = Math.acos(point.y / radius);\r\n      const theta = Math.atan2(point.z, point.x);\r\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\r\n      const yaw = THREE.MathUtils.radToDeg(theta);\r\n      setNewHotspotPosition({ pitch, yaw });\r\n      setShowHotspotModal(true);\r\n      setPlacementMode(false);\r\n    }\r\n  };\r\n\r\n  // Guardar el nuevo hotspot usando el endpoint REST\r\n  const saveNewHotspot = async (hotspotData) => {\r\n    try {\r\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\r\n      const sceneId = tour.scenes[currentSceneIndex]._id;\r\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\r\n      // Actualizar el tour localmente\r\n      const updatedTour = { ...tour };\r\n      updatedTour.scenes = [...updatedTour.scenes];\r\n      const scene = updatedTour.scenes[currentSceneIndex];\r\n      scene.hotspots = [...scene.hotspots, response];\r\n      setTour(updatedTour);\r\n      setShowHotspotModal(false);\r\n      setNewHotspotPosition(null);\r\n    } catch (error) {\r\n      alert('Error al guardar el hotspot');\r\n      setShowHotspotModal(false);\r\n      setNewHotspotPosition(null);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Cargando tour...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\r\n  if (!tour.scenes || tour.scenes.length === 0) {\r\n    return (\r\n      <div className=\"tour-editor\">\r\n        <div ref={containerRef} className=\"three-container\" />\r\n        <ControlPanel\r\n          open={panelOpen}\r\n          setOpen={setPanelOpen}\r\n          tour={tour}\r\n          handleDragDropImage={handleDragDropImage}\r\n          handleImageUpload={handleImageUpload}\r\n          scenes={[]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"tour-editor\">\r\n      <div\r\n        ref={containerRef}\r\n        className=\"three-container\"\r\n        onClick={handleSceneClick}\r\n      />\r\n      <ControlPanel\r\n        open={panelOpen}\r\n        setOpen={setPanelOpen}\r\n        tour={tour}\r\n        handleDragDropImage={handleDragDropImage}\r\n        handleImageUpload={handleImageUpload}\r\n        scenes={tour.scenes}\r\n        currentSceneIndex={currentSceneIndex}\r\n        setCurrentSceneIndex={setCurrentSceneIndex}\r\n        setIsAddingHotspot={() => setPlacementMode(true)}\r\n        onReturn={() => navigate('/')}\r\n      />\r\n      {(selectedHotspot || pendingHotspot) && (\r\n        <HotspotEditor\r\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\r\n          scenes={tour.scenes}\r\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\r\n          onCancel={() => {\r\n            setSelectedHotspot(null);\r\n            setIsAddingHotspot(false);\r\n            setPendingHotspot(null);\r\n          }}\r\n        />\r\n      )}\r\n      {showHotspotModal && newHotspotPosition && (\r\n        <HotspotCreationModal\r\n          position={newHotspotPosition}\r\n          tour={tour}\r\n          currentSceneIndex={currentSceneIndex}\r\n          onSave={saveNewHotspot}\r\n          onCancel={() => {\r\n            setShowHotspotModal(false);\r\n            setNewHotspotPosition(null);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Panel lateral plegable\r\nfunction ControlPanel({\r\n  open,\r\n  setOpen,\r\n  tour,\r\n  handleDragDropImage,\r\n  handleImageUpload,\r\n  scenes,\r\n  currentSceneIndex,\r\n  setCurrentSceneIndex,\r\n  setIsAddingHotspot,\r\n  onReturn\r\n}) {\r\n  return (\r\n    <>\r\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\r\n        <div className=\"panel-header\">\r\n          <span className=\"panel-title\">Tour Virtual 360°</span>\r\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\r\n            {open ? <>&#10094;</> : <>&#10095;</>}\r\n          </button>\r\n        </div>\r\n        {open && (\r\n          <div className=\"panel-content\">\r\n            <button\r\n              className=\"btn-return-hub\"\r\n              onClick={onReturn}\r\n              style={{\r\n                background: '#23272f',\r\n                color: '#38bdf8',\r\n                border: 'none',\r\n                borderRadius: 8,\r\n                padding: '10px 0',\r\n                fontSize: '1rem',\r\n                fontWeight: 500,\r\n                marginBottom: 18,\r\n                cursor: 'pointer',\r\n                width: '100%',\r\n                transition: 'background 0.2s, color 0.2s'\r\n              }}\r\n            >\r\n              ← Volver al Hub\r\n            </button>\r\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\r\n            <div className=\"panel-section\">\r\n              <h3>Imágenes 360°</h3>\r\n              <DragDrop onFileUpload={handleDragDropImage} />\r\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\r\n              <input\r\n                type=\"file\"\r\n                id=\"image-upload\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </div>\r\n            <div className=\"panel-section\">\r\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\r\n              {scenes.length === 0 ? (\r\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\r\n              ) : (\r\n                <ul className=\"panel-image-list\">\r\n                  {scenes.map((scene, idx) => (\r\n                    <li\r\n                      key={scene._id || idx}\r\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\r\n                      onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}\r\n                    >\r\n                      <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\r\n                      <span>{scene.name}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n            <div className=\"panel-section panel-hint\">\r\n              <span>\r\n                Haz clic en \"Agregar Punto de Acceso\" en la vista principal para conectar imágenes entre sí.\r\n              </span>\r\n            </div>\r\n            <button\r\n              className=\"btn-add-hotspot\"\r\n              onClick={() => setIsAddingHotspot && setIsAddingHotspot(true)}\r\n            >\r\n              ➕ Agregar Punto de Acceso\r\n            </button>\r\n          </div>\r\n        )}\r\n      </aside>\r\n      {!open && (\r\n        <button\r\n          className=\"panel-toggle-collapsed\"\r\n          onClick={() => setOpen(true)}\r\n          aria-label=\"Abrir panel de control\"\r\n        >\r\n          {/* Flechita para abrir */}\r\n          &#10095;\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}