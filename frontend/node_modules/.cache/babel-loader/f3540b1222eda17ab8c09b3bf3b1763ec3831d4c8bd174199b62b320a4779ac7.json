{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loggerPlugin = void 0;\nconst url_1 = require(\"url\");\nconst logger_1 = require(\"../../logger\");\nconst logger_plugin_1 = require(\"../../utils/logger-plugin\");\nconst loggerPlugin = (proxyServer, options) => {\n  const logger = (0, logger_1.getLogger)(options);\n  proxyServer.on('error', (err, req, res, target) => {\n    const hostname = req?.headers?.host;\n    const requestHref = `${hostname}${req?.url}`;\n    const targetHref = `${target?.href}`; // target is undefined when websocket errors\n    const errorMessage = '[HPM] Error occurred while proxying request %s to %s [%s] (%s)';\n    const errReference = 'https://nodejs.org/api/errors.html#errors_common_system_errors'; // link to Node Common Systems Errors page\n    logger.error(errorMessage, requestHref, targetHref, err.code || err, errReference);\n  });\n  /**\n   * Log request and response\n   * @example\n   * ```shell\n   * [HPM] GET /users/ -> http://jsonplaceholder.typicode.com/users/ [304]\n   * ```\n   */\n  proxyServer.on('proxyRes', (proxyRes, req, res) => {\n    // BrowserSync uses req.originalUrl\n    // Next.js doesn't have req.baseUrl\n    const originalUrl = req.originalUrl ?? `${req.baseUrl || ''}${req.url}`;\n    // construct targetUrl\n    let target;\n    try {\n      const port = (0, logger_plugin_1.getPort)(proxyRes.req?.agent?.sockets);\n      const obj = {\n        protocol: proxyRes.req.protocol,\n        host: proxyRes.req.host,\n        pathname: proxyRes.req.path\n      };\n      target = new url_1.URL(`${obj.protocol}//${obj.host}${obj.pathname}`);\n      if (port) {\n        target.port = port;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err) {\n      // nock issue (https://github.com/chimurai/http-proxy-middleware/issues/1035)\n      // fallback to old implementation (less correct - without port)\n      target = new url_1.URL(options.target);\n      target.pathname = proxyRes.req.path;\n    }\n    const targetUrl = target.toString();\n    const exchange = `[HPM] ${req.method} ${originalUrl} -> ${targetUrl} [${proxyRes.statusCode}]`;\n    logger.info(exchange);\n  });\n  /**\n   * When client opens WebSocket connection\n   */\n  proxyServer.on('open', socket => {\n    logger.info('[HPM] Client connected: %o', socket.address());\n  });\n  /**\n   * When client closes WebSocket connection\n   */\n  proxyServer.on('close', (req, proxySocket, proxyHead) => {\n    logger.info('[HPM] Client disconnected: %o', proxySocket.address());\n  });\n};\nexports.loggerPlugin = loggerPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","loggerPlugin","url_1","require","logger_1","logger_plugin_1","proxyServer","options","logger","getLogger","on","err","req","res","target","hostname","headers","host","requestHref","url","targetHref","href","errorMessage","errReference","error","code","proxyRes","originalUrl","baseUrl","port","getPort","agent","sockets","obj","protocol","pathname","path","URL","targetUrl","toString","exchange","method","statusCode","info","socket","address","proxySocket","proxyHead"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/node_modules/http-proxy-middleware/dist/plugins/default/logger-plugin.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loggerPlugin = void 0;\nconst url_1 = require(\"url\");\nconst logger_1 = require(\"../../logger\");\nconst logger_plugin_1 = require(\"../../utils/logger-plugin\");\nconst loggerPlugin = (proxyServer, options) => {\n    const logger = (0, logger_1.getLogger)(options);\n    proxyServer.on('error', (err, req, res, target) => {\n        const hostname = req?.headers?.host;\n        const requestHref = `${hostname}${req?.url}`;\n        const targetHref = `${target?.href}`; // target is undefined when websocket errors\n        const errorMessage = '[HPM] Error occurred while proxying request %s to %s [%s] (%s)';\n        const errReference = 'https://nodejs.org/api/errors.html#errors_common_system_errors'; // link to Node Common Systems Errors page\n        logger.error(errorMessage, requestHref, targetHref, err.code || err, errReference);\n    });\n    /**\n     * Log request and response\n     * @example\n     * ```shell\n     * [HPM] GET /users/ -> http://jsonplaceholder.typicode.com/users/ [304]\n     * ```\n     */\n    proxyServer.on('proxyRes', (proxyRes, req, res) => {\n        // BrowserSync uses req.originalUrl\n        // Next.js doesn't have req.baseUrl\n        const originalUrl = req.originalUrl ?? `${req.baseUrl || ''}${req.url}`;\n        // construct targetUrl\n        let target;\n        try {\n            const port = (0, logger_plugin_1.getPort)(proxyRes.req?.agent?.sockets);\n            const obj = {\n                protocol: proxyRes.req.protocol,\n                host: proxyRes.req.host,\n                pathname: proxyRes.req.path,\n            };\n            target = new url_1.URL(`${obj.protocol}//${obj.host}${obj.pathname}`);\n            if (port) {\n                target.port = port;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        }\n        catch (err) {\n            // nock issue (https://github.com/chimurai/http-proxy-middleware/issues/1035)\n            // fallback to old implementation (less correct - without port)\n            target = new url_1.URL(options.target);\n            target.pathname = proxyRes.req.path;\n        }\n        const targetUrl = target.toString();\n        const exchange = `[HPM] ${req.method} ${originalUrl} -> ${targetUrl} [${proxyRes.statusCode}]`;\n        logger.info(exchange);\n    });\n    /**\n     * When client opens WebSocket connection\n     */\n    proxyServer.on('open', (socket) => {\n        logger.info('[HPM] Client connected: %o', socket.address());\n    });\n    /**\n     * When client closes WebSocket connection\n     */\n    proxyServer.on('close', (req, proxySocket, proxyHead) => {\n        logger.info('[HPM] Client disconnected: %o', proxySocket.address());\n    });\n};\nexports.loggerPlugin = loggerPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}