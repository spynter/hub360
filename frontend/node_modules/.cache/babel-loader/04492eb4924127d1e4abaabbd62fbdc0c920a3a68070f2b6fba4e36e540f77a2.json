{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Cargar carrito desde localStorage al iniciar\n  useEffect(() => {\n    const savedCart = localStorage.getItem('hub360_cart');\n    if (savedCart) {\n      try {\n        setCart(JSON.parse(savedCart));\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Guardar carrito en localStorage cada vez que cambie\n  useEffect(() => {\n    localStorage.setItem('hub360_cart', JSON.stringify(cart));\n  }, [cart]);\n\n  // Agregar producto al carrito\n  const addToCart = (product, storeId, quantity = 1) => {\n    setCart(prev => {\n      const productKey = `${storeId}_${product._id}`;\n      const existing = prev[productKey];\n      if (existing) {\n        return {\n          ...prev,\n          [productKey]: {\n            ...existing,\n            quantity: existing.quantity + quantity\n          }\n        };\n      } else {\n        return {\n          ...prev,\n          [productKey]: {\n            ...product,\n            storeId,\n            storeName: product.storeName || 'Tienda',\n            quantity,\n            addedAt: new Date().toISOString()\n          }\n        };\n      }\n    });\n  };\n\n  // Remover producto del carrito\n  const removeFromCart = productKey => {\n    setCart(prev => {\n      const newCart = {\n        ...prev\n      };\n      delete newCart[productKey];\n      return newCart;\n    });\n  };\n\n  // Actualizar cantidad de un producto\n  const updateQuantity = (productKey, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productKey);\n      return;\n    }\n    setCart(prev => ({\n      ...prev,\n      [productKey]: {\n        ...prev[productKey],\n        quantity\n      }\n    }));\n  };\n\n  // Vaciar carrito completo\n  const clearCart = () => {\n    setCart({});\n  };\n\n  // Obtener total de productos en el carrito\n  const getTotalItems = () => {\n    return Object.values(cart).reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Obtener total del precio\n  const getTotalPrice = () => {\n    return Object.values(cart).reduce((total, item) => {\n      const price = parseFloat(item.price) || 0;\n      return total + price * item.quantity;\n    }, 0);\n  };\n\n  // Obtener productos agrupados por tienda\n  const getCartByStore = () => {\n    const stores = {};\n    Object.entries(cart).forEach(([key, item]) => {\n      if (!stores[item.storeId]) {\n        stores[item.storeId] = {\n          storeId: item.storeId,\n          storeName: item.storeName,\n          items: []\n        };\n      }\n      stores[item.storeId].items.push({\n        ...item,\n        key\n      });\n    });\n    return Object.values(stores);\n  };\n\n  // Procesar pago (placeholder para futura implementación)\n  const processPayment = () => {\n    // Aquí se implementaría la lógica de pago\n    console.log('Procesando pago:', cart);\n    alert('Funcionalidad de pago en desarrollo');\n  };\n  const value = {\n    cart,\n    isOpen,\n    setIsOpen,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getTotalItems,\n    getTotalPrice,\n    getCartByStore,\n    processPayment\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"24TuLejq6MB0wGKEyijzbu2YE0o=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","isOpen","setIsOpen","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","product","storeId","quantity","prev","productKey","_id","existing","storeName","addedAt","Date","toISOString","removeFromCart","newCart","updateQuantity","clearCart","getTotalItems","Object","values","reduce","total","item","getTotalPrice","price","parseFloat","getCartByStore","stores","entries","forEach","key","items","push","processPayment","log","alert","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState({});\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // Cargar carrito desde localStorage al iniciar\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('hub360_cart');\r\n    if (savedCart) {\r\n      try {\r\n        setCart(JSON.parse(savedCart));\r\n      } catch (error) {\r\n        console.error('Error loading cart from localStorage:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Guardar carrito en localStorage cada vez que cambie\r\n  useEffect(() => {\r\n    localStorage.setItem('hub360_cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  // Agregar producto al carrito\r\n  const addToCart = (product, storeId, quantity = 1) => {\r\n    setCart(prev => {\r\n      const productKey = `${storeId}_${product._id}`;\r\n      const existing = prev[productKey];\r\n      \r\n      if (existing) {\r\n        return {\r\n          ...prev,\r\n          [productKey]: {\r\n            ...existing,\r\n            quantity: existing.quantity + quantity\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          ...prev,\r\n          [productKey]: {\r\n            ...product,\r\n            storeId,\r\n            storeName: product.storeName || 'Tienda',\r\n            quantity,\r\n            addedAt: new Date().toISOString()\r\n          }\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  // Remover producto del carrito\r\n  const removeFromCart = (productKey) => {\r\n    setCart(prev => {\r\n      const newCart = { ...prev };\r\n      delete newCart[productKey];\r\n      return newCart;\r\n    });\r\n  };\r\n\r\n  // Actualizar cantidad de un producto\r\n  const updateQuantity = (productKey, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productKey);\r\n      return;\r\n    }\r\n    \r\n    setCart(prev => ({\r\n      ...prev,\r\n      [productKey]: {\r\n        ...prev[productKey],\r\n        quantity\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Vaciar carrito completo\r\n  const clearCart = () => {\r\n    setCart({});\r\n  };\r\n\r\n  // Obtener total de productos en el carrito\r\n  const getTotalItems = () => {\r\n    return Object.values(cart).reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  // Obtener total del precio\r\n  const getTotalPrice = () => {\r\n    return Object.values(cart).reduce((total, item) => {\r\n      const price = parseFloat(item.price) || 0;\r\n      return total + (price * item.quantity);\r\n    }, 0);\r\n  };\r\n\r\n  // Obtener productos agrupados por tienda\r\n  const getCartByStore = () => {\r\n    const stores = {};\r\n    Object.entries(cart).forEach(([key, item]) => {\r\n      if (!stores[item.storeId]) {\r\n        stores[item.storeId] = {\r\n          storeId: item.storeId,\r\n          storeName: item.storeName,\r\n          items: []\r\n        };\r\n      }\r\n      stores[item.storeId].items.push({ ...item, key });\r\n    });\r\n    return Object.values(stores);\r\n  };\r\n\r\n  // Procesar pago (placeholder para futura implementación)\r\n  const processPayment = () => {\r\n    // Aquí se implementaría la lógica de pago\r\n    console.log('Procesando pago:', cart);\r\n    alert('Funcionalidad de pago en desarrollo');\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    isOpen,\r\n    setIsOpen,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getTotalItems,\r\n    getTotalPrice,\r\n    getCartByStore,\r\n    processPayment\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}