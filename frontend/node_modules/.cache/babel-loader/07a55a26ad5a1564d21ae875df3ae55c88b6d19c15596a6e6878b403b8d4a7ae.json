{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport SceneManager from './SceneManager';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport './TourEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data); // <-- Usa response.data\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Inicializar escena\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n\n    // Guardar referencias\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    // Funci칩n de animaci칩n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena actual\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n\n    // Crear esfera para la imagen 360\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\n    geometry.scale(-1, 1, 1); // Invertir para ver desde adentro\n\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(currentScene.image, texture => {\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // Manejar subida de im치genes\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const {\n        imageUrl\n      } = await api.uploadImage(file);\n\n      // Crear nueva escena\n      const newScene = {\n        name: `Escena ${tour.scenes.length + 1}`,\n        image: imageUrl,\n        hotspots: []\n      };\n\n      // Actualizar tour\n      const updatedTour = {\n        ...tour,\n        scenes: [...tour.scenes, newScene]\n      };\n\n      // Guardar en la API\n      const savedTour = await api.updateTour(tourId, updatedTour);\n      setTour(savedTour);\n      setCurrentSceneIndex(savedTour.scenes.length - 1);\n    } catch (err) {\n      console.error('Error subiendo imagen:', err);\n      alert(`Error al subir imagen: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        // Actualizar hotspot existente\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        // A침adir nuevo hotspot\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString() // ID temporal hasta guardar en DB\n        });\n      }\n\n      // Actualizar tour localmente\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n\n      // Guardar en la API\n      await api.updateTour(tourId, updatedTour);\n\n      // Resetear estado\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SceneManager, {\n      scenes: tour.scenes,\n      currentIndex: currentSceneIndex,\n      onSelectScene: setCurrentSceneIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image-upload\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-upload\",\n        onClick: () => document.getElementById('image-upload').click(),\n        children: \"Subir Nueva Escena\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-add-hotspot\",\n        onClick: () => setIsAddingHotspot(true),\n        children: \"A\\xF1adir Hotspot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), (selectedHotspot || isAddingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {},\n      scenes: tour.scenes,\n      onSave: handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(TourEditor, \"8ZT1lh1uzmJYCruSVS1gCLXEsPM=\");\n_c = TourEditor;\nexport default TourEditor;\nvar _c;\n$RefreshReg$(_c, \"TourEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","SceneManager","HotspotEditor","api","jsxDEV","_jsxDEV","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","sceneRef","cameraRef","rendererRef","controlsRef","fetchTour","response","getTour","data","err","console","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","controls","enableDamping","dampingFactor","rotateSpeed","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","contains","dispose","removeChild","scenes","Array","isArray","length","currentScene","children","remove","geometry","SphereGeometry","scale","textureLoader","TextureLoader","load","image","texture","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","undefined","handleImageUpload","e","file","target","files","imageUrl","uploadImage","newScene","name","hotspots","updatedTour","savedTour","updateTour","alert","handleSaveHotspot","hotspotData","updatedScenes","_id","index","findIndex","h","push","Date","now","toString","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","currentIndex","onSelectScene","type","id","accept","onChange","style","display","onClick","document","getElementById","click","hotspot","onSave","onCancel","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport SceneManager from './SceneManager';\r\nimport HotspotEditor from './HotspotEditor';\r\nimport api from '../../services/api';\r\nimport './TourEditor.css';\r\n\r\nfunction TourEditor({ tourId }) {\r\n  const containerRef = useRef();\r\n  const [tour, setTour] = useState(null);\r\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\r\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\r\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Referencias de Three.js\r\n  const sceneRef = useRef();\r\n  const cameraRef = useRef();\r\n  const rendererRef = useRef();\r\n  const controlsRef = useRef();\r\n\r\n  // Cargar tour desde la API\r\n  useEffect(() => {\r\n    const fetchTour = async () => {\r\n      try {\r\n        const response = await api.getTour(tourId);\r\n        setTour(response.data); // <-- Usa response.data\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al cargar el tour');\r\n        setLoading(false);\r\n        console.error(err);\r\n      }\r\n    };\r\n    \r\n    fetchTour();\r\n  }, [tourId]);\r\n\r\n  // Inicializar Three.js\r\n  useEffect(() => {\r\n    if (!tour || loading) return;\r\n    \r\n    // Inicializar escena\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75, \r\n      window.innerWidth / window.innerHeight, \r\n      0.1, \r\n      1000\r\n    );\r\n    camera.position.set(0, 0, 0.1);\r\n    \r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    containerRef.current.appendChild(renderer.domElement);\r\n    \r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.rotateSpeed = 0.5;\r\n    \r\n    // Guardar referencias\r\n    sceneRef.current = scene;\r\n    cameraRef.current = camera;\r\n    rendererRef.current = renderer;\r\n    controlsRef.current = controls;\r\n    \r\n    // Funci칩n de animaci칩n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n    \r\n    // Manejar redimensionamiento\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    // Limpieza\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (\r\n        rendererRef.current &&\r\n        rendererRef.current.domElement &&\r\n        containerRef.current &&\r\n        containerRef.current.contains(rendererRef.current.domElement)\r\n      ) {\r\n        rendererRef.current.dispose();\r\n        containerRef.current.removeChild(rendererRef.current.domElement);\r\n      }\r\n    };\r\n  }, [tour, loading]);\r\n\r\n  // Cargar la escena actual\r\n  useEffect(() => {\r\n    if (\r\n      !tour ||\r\n      !sceneRef.current ||\r\n      !tour.scenes ||\r\n      !Array.isArray(tour.scenes) ||\r\n      tour.scenes.length === 0 ||\r\n      currentSceneIndex === -1 ||\r\n      !tour.scenes[currentSceneIndex]\r\n    ) return;\r\n\r\n    const scene = sceneRef.current;\r\n    const currentScene = tour.scenes[currentSceneIndex];\r\n\r\n    // Limpiar escena anterior\r\n    while(scene.children.length > 0) { \r\n      scene.remove(scene.children[0]); \r\n    }\r\n\r\n    // Crear esfera para la imagen 360\r\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\r\n    geometry.scale(-1, 1, 1); // Invertir para ver desde adentro\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(currentScene.image, texture => {\r\n      const material = new THREE.MeshBasicMaterial({ \r\n        map: texture,\r\n        side: THREE.DoubleSide\r\n      });\r\n      const sphere = new THREE.Mesh(geometry, material);\r\n      scene.add(sphere);\r\n    }, undefined, err => {\r\n      console.error('Error al cargar la textura:', err);\r\n    });\r\n  }, [tour, currentSceneIndex]);\r\n\r\n  // Manejar subida de im치genes\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    \r\n    try {\r\n      const { imageUrl } = await api.uploadImage(file);\r\n      \r\n      // Crear nueva escena\r\n      const newScene = {\r\n        name: `Escena ${tour.scenes.length + 1}`,\r\n        image: imageUrl,\r\n        hotspots: []\r\n      };\r\n      \r\n      // Actualizar tour\r\n      const updatedTour = {\r\n        ...tour,\r\n        scenes: [...tour.scenes, newScene]\r\n      };\r\n      \r\n      // Guardar en la API\r\n      const savedTour = await api.updateTour(tourId, updatedTour);\r\n      setTour(savedTour);\r\n      setCurrentSceneIndex(savedTour.scenes.length - 1);\r\n    } catch (err) {\r\n      console.error('Error subiendo imagen:', err);\r\n      alert(`Error al subir imagen: ${err.error || 'Intente nuevamente'}`);\r\n    }\r\n  };\r\n\r\n  // Guardar hotspot\r\n  const handleSaveHotspot = async (hotspotData) => {\r\n    try {\r\n      const updatedScenes = [...tour.scenes];\r\n      const currentScene = updatedScenes[currentSceneIndex];\r\n      \r\n      if (hotspotData._id) {\r\n        // Actualizar hotspot existente\r\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\r\n        if (index !== -1) {\r\n          currentScene.hotspots[index] = hotspotData;\r\n        }\r\n      } else {\r\n        // A침adir nuevo hotspot\r\n        currentScene.hotspots.push({\r\n          ...hotspotData,\r\n          _id: Date.now().toString() // ID temporal hasta guardar en DB\r\n        });\r\n      }\r\n      \r\n      // Actualizar tour localmente\r\n      const updatedTour = { ...tour, scenes: updatedScenes };\r\n      setTour(updatedTour);\r\n      \r\n      // Guardar en la API\r\n      await api.updateTour(tourId, updatedTour);\r\n      \r\n      // Resetear estado\r\n      setSelectedHotspot(null);\r\n      setIsAddingHotspot(false);\r\n    } catch (err) {\r\n      console.error('Error guardando hotspot:', err);\r\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Cargando tour...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"tour-editor\">\r\n      <div \r\n        ref={containerRef} \r\n        className=\"three-container\"\r\n      />\r\n      \r\n      <SceneManager \r\n        scenes={tour.scenes} \r\n        currentIndex={currentSceneIndex}\r\n        onSelectScene={setCurrentSceneIndex}\r\n      />\r\n      \r\n      <div className=\"editor-controls\">\r\n        <input \r\n          type=\"file\" \r\n          id=\"image-upload\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <button \r\n          className=\"btn-upload\"\r\n          onClick={() => document.getElementById('image-upload').click()}\r\n        >\r\n          Subir Nueva Escena\r\n        </button>\r\n        \r\n        <button \r\n          className=\"btn-add-hotspot\"\r\n          onClick={() => setIsAddingHotspot(true)}\r\n        >\r\n          A침adir Hotspot\r\n        </button>\r\n      </div>\r\n      \r\n      {(selectedHotspot || isAddingHotspot) && (\r\n        <HotspotEditor \r\n          hotspot={selectedHotspot || {}}\r\n          scenes={tour.scenes}\r\n          onSave={handleSaveHotspot}\r\n          onCancel={() => {\r\n            setSelectedHotspot(null);\r\n            setIsAddingHotspot(false);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}