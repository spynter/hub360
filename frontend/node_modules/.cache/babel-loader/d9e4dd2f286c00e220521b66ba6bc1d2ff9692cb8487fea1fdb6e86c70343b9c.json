{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport { TransitionManager, cleanImageFilters } from '../../utils/transitions';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const transitionManagerRef = useRef(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        var _tourData$scenes, _tourData$scenes2;\n        const response = await api.getTour(tourId);\n        const tourData = response.data;\n\n        // Validar y limpiar datos del tour\n        if (tourData && tourData.scenes) {\n          tourData.scenes = tourData.scenes.map((scene, sceneIndex) => {\n            if (scene.hotspots && Array.isArray(scene.hotspots)) {\n              // Limpiar hotspots inválidos\n              scene.hotspots = scene.hotspots.filter(hotspot => {\n                if (!hotspot || typeof hotspot.pitch !== 'number' || typeof hotspot.yaw !== 'number') {\n                  console.warn(`Eliminando hotspot inválido en escena ${sceneIndex}:`, hotspot);\n                  return false;\n                }\n                return true;\n              });\n            }\n            return scene;\n          });\n        }\n        setTour(tourData);\n        setLoading(false);\n        console.log('Tour cargado:', {\n          id: tourData._id,\n          name: tourData.name,\n          scenes: ((_tourData$scenes = tourData.scenes) === null || _tourData$scenes === void 0 ? void 0 : _tourData$scenes.length) || 0,\n          totalHotspots: ((_tourData$scenes2 = tourData.scenes) === null || _tourData$scenes2 === void 0 ? void 0 : _tourData$scenes2.reduce((total, scene) => {\n            var _scene$hotspots;\n            return total + (((_scene$hotspots = scene.hotspots) === null || _scene$hotspots === void 0 ? void 0 : _scene$hotspots.length) || 0);\n          }, 0)) || 0\n        });\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error('Error cargando tour:', err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5; // INVERTIR dirección de rotación\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current con manejo optimizado de hotspots\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior completamente\n    while (scene.children.length > 0) {\n      const child = scene.children[0];\n      // Limpiar recursos de Three.js\n      if (child.geometry) child.geometry.dispose();\n      if (child.material) {\n        if (Array.isArray(child.material)) {\n          child.material.forEach(mat => mat.dispose());\n        } else {\n          child.material.dispose();\n        }\n      }\n      scene.remove(child);\n    }\n\n    // Limpiar referencias\n    hotspotSpritesRef.current = [];\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots con estado optimizado ---\n      renderHotspotsForScene(currentScene, scene);\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // Función de utilidad para depurar hotspots\n  const debugHotspots = (sceneData, sceneIndex) => {\n    if (!sceneData.hotspots || !Array.isArray(sceneData.hotspots)) {\n      console.log(`Escena ${sceneIndex}: No hay hotspots`);\n      return;\n    }\n    console.log(`Escena ${sceneIndex} (${sceneData.name}):`, {\n      totalHotspots: sceneData.hotspots.length,\n      accessHotspots: sceneData.hotspots.filter(h => h.type === 'access').length,\n      commerceHotspots: sceneData.hotspots.filter(h => h.type === 'commerce').length,\n      locationHotspots: sceneData.hotspots.filter(h => h.type === 'location').length,\n      hotspots: sceneData.hotspots.map((h, i) => ({\n        index: i,\n        type: h.type,\n        pitch: h.pitch,\n        yaw: h.yaw,\n        targetSceneId: h.targetSceneId,\n        title: h.title\n      }))\n    });\n  };\n\n  // Función optimizada para renderizar hotspots\n  const renderHotspotsForScene = (sceneData, threeScene) => {\n    if (!Array.isArray(sceneData.hotspots) || sceneData.hotspots.length === 0) {\n      return;\n    }\n\n    // Validar y limpiar hotspots antes de renderizar\n    const validHotspots = sceneData.hotspots.filter((hotspot, index) => {\n      // Validar que el hotspot tenga las propiedades requeridas\n      if (!hotspot || typeof hotspot.pitch !== 'number' || typeof hotspot.yaw !== 'number') {\n        console.warn(`Hotspot inválido en índice ${index}:`, hotspot);\n        return false;\n      }\n\n      // Validar que el hotspot de acceso tenga targetSceneId\n      if (hotspot.type === 'access' && !hotspot.targetSceneId) {\n        console.warn(`Hotspot de acceso sin targetSceneId en índice ${index}:`, hotspot);\n        return false;\n      }\n      return true;\n    });\n    console.log(`Renderizando ${validHotspots.length} hotspots válidos para la escena ${currentSceneIndex}`);\n\n    // Depurar hotspots para esta escena\n    debugHotspots(sceneData, currentSceneIndex);\n    validHotspots.forEach((hotspot, index) => {\n      try {\n        // Convertir pitch/yaw a coordenadas cartesianas\n        const radius = 500;\n        const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n        const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n        const x = radius * Math.sin(phi) * Math.sin(theta);\n        const y = radius * Math.cos(phi);\n        const z = radius * Math.sin(phi) * Math.cos(theta);\n        let obj3d;\n        if (hotspot.type === 'access') {\n          // Esfera 3D para access con mejor visualización\n          const geometry = new THREE.SphereGeometry(12, 32, 32);\n          const material = new THREE.MeshStandardMaterial({\n            color: 0x38bdf8,\n            emissive: 0x0ea5e9,\n            metalness: 0.3,\n            roughness: 0.5\n          });\n          obj3d = new THREE.Mesh(geometry, material);\n\n          // Agregar información adicional al hotspot para mejor navegación\n          obj3d.userData.hotspot = {\n            ...hotspot,\n            sceneIndex: currentSceneIndex,\n            sceneName: sceneData.name\n          };\n          obj3d.userData.isAccessHotspot = true;\n          obj3d.userData.hotspotIndex = index;\n          accessSpheresRef.current.push(obj3d);\n        } else {\n          // Sprite para otros tipos con mejor diseño\n          const size = 64;\n          const canvas = document.createElement('canvas');\n          canvas.width = size;\n          canvas.height = size;\n          const ctx = canvas.getContext('2d');\n\n          // Fondo con gradiente\n          const gradient = ctx.createRadialGradient(size / 2, size / 2, 0, size / 2, size / 2, size / 2);\n          gradient.addColorStop(0, '#38bdf8');\n          gradient.addColorStop(1, '#0ea5e9');\n          ctx.fillStyle = gradient;\n          ctx.beginPath();\n          ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n          ctx.fill();\n\n          // Borde blanco\n          ctx.lineWidth = 4;\n          ctx.strokeStyle = '#fff';\n          ctx.stroke();\n\n          // Sombra\n          ctx.shadowColor = '#0ea5e9';\n          ctx.shadowBlur = 8;\n          const texture = new THREE.CanvasTexture(canvas);\n          const material = new THREE.SpriteMaterial({\n            map: texture,\n            depthTest: false,\n            transparent: true\n          });\n          obj3d = new THREE.Sprite(material);\n          obj3d.scale.set(20, 20, 1);\n          obj3d.userData.hotspot = {\n            ...hotspot,\n            sceneIndex: currentSceneIndex,\n            sceneName: sceneData.name\n          };\n          obj3d.userData.hotspotIndex = index;\n        }\n        obj3d.position.set(x, y, z);\n        threeScene.add(obj3d);\n        hotspotSpritesRef.current.push(obj3d);\n      } catch (error) {\n        console.error('Error renderizando hotspot:', error, hotspot);\n      }\n    });\n  };\n\n  // --- Detección de clics en hotspots optimizada ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current || !tour) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n\n    // Función optimizada para navegar a hotspots de acceso\n    const doubleClickNavigateToAccessHotspot = hotspot => {\n      if (!hotspot || hotspot.type !== 'access' || !hotspot.targetSceneId) {\n        console.log('Hotspot inválido para navegación:', hotspot);\n        return;\n      }\n\n      // Buscar la escena destino usando diferentes métodos de comparación\n      let targetIdx = -1;\n\n      // Método 1: Comparación directa de IDs\n      targetIdx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n\n      // Método 2: Si no se encuentra, buscar por índice (fallback)\n      if (targetIdx === -1 && typeof hotspot.targetSceneId === 'number') {\n        targetIdx = hotspot.targetSceneId;\n      }\n\n      // Método 3: Buscar por nombre de escena (fallback adicional)\n      if (targetIdx === -1 && hotspot.targetSceneName) {\n        targetIdx = tour.scenes.findIndex(s => s.name === hotspot.targetSceneName);\n      }\n      if (targetIdx !== -1 && targetIdx < tour.scenes.length) {\n        console.log(`Navegando de escena ${currentSceneIndex} a escena ${targetIdx}`);\n        startTransition(targetIdx);\n      } else {\n        console.error('Escena destino no encontrada:', {\n          targetSceneId: hotspot.targetSceneId,\n          availableScenes: tour.scenes.map((s, i) => ({\n            index: i,\n            id: s._id,\n            name: s.name\n          }))\n        });\n      }\n    };\n\n    // Función optimizada para manejar clics en hotspots\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n\n      // Usar todos los objetos de la escena actual para detectar hotspots\n      const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n\n        // Verificar si es un hotspot\n        if (obj.userData && obj.userData.hotspot) {\n          const hotspot = obj.userData.hotspot;\n          if (obj.userData.isAccessHotspot) {\n            if (now - lastClickTime < 400) {\n              // doble click\n              console.log('Doble clic en hotspot de acceso:', hotspot);\n              doubleClickNavigateToAccessHotspot(hotspot);\n            }\n            lastClickTime = now;\n          } else {\n            console.log('Clic en hotspot informativo:', hotspot);\n            setSelectedHotspot(hotspot);\n          }\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex, hotspotSpritesRef.current]);\n\n  // Animación de transición optimizada\n  function startTransition(targetIdx) {\n    if (!transitionManagerRef.current) {\n      setCurrentSceneIndex(targetIdx);\n      return;\n    }\n    console.log(`Iniciando transición de escena ${currentSceneIndex} a ${targetIdx}`);\n\n    // Limpiar estados de hotspots antes de la transición\n    setSelectedHotspot(null);\n    setPlacementMode(false);\n\n    // Usar el nuevo sistema de transiciones\n    transitionManagerRef.current.startTransition(getAbsoluteImageUrl(tour.scenes[targetIdx].image), () => {\n      setCurrentSceneIndex(targetIdx);\n    });\n  }\n\n  // Inicializar el sistema de transiciones\n  useEffect(() => {\n    if (sceneRef.current && cameraRef.current && rendererRef.current) {\n      transitionManagerRef.current = new TransitionManager(sceneRef.current, cameraRef.current, rendererRef.current);\n    }\n    return () => {\n      if (transitionManagerRef.current) {\n        transitionManagerRef.current.dispose();\n      }\n    };\n  }, [tour]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        var _uploadRes$data;\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async files => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot optimizado\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      console.log('Guardando hotspot:', hotspotData);\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        // Actualizar hotspot existente\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = {\n            ...currentScene.hotspots[index],\n            ...hotspotData\n          };\n        }\n      } else {\n        // Crear nuevo hotspot\n        const newHotspot = {\n          ...hotspotData,\n          _id: Date.now().toString()\n        };\n        currentScene.hotspots.push(newHotspot);\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n\n      // Guardar en el backend\n      await api.updateTour(tourId, updatedTour);\n\n      // Recargar el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      const refreshedTour = response.data ? response.data : response;\n      setTour(refreshedTour);\n\n      // Limpiar estados\n      setSelectedHotspot(null);\n      setPlacementMode(false);\n      console.log('Hotspot guardado exitosamente');\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Efecto unificado para manejar el modo de colocación de hotspots\n  useEffect(() => {\n    if (!rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const dom = rendererRef.current.domElement;\n    if (placementMode) {\n      dom.style.cursor = 'crosshair';\n      // Elimina overlay visual, solo usa cursor\n      // El handler de click está en el canvas principal (ver más abajo)\n    } else {\n      dom.style.cursor = '';\n    }\n  }, [placementMode, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST optimizado\n  const saveNewHotspot = async hotspotData => {\n    try {\n      console.log('Guardando nuevo hotspot:', hotspotData);\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) {\n        throw new Error('Tour o escena no disponible');\n      }\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n\n      // Obtener el hotspot creado\n      const newHotspot = response.data ? response.data : response;\n      console.log('Hotspot creado en backend:', newHotspot);\n\n      // Actualizar el estado local\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n\n      // Limpiar estados\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      setPlacementMode(false);\n\n      // Recargar el tour desde la API para asegurar sincronización completa\n      const refreshed = await api.getTour(tourId);\n      const refreshedTour = refreshed.data ? refreshed.data : refreshed;\n      setTour(refreshedTour);\n      console.log('Nuevo hotspot guardado exitosamente');\n    } catch (error) {\n      console.error('Error al guardar el hotspot:', error);\n      alert(`Error al guardar el hotspot: ${error.message || 'Intente nuevamente'}`);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      setPlacementMode(false);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async deleteIdx => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => {\n      window.handleDeleteScene = undefined;\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async hotspotIdx => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = {\n      ...updatedScenes[currentSceneIndex]\n    };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = {\n      ...tour,\n      scenes: updatedScenes\n    };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  // --- GIROSCOPIO: Lógica de activación y manejo estilo YouTube 360 ---\n  useEffect(() => {\n    if (!isMobileDevice() || !cameraRef.current || !controlsRef.current) return;\n\n    // Habilitar/deshabilitar OrbitControls según el estado del giroscopio\n    controlsRef.current.enabled = true;\n    let lastAlpha = 0,\n      lastBeta = 0,\n      lastGamma = 0;\n    let smoothAlpha = 0,\n      smoothBeta = 0,\n      smoothGamma = 0;\n    const smoothFactor = 0.15;\n    function getScreenOrientation() {\n      if (window.screen.orientation && window.screen.orientation.angle !== undefined) {\n        return window.screen.orientation.angle;\n      }\n      return window.orientation || 0;\n    }\n    function handleOrientation(event) {\n      let alpha = event.alpha || 0;\n      let beta = event.beta || 0;\n      let gamma = event.gamma || 0;\n\n      // INVERTIR alpha para invertir la rotación horizontal\n      alpha = -alpha;\n      smoothAlpha = smoothAlpha * (1 - smoothFactor) + alpha * smoothFactor;\n      smoothBeta = smoothBeta * (1 - smoothFactor) + beta * smoothFactor;\n      smoothGamma = smoothGamma * (1 - smoothFactor) + gamma * smoothFactor;\n      const _alpha = THREE.MathUtils.degToRad(smoothAlpha);\n      const _beta = THREE.MathUtils.degToRad(smoothBeta);\n      const _gamma = THREE.MathUtils.degToRad(smoothGamma);\n      const orient = getScreenOrientation();\n      const orientRad = THREE.MathUtils.degToRad(orient);\n      const zee = new THREE.Vector3(0, 0, 1);\n      const euler = new THREE.Euler();\n      const q0 = new THREE.Quaternion();\n      const q1 = new THREE.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n      euler.set(_beta, _alpha, -_gamma, 'YXZ');\n      let quaternion = new THREE.Quaternion().setFromEuler(euler);\n      quaternion.multiply(q1);\n      quaternion.multiply(q0.setFromAxisAngle(zee, -orientRad));\n      cameraRef.current.quaternion.copy(quaternion);\n    }\n    window.addEventListener('deviceorientation', handleOrientation, true);\n    const handleScreenOrientation = () => {\n      smoothAlpha = lastAlpha;\n      smoothBeta = lastBeta;\n      smoothGamma = lastGamma;\n    };\n    window.addEventListener('orientationchange', handleScreenOrientation);\n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation, true);\n      window.removeEventListener('orientationchange', handleScreenOrientation);\n      // Rehabilitar OrbitControls al salir del modo giroscopio\n      if (controlsRef.current) controlsRef.current.enabled = true;\n    };\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: [],\n        placementMode: placementMode,\n        setPlacementMode: setPlacementMode,\n        onReturn: () => navigate('/hub'),\n        handleDeleteHotspot: handleDeleteHotspot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      placementMode: placementMode,\n      setPlacementMode: setPlacementMode,\n      onReturn: () => navigate('/hub'),\n      handleDeleteHotspot: handleDeleteHotspot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setPlacementMode(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 883,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"B2/DNuT1hvtVSZWxTnTUv/Wq/hU=\", false, function () {\n  return [useNavigate];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  placementMode,\n  setPlacementMode,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  var _scenes$currentSceneI, _scenes$currentSceneI2, _scenes$currentSceneI3, _scenes$currentSceneI4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  flex: 1,\n                  cursor: 'pointer'\n                },\n                onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                  alt: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1003,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 23\n              }, this), scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete-scene\",\n                style: {\n                  background: 'transparent',\n                  color: '#ef4444',\n                  border: 'none',\n                  marginLeft: 8,\n                  fontSize: 20,\n                  cursor: 'pointer'\n                },\n                title: \"Eliminar escena\",\n                onClick: e => {\n                  e.stopPropagation();\n                  if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                    if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                  }\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 25\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hotspots de la Escena (\", ((_scenes$currentSceneI = scenes[currentSceneIndex]) === null || _scenes$currentSceneI === void 0 ? void 0 : (_scenes$currentSceneI2 = _scenes$currentSceneI.hotspots) === null || _scenes$currentSceneI2 === void 0 ? void 0 : _scenes$currentSceneI2.length) || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hotspot-controls\",\n            style: {\n              marginBottom: 15\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-add-hotspot\",\n              onClick: () => setPlacementMode(true),\n              title: \"Haz clic para activar el modo de colocaci\\xF3n de hotspots. Luego haz clic en la imagen 360\\xB0 donde quieras colocar el hotspot.\",\n              style: {\n                background: '#38bdf8',\n                color: '#fff',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 16px',\n                fontSize: '14px',\n                fontWeight: 500,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: 8,\n                position: 'relative'\n              },\n              onMouseEnter: e => e.target.style.background = '#0ea5e9',\n              onMouseLeave: e => e.target.style.background = '#38bdf8',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '16px'\n                },\n                children: \"\\uD83D\\uDCCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 19\n              }, this), \"Agregar Hotspot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 17\n            }, this), placementMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"placement-mode-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Modo de colocaci\\xF3n activado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setPlacementMode(false),\n                  style: {\n                    background: 'transparent',\n                    border: '1px solid #ef4444',\n                    color: '#ef4444',\n                    borderRadius: 4,\n                    padding: '4px 8px',\n                    fontSize: '11px',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s'\n                  },\n                  onMouseEnter: e => {\n                    e.target.style.background = '#ef4444';\n                    e.target.style.color = '#fff';\n                  },\n                  onMouseLeave: e => {\n                    e.target.style.background = 'transparent';\n                    e.target.style.color = '#ef4444';\n                  },\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 21\n              }, this), \"Haz clic en la imagen 360\\xB0 para colocar el hotspot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 15\n          }, this), ((_scenes$currentSceneI3 = scenes[currentSceneIndex]) === null || _scenes$currentSceneI3 === void 0 ? void 0 : (_scenes$currentSceneI4 = _scenes$currentSceneI3.hotspots) === null || _scenes$currentSceneI4 === void 0 ? void 0 : _scenes$currentSceneI4.length) === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#1e293b',\n              border: '1px dashed #334155',\n              borderRadius: 6,\n              padding: '20px',\n              textAlign: 'center',\n              color: '#64748b',\n              fontSize: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '24px',\n                marginBottom: '8px'\n              },\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 19\n            }, this), \"No hay hotspots en esta escena\", /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                marginTop: '4px'\n              },\n              children: \"Haz clic en \\\"Agregar Hotspot\\\" para comenzar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#1e293b',\n                border: '1px solid #334155',\n                borderRadius: 6,\n                padding: '8px 12px',\n                marginBottom: '12px',\n                fontSize: '12px',\n                color: '#94a3b8'\n              },\n              children: (() => {\n                const hotspots = scenes[currentSceneIndex].hotspots;\n                const types = {\n                  access: hotspots.filter(h => h.type === 'access').length,\n                  commerce: hotspots.filter(h => h.type === 'commerce').length,\n                  location: hotspots.filter(h => h.type === 'location').length\n                };\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\uD83D\\uDCCD Acceso: \", types.access]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1125,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\uD83C\\uDFEA Comercio: \", types.commerce]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1126,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\uD83D\\uDCCD Locaci\\xF3n: \", types.location]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1127,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1124,\n                  columnNumber: 25\n                }, this);\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"panel-hotspot-list\",\n              children: scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                let accessInfo = null;\n                if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                  const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                  accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                }\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    gap: 8\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [hotspot.type === 'access' ? 'Punto de Acceso' : hotspot.title || 'Hotspot', accessInfo && /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: '#38bdf8',\n                        marginLeft: 8,\n                        fontSize: 13\n                      },\n                      children: accessInfo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1143,\n                      columnNumber: 44\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1141,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      background: 'transparent',\n                      color: '#ef4444',\n                      border: 'none',\n                      fontSize: 18,\n                      cursor: 'pointer'\n                    },\n                    title: \"Eliminar hotspot\",\n                    onClick: () => {\n                      if (window.confirm('¿Eliminar este hotspot?')) handleDeleteHotspot(idx);\n                    },\n                    children: \"\\uD83D\\uDDD1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1145,\n                    columnNumber: 27\n                  }, this)]\n                }, hotspot._id || idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1140,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipos de Hotspots:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1154,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              margin: '8px 0',\n              paddingLeft: '20px',\n              fontSize: '13px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83D\\uDCCD Acceso:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1156,\n                columnNumber: 21\n              }, this), \" Navega a otra escena del tour\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83C\\uDFEA Comercio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1157,\n                columnNumber: 21\n              }, this), \" Muestra informaci\\xF3n de un negocio\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83D\\uDCCD Locaci\\xF3n:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1158,\n                columnNumber: 21\n              }, this), \" Muestra informaci\\xF3n de un lugar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: '12px',\n              fontSize: '13px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Controles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 44\n            }, this), \"\\u2022 Haz doble clic en hotspots de acceso para navegar\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 68\n            }, this), \"\\u2022 Haz clic en hotspots para ver/editar informaci\\xF3n\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `editor-backdrop${open ? ' open' : ''}`,\n      onClick: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","TransitionManager","cleanImageFilters","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","isMobileDevice","test","navigator","userAgent","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","transitionManagerRef","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","accessSpheresRef","fetchTour","_tourData$scenes","_tourData$scenes2","response","getTour","tourData","data","scenes","scene","sceneIndex","hotspots","Array","isArray","filter","pitch","yaw","console","warn","log","id","_id","name","length","totalHotspots","reduce","total","_scene$hotspots","err","current","domElement","contains","removeChild","dispose","firstChild","clientWidth","window","innerWidth","clientHeight","innerHeight","Scene","camera","PerspectiveCamera","position","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","max","min","deltaY","updateProjectionMatrix","passive","animationId","animate","requestAnimationFrame","t","Date","now","forEach","sphere","sin","x","update","render","handleResize","w","h","aspect","removeEventListener","cancelAnimationFrame","currentScene","children","child","geometry","mat","remove","SphereGeometry","textureLoader","TextureLoader","imageUrl","load","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","MeshBasicMaterial","side","DoubleSide","Mesh","add","renderHotspotsForScene","color","debugHotspots","sceneData","accessHotspots","commerceHotspots","locationHotspots","i","index","targetSceneId","title","threeScene","validHotspots","radius","phi","MathUtils","degToRad","theta","y","cos","z","obj3d","MeshStandardMaterial","emissive","metalness","roughness","sceneName","isAccessHotspot","hotspotIndex","push","gradient","createRadialGradient","addColorStop","transparent","dom","lastClickTime","doubleClickNavigateToAccessHotspot","targetIdx","findIndex","s","String","targetSceneName","startTransition","availableScenes","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","obj","object","handleImageUpload","files","target","from","File","file","_uploadRes$data","uploadRes","uploadImage","Error","newScene","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","newHotspot","toString","refreshedTour","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","style","cursor","handleSceneClick","point","acos","atan2","radToDeg","saveNewHotspot","sceneId","addHotspot","refreshed","handleDeleteScene","deleteIdx","_","idx","newIndex","handleDeleteHotspot","hotspotIdx","enabled","lastAlpha","lastBeta","lastGamma","smoothAlpha","smoothBeta","smoothGamma","smoothFactor","getScreenOrientation","screen","orientation","angle","handleOrientation","alpha","beta","gamma","_alpha","_beta","_gamma","orient","orientRad","zee","Vector3","euler","Euler","q0","Quaternion","q1","sqrt","quaternion","setFromEuler","multiply","setFromAxisAngle","copy","handleScreenOrientation","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","onReturn","fade","onSave","onCancel","_c","_scenes$currentSceneI","_scenes$currentSceneI2","_scenes$currentSceneI3","_scenes$currentSceneI4","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","accept","onChange","display","alignItems","justifyContent","flex","src","alt","marginLeft","stopPropagation","confirm","gap","onMouseEnter","onMouseLeave","textAlign","marginTop","types","access","commerce","location","accessInfo","find","margin","paddingLeft","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport { TransitionManager, cleanImageFilters } from '../../utils/transitions';\n\n// Utilidad para obtener la URL absoluta de la imagen\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\nfunction TourEditor({ tourId }) {\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const transitionManagerRef = useRef(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        const tourData = response.data;\n        \n        // Validar y limpiar datos del tour\n        if (tourData && tourData.scenes) {\n          tourData.scenes = tourData.scenes.map((scene, sceneIndex) => {\n            if (scene.hotspots && Array.isArray(scene.hotspots)) {\n              // Limpiar hotspots inválidos\n              scene.hotspots = scene.hotspots.filter(hotspot => {\n                if (!hotspot || typeof hotspot.pitch !== 'number' || typeof hotspot.yaw !== 'number') {\n                  console.warn(`Eliminando hotspot inválido en escena ${sceneIndex}:`, hotspot);\n                  return false;\n                }\n                return true;\n              });\n            }\n            return scene;\n          });\n        }\n        \n        setTour(tourData);\n        setLoading(false);\n        \n        console.log('Tour cargado:', {\n          id: tourData._id,\n          name: tourData.name,\n          scenes: tourData.scenes?.length || 0,\n          totalHotspots: tourData.scenes?.reduce((total, scene) => total + (scene.hotspots?.length || 0), 0) || 0\n        });\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error('Error cargando tour:', err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5; // INVERTIR dirección de rotación\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (\n        rendererRef.current &&\n        rendererRef.current.domElement &&\n        containerRef.current &&\n        containerRef.current.contains(rendererRef.current.domElement)\n      ) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current con manejo optimizado de hotspots\n  useEffect(() => {\n    if (\n      !tour ||\n      !sceneRef.current ||\n      !tour.scenes ||\n      !Array.isArray(tour.scenes) ||\n      tour.scenes.length === 0 ||\n      currentSceneIndex === -1 ||\n      !tour.scenes[currentSceneIndex]\n    ) return;\n\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior completamente\n    while (scene.children.length > 0) {\n      const child = scene.children[0];\n      // Limpiar recursos de Three.js\n      if (child.geometry) child.geometry.dispose();\n      if (child.material) {\n        if (Array.isArray(child.material)) {\n          child.material.forEach(mat => mat.dispose());\n        } else {\n          child.material.dispose();\n        }\n      }\n      scene.remove(child);\n    }\n    \n    // Limpiar referencias\n    hotspotSpritesRef.current = [];\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n        }\n        \n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // --- Renderizar Hotspots con estado optimizado ---\n        renderHotspotsForScene(currentScene, scene);\n      },\n      undefined,\n      err => {\n        console.error('Error al cargar la textura:', err, imageUrl);\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      }\n    );\n  }, [tour, currentSceneIndex]);\n\n  // Función de utilidad para depurar hotspots\n  const debugHotspots = (sceneData, sceneIndex) => {\n    if (!sceneData.hotspots || !Array.isArray(sceneData.hotspots)) {\n      console.log(`Escena ${sceneIndex}: No hay hotspots`);\n      return;\n    }\n    \n    console.log(`Escena ${sceneIndex} (${sceneData.name}):`, {\n      totalHotspots: sceneData.hotspots.length,\n      accessHotspots: sceneData.hotspots.filter(h => h.type === 'access').length,\n      commerceHotspots: sceneData.hotspots.filter(h => h.type === 'commerce').length,\n      locationHotspots: sceneData.hotspots.filter(h => h.type === 'location').length,\n      hotspots: sceneData.hotspots.map((h, i) => ({\n        index: i,\n        type: h.type,\n        pitch: h.pitch,\n        yaw: h.yaw,\n        targetSceneId: h.targetSceneId,\n        title: h.title\n      }))\n    });\n  };\n\n  // Función optimizada para renderizar hotspots\n  const renderHotspotsForScene = (sceneData, threeScene) => {\n    if (!Array.isArray(sceneData.hotspots) || sceneData.hotspots.length === 0) {\n      return;\n    }\n\n    // Validar y limpiar hotspots antes de renderizar\n    const validHotspots = sceneData.hotspots.filter((hotspot, index) => {\n      // Validar que el hotspot tenga las propiedades requeridas\n      if (!hotspot || typeof hotspot.pitch !== 'number' || typeof hotspot.yaw !== 'number') {\n        console.warn(`Hotspot inválido en índice ${index}:`, hotspot);\n        return false;\n      }\n      \n      // Validar que el hotspot de acceso tenga targetSceneId\n      if (hotspot.type === 'access' && !hotspot.targetSceneId) {\n        console.warn(`Hotspot de acceso sin targetSceneId en índice ${index}:`, hotspot);\n        return false;\n      }\n      \n      return true;\n    });\n\n    console.log(`Renderizando ${validHotspots.length} hotspots válidos para la escena ${currentSceneIndex}`);\n    \n    // Depurar hotspots para esta escena\n    debugHotspots(sceneData, currentSceneIndex);\n\n    validHotspots.forEach((hotspot, index) => {\n      try {\n        // Convertir pitch/yaw a coordenadas cartesianas\n        const radius = 500;\n        const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n        const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n        const x = radius * Math.sin(phi) * Math.sin(theta);\n        const y = radius * Math.cos(phi);\n        const z = radius * Math.sin(phi) * Math.cos(theta);\n\n        let obj3d;\n        \n        if (hotspot.type === 'access') {\n          // Esfera 3D para access con mejor visualización\n          const geometry = new THREE.SphereGeometry(12, 32, 32);\n          const material = new THREE.MeshStandardMaterial({ \n            color: 0x38bdf8, \n            emissive: 0x0ea5e9, \n            metalness: 0.3, \n            roughness: 0.5 \n          });\n          obj3d = new THREE.Mesh(geometry, material);\n          \n          // Agregar información adicional al hotspot para mejor navegación\n          obj3d.userData.hotspot = { \n            ...hotspot, \n            sceneIndex: currentSceneIndex,\n            sceneName: sceneData.name\n          };\n          obj3d.userData.isAccessHotspot = true;\n          obj3d.userData.hotspotIndex = index;\n          accessSpheresRef.current.push(obj3d);\n        } else {\n          // Sprite para otros tipos con mejor diseño\n          const size = 64;\n          const canvas = document.createElement('canvas');\n          canvas.width = size;\n          canvas.height = size;\n          const ctx = canvas.getContext('2d');\n          \n          // Fondo con gradiente\n          const gradient = ctx.createRadialGradient(size/2, size/2, 0, size/2, size/2, size/2);\n          gradient.addColorStop(0, '#38bdf8');\n          gradient.addColorStop(1, '#0ea5e9');\n          ctx.fillStyle = gradient;\n          ctx.beginPath();\n          ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n          ctx.fill();\n          \n          // Borde blanco\n          ctx.lineWidth = 4;\n          ctx.strokeStyle = '#fff';\n          ctx.stroke();\n          \n          // Sombra\n          ctx.shadowColor = '#0ea5e9';\n          ctx.shadowBlur = 8;\n          \n          const texture = new THREE.CanvasTexture(canvas);\n          const material = new THREE.SpriteMaterial({ \n            map: texture, \n            depthTest: false,\n            transparent: true\n          });\n          obj3d = new THREE.Sprite(material);\n          obj3d.scale.set(20, 20, 1);\n          obj3d.userData.hotspot = { \n            ...hotspot, \n            sceneIndex: currentSceneIndex,\n            sceneName: sceneData.name\n          };\n          obj3d.userData.hotspotIndex = index;\n        }\n        \n        obj3d.position.set(x, y, z);\n        threeScene.add(obj3d);\n        hotspotSpritesRef.current.push(obj3d);\n        \n      } catch (error) {\n        console.error('Error renderizando hotspot:', error, hotspot);\n      }\n    });\n  };\n\n  // --- Detección de clics en hotspots optimizada ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current || !tour) return;\n    \n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    \n    // Función optimizada para navegar a hotspots de acceso\n    const doubleClickNavigateToAccessHotspot = (hotspot) => {\n      if (!hotspot || hotspot.type !== 'access' || !hotspot.targetSceneId) {\n        console.log('Hotspot inválido para navegación:', hotspot);\n        return;\n      }\n      \n      // Buscar la escena destino usando diferentes métodos de comparación\n      let targetIdx = -1;\n      \n      // Método 1: Comparación directa de IDs\n      targetIdx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n      \n      // Método 2: Si no se encuentra, buscar por índice (fallback)\n      if (targetIdx === -1 && typeof hotspot.targetSceneId === 'number') {\n        targetIdx = hotspot.targetSceneId;\n      }\n      \n      // Método 3: Buscar por nombre de escena (fallback adicional)\n      if (targetIdx === -1 && hotspot.targetSceneName) {\n        targetIdx = tour.scenes.findIndex(s => s.name === hotspot.targetSceneName);\n      }\n      \n      if (targetIdx !== -1 && targetIdx < tour.scenes.length) {\n        console.log(`Navegando de escena ${currentSceneIndex} a escena ${targetIdx}`);\n        startTransition(targetIdx);\n      } else {\n        console.error('Escena destino no encontrada:', {\n          targetSceneId: hotspot.targetSceneId,\n          availableScenes: tour.scenes.map((s, i) => ({ index: i, id: s._id, name: s.name }))\n        });\n      }\n    };\n    \n    // Función optimizada para manejar clics en hotspots\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      \n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      \n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      \n      // Usar todos los objetos de la escena actual para detectar hotspots\n      const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        \n        // Verificar si es un hotspot\n        if (obj.userData && obj.userData.hotspot) {\n          const hotspot = obj.userData.hotspot;\n          \n          if (obj.userData.isAccessHotspot) {\n            if (now - lastClickTime < 400) { // doble click\n              console.log('Doble clic en hotspot de acceso:', hotspot);\n              doubleClickNavigateToAccessHotspot(hotspot);\n            }\n            lastClickTime = now;\n          } else {\n            console.log('Clic en hotspot informativo:', hotspot);\n            setSelectedHotspot(hotspot);\n          }\n        }\n      }\n    }\n    \n    dom.addEventListener('pointerdown', onPointerDown);\n    \n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex, hotspotSpritesRef.current]);\n\n  // Animación de transición optimizada\n  function startTransition(targetIdx) {\n    if (!transitionManagerRef.current) {\n      setCurrentSceneIndex(targetIdx);\n      return;\n    }\n    \n    console.log(`Iniciando transición de escena ${currentSceneIndex} a ${targetIdx}`);\n    \n    // Limpiar estados de hotspots antes de la transición\n    setSelectedHotspot(null);\n    setPlacementMode(false);\n    \n    // Usar el nuevo sistema de transiciones\n    transitionManagerRef.current.startTransition(\n      getAbsoluteImageUrl(tour.scenes[targetIdx].image),\n      () => {\n        setCurrentSceneIndex(targetIdx);\n      }\n    );\n  }\n\n  // Inicializar el sistema de transiciones\n  useEffect(() => {\n    if (sceneRef.current && cameraRef.current && rendererRef.current) {\n      transitionManagerRef.current = new TransitionManager(\n        sceneRef.current,\n        cameraRef.current,\n        rendererRef.current\n      );\n    }\n    \n    return () => {\n      if (transitionManagerRef.current) {\n        transitionManagerRef.current.dispose();\n      }\n    };\n  }, [tour]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async (e) => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async (files) => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot optimizado\n  const handleSaveHotspot = async (hotspotData) => {\n    try {\n      console.log('Guardando hotspot:', hotspotData);\n      \n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n\n      if (hotspotData._id) {\n        // Actualizar hotspot existente\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = {\n            ...currentScene.hotspots[index],\n            ...hotspotData\n          };\n        }\n      } else {\n        // Crear nuevo hotspot\n        const newHotspot = {\n          ...hotspotData,\n          _id: Date.now().toString()\n        };\n        currentScene.hotspots.push(newHotspot);\n      }\n\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      \n      // Guardar en el backend\n      await api.updateTour(tourId, updatedTour);\n      \n      // Recargar el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      const refreshedTour = response.data ? response.data : response;\n      setTour(refreshedTour);\n      \n      // Limpiar estados\n      setSelectedHotspot(null);\n      setPlacementMode(false);\n      \n      console.log('Hotspot guardado exitosamente');\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = (hotspotData) => {\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Efecto unificado para manejar el modo de colocación de hotspots\n  useEffect(() => {\n    if (!rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n\n    const dom = rendererRef.current.domElement;\n\n    if (placementMode) {\n      dom.style.cursor = 'crosshair';\n      // Elimina overlay visual, solo usa cursor\n      // El handler de click está en el canvas principal (ver más abajo)\n    } else {\n      dom.style.cursor = '';\n    }\n  }, [placementMode, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = (event) => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({ pitch, yaw });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST optimizado\n  const saveNewHotspot = async (hotspotData) => {\n    try {\n      console.log('Guardando nuevo hotspot:', hotspotData);\n      \n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) {\n        throw new Error('Tour o escena no disponible');\n      }\n      \n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      \n      // Obtener el hotspot creado\n      const newHotspot = response.data ? response.data : response;\n      console.log('Hotspot creado en backend:', newHotspot);\n      \n      // Actualizar el estado local\n      const updatedTour = { ...tour };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      \n      // Limpiar estados\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      setPlacementMode(false);\n      \n      // Recargar el tour desde la API para asegurar sincronización completa\n      const refreshed = await api.getTour(tourId);\n      const refreshedTour = refreshed.data ? refreshed.data : refreshed;\n      setTour(refreshedTour);\n      \n      console.log('Nuevo hotspot guardado exitosamente');\n    } catch (error) {\n      console.error('Error al guardar el hotspot:', error);\n      alert(`Error al guardar el hotspot: ${error.message || 'Intente nuevamente'}`);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      setPlacementMode(false);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async (deleteIdx) => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => { window.handleDeleteScene = undefined; };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async (hotspotIdx) => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = { ...updatedScenes[currentSceneIndex] };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = { ...tour, scenes: updatedScenes };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  // --- GIROSCOPIO: Lógica de activación y manejo estilo YouTube 360 ---\n  useEffect(() => {\n    if (!isMobileDevice() || !cameraRef.current || !controlsRef.current) return;\n\n    // Habilitar/deshabilitar OrbitControls según el estado del giroscopio\n    controlsRef.current.enabled = true;\n\n    let lastAlpha = 0, lastBeta = 0, lastGamma = 0;\n    let smoothAlpha = 0, smoothBeta = 0, smoothGamma = 0;\n    const smoothFactor = 0.15;\n\n    function getScreenOrientation() {\n      if (window.screen.orientation && window.screen.orientation.angle !== undefined) {\n        return window.screen.orientation.angle;\n      }\n      return window.orientation || 0;\n    }\n\n    function handleOrientation(event) {\n      let alpha = event.alpha || 0;\n      let beta = event.beta || 0;\n      let gamma = event.gamma || 0;\n\n      // INVERTIR alpha para invertir la rotación horizontal\n      alpha = -alpha;\n\n      smoothAlpha = smoothAlpha * (1 - smoothFactor) + alpha * smoothFactor;\n      smoothBeta = smoothBeta * (1 - smoothFactor) + beta * smoothFactor;\n      smoothGamma = smoothGamma * (1 - smoothFactor) + gamma * smoothFactor;\n\n      const _alpha = THREE.MathUtils.degToRad(smoothAlpha);\n      const _beta = THREE.MathUtils.degToRad(smoothBeta);\n      const _gamma = THREE.MathUtils.degToRad(smoothGamma);\n\n      const orient = getScreenOrientation();\n      const orientRad = THREE.MathUtils.degToRad(orient);\n\n      const zee = new THREE.Vector3(0, 0, 1);\n      const euler = new THREE.Euler();\n      const q0 = new THREE.Quaternion();\n      const q1 = new THREE.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n\n      euler.set(_beta, _alpha, -_gamma, 'YXZ');\n      let quaternion = new THREE.Quaternion().setFromEuler(euler);\n      quaternion.multiply(q1);\n      quaternion.multiply(q0.setFromAxisAngle(zee, -orientRad));\n\n      cameraRef.current.quaternion.copy(quaternion);\n    }\n\n    window.addEventListener('deviceorientation', handleOrientation, true);\n\n    const handleScreenOrientation = () => {\n      smoothAlpha = lastAlpha;\n      smoothBeta = lastBeta;\n      smoothGamma = lastGamma;\n    };\n    window.addEventListener('orientationchange', handleScreenOrientation);\n\n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation, true);\n      window.removeEventListener('orientationchange', handleScreenOrientation);\n      // Rehabilitar OrbitControls al salir del modo giroscopio\n      if (controlsRef.current) controlsRef.current.enabled = true;\n    };\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading\">Cargando tour...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return (\n      <div className=\"tour-editor\">\n        <div ref={containerRef} className=\"three-container\" />\n        <ControlPanel\n          open={panelOpen}\n          setOpen={setPanelOpen}\n          tour={tour}\n          handleDragDropImage={handleDragDropImage}\n          handleImageUpload={handleImageUpload}\n          scenes={[]}\n          placementMode={placementMode}\n          setPlacementMode={setPlacementMode}\n          onReturn={() => navigate('/hub')}\n          handleDeleteHotspot={handleDeleteHotspot}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tour-editor\">\n      <div\n        ref={containerRef}\n        className=\"three-container\"\n        onClick={handleSceneClick}\n      />\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <ControlPanel\n        open={panelOpen}\n        setOpen={setPanelOpen}\n        tour={tour}\n        handleDragDropImage={handleDragDropImage}\n        handleImageUpload={handleImageUpload}\n        scenes={tour.scenes}\n        currentSceneIndex={currentSceneIndex}\n        setCurrentSceneIndex={setCurrentSceneIndex}\n        placementMode={placementMode}\n        setPlacementMode={setPlacementMode}\n        onReturn={() => navigate('/hub')}\n        handleDeleteHotspot={handleDeleteHotspot}\n      />\n      {(selectedHotspot || pendingHotspot) && (\n        <HotspotEditor\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\n          scenes={tour.scenes}\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\n          onCancel={() => {\n            setSelectedHotspot(null);\n            setPlacementMode(false);\n            setPendingHotspot(null);\n          }}\n        />\n      )}\n      {showHotspotModal && newHotspotPosition && (\n        <HotspotCreationModal\n          position={newHotspotPosition}\n          tour={tour}\n          currentSceneIndex={currentSceneIndex}\n          onSave={saveNewHotspot}\n          onCancel={() => {\n            setShowHotspotModal(false);\n            setNewHotspotPosition(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Panel lateral plegable\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  placementMode,\n  setPlacementMode,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return (\n    <>\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\n        <div className=\"panel-header\">\n          <span className=\"panel-title\">Tour Virtual 360°</span>\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\n            {open ? <>&#10094;</> : <>&#10095;</>}\n          </button>\n        </div>\n        {open && (\n          <div className=\"panel-content\">\n            <button\n              className=\"btn-return-hub\"\n              onClick={onReturn}\n              style={{\n                background: '#23272f',\n                color: '#38bdf8',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 0',\n                fontSize: '1rem',\n                fontWeight: 500,\n                marginBottom: 18,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s, color 0.2s'\n              }}\n            >\n              ← Volver al Hub\n            </button>\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\n            <div className=\"panel-section\">\n              <h3>Imágenes 360°</h3>\n              <DragDrop onFileUpload={handleDragDropImage} />\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div className=\"panel-section\">\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\n              {scenes.length === 0 ? (\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\n              ) : (\n                <ul className=\"panel-image-list\">\n                  {scenes.map((scene, idx) => (\n                    <li\n                      key={scene._id || idx}\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\n                      style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center', flex: 1, cursor: 'pointer' }} onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}>\n                        <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\n                        <span>{scene.name}</span>\n                      </div>\n                      {scenes.length > 1 && (\n                        <button\n                          className=\"btn-delete-scene\"\n                          style={{ background: 'transparent', color: '#ef4444', border: 'none', marginLeft: 8, fontSize: 20, cursor: 'pointer' }}\n                          title=\"Eliminar escena\"\n                          onClick={e => {\n                            e.stopPropagation();\n                            if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                              if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                            }\n                          }}\n                        >\n                          🗑️\n                        </button>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            <div className=\"panel-section\">\n              <h3>Hotspots de la Escena ({scenes[currentSceneIndex]?.hotspots?.length || 0})</h3>\n              <div className=\"hotspot-controls\" style={{marginBottom: 15}}>\n                <button\n                  className=\"btn-add-hotspot\"\n                  onClick={() => setPlacementMode(true)}\n                  title=\"Haz clic para activar el modo de colocación de hotspots. Luego haz clic en la imagen 360° donde quieras colocar el hotspot.\"\n                  style={{\n                    background: '#38bdf8',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: 8,\n                    padding: '10px 16px',\n                    fontSize: '14px',\n                    fontWeight: 500,\n                    cursor: 'pointer',\n                    width: '100%',\n                    transition: 'background 0.2s',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    gap: 8,\n                    position: 'relative'\n                  }}\n                  onMouseEnter={(e) => e.target.style.background = '#0ea5e9'}\n                  onMouseLeave={(e) => e.target.style.background = '#38bdf8'}\n                >\n                  <span style={{fontSize: '16px'}}>📍</span>\n                  Agregar Hotspot\n                </button>\n                {placementMode && (\n                  <div className=\"placement-mode-indicator\">\n                    <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8}}>\n                      <strong>Modo de colocación activado</strong>\n                      <button\n                        onClick={() => setPlacementMode(false)}\n                        style={{\n                          background: 'transparent',\n                          border: '1px solid #ef4444',\n                          color: '#ef4444',\n                          borderRadius: 4,\n                          padding: '4px 8px',\n                          fontSize: '11px',\n                          cursor: 'pointer',\n                          transition: 'all 0.2s'\n                        }}\n                        onMouseEnter={(e) => {\n                          e.target.style.background = '#ef4444';\n                          e.target.style.color = '#fff';\n                        }}\n                        onMouseLeave={(e) => {\n                          e.target.style.background = 'transparent';\n                          e.target.style.color = '#ef4444';\n                        }}\n                      >\n                        Cancelar\n                      </button>\n                    </div>\n                    Haz clic en la imagen 360° para colocar el hotspot\n                  </div>\n                )}\n              </div>\n              {scenes[currentSceneIndex]?.hotspots?.length === 0 ? (\n                <div style={{\n                  background: '#1e293b',\n                  border: '1px dashed #334155',\n                  borderRadius: 6,\n                  padding: '20px',\n                  textAlign: 'center',\n                  color: '#64748b',\n                  fontSize: '14px'\n                }}>\n                  <div style={{fontSize: '24px', marginBottom: '8px'}}>📍</div>\n                  No hay hotspots en esta escena\n                  <div style={{fontSize: '12px', marginTop: '4px'}}>\n                    Haz clic en \"Agregar Hotspot\" para comenzar\n                  </div>\n                </div>\n              ) : (\n                <>\n                  {/* Resumen de tipos de hotspots */}\n                  <div style={{\n                    background: '#1e293b',\n                    border: '1px solid #334155',\n                    borderRadius: 6,\n                    padding: '8px 12px',\n                    marginBottom: '12px',\n                    fontSize: '12px',\n                    color: '#94a3b8'\n                  }}>\n                    {(() => {\n                      const hotspots = scenes[currentSceneIndex].hotspots;\n                      const types = {\n                        access: hotspots.filter(h => h.type === 'access').length,\n                        commerce: hotspots.filter(h => h.type === 'commerce').length,\n                        location: hotspots.filter(h => h.type === 'location').length\n                      };\n                      return (\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                          <span>📍 Acceso: {types.access}</span>\n                          <span>🏪 Comercio: {types.commerce}</span>\n                          <span>📍 Locación: {types.location}</span>\n                        </div>\n                      );\n                    })()}\n                  </div>\n                  <ul className=\"panel-hotspot-list\">\n                    {scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                      let accessInfo = null;\n                      if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                        const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                        accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                      }\n                      return (\n                        <li key={hotspot._id || idx} style={{display:'flex',alignItems:'center',justifyContent:'space-between',gap:8}}>\n                          <span>\n                            {hotspot.type === 'access' ? 'Punto de Acceso' : (hotspot.title || 'Hotspot')}\n                            {accessInfo && <span style={{color:'#38bdf8',marginLeft:8,fontSize:13}}>{accessInfo}</span>}\n                          </span>\n                          <button style={{background:'transparent',color:'#ef4444',border:'none',fontSize:18,cursor:'pointer'}} title=\"Eliminar hotspot\" onClick={()=>{if(window.confirm('¿Eliminar este hotspot?'))handleDeleteHotspot(idx)}}>🗑️</button>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </>\n              )}\n            </div>\n            <div className=\"panel-section panel-hint\">\n              <p><strong>Tipos de Hotspots:</strong></p>\n              <ul style={{margin: '8px 0', paddingLeft: '20px', fontSize: '13px'}}>\n                <li><strong>📍 Acceso:</strong> Navega a otra escena del tour</li>\n                <li><strong>🏪 Comercio:</strong> Muestra información de un negocio</li>\n                <li><strong>📍 Locación:</strong> Muestra información de un lugar</li>\n              </ul>\n              <p style={{marginTop: '12px', fontSize: '13px'}}>\n                <strong>Controles:</strong><br/>\n                • Haz doble clic en hotspots de acceso para navegar<br/>\n                • Haz clic en hotspots para ver/editar información\n              </p>\n            </div>\n          </div>\n        )}\n      </aside>\n      <div className={`editor-backdrop${open ? ' open' : ''}`} onClick={() => setOpen(false)} />\n    </>\n  );\n}\n\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}