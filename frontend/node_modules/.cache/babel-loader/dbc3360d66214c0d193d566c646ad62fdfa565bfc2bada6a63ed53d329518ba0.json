{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\TourViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction TourViewer() {\n  _s();\n  const {\n    tourId\n  } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({\n                color: 0x38bdf8,\n                emissive: 0x0ea5e9,\n                metalness: 0.3,\n                roughness: 0.5\n              });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n    loadScene(currentSceneIndex);\n\n    // Animación y animación de esferas\n    let accessSpheres = [];\n    scene.traverse(obj => {\n      if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n    });\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) setCurrentSceneIndex(idx);\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement) containerRef.current.removeChild(renderer.domElement);\n      }\n    };\n  }, [tour, currentSceneIndex]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: \"Tour no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-return\",\n      onClick: () => navigate('/'),\n      children: \"Volver al mapa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(TourViewer, \"nerHwfNQ+RIhIp5woWOAiNmgyUs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TourViewer;\nexport default TourViewer;\nvar _c;\n$RefreshReg$(_c, \"TourViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","api","useParams","useNavigate","jsxDEV","_jsxDEV","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","TourViewer","_s","tourId","tour","setTour","loading","setLoading","error","setError","currentSceneIndex","setCurrentSceneIndex","containerRef","navigate","fetchTour","response","getTour","data","err","scenes","length","current","firstChild","removeChild","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableDamping","dampingFactor","loadScene","index","children","remove","sceneData","geometry","SphereGeometry","scale","textureLoader","TextureLoader","load","texture","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","forEach","hotspot","type","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","Math","sin","y","cos","z","hGeo","hMat","MeshStandardMaterial","color","emissive","metalness","roughness","hMesh","userData","isAccessHotspot","accessSpheres","traverse","obj","push","animate","requestAnimationFrame","t","Date","now","update","render","lastClickTime","dom","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","width","clientY","top","height","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetSceneId","idx","findIndex","s","String","_id","addEventListener","handleResize","aspect","updateProjectionMatrix","removeEventListener","dispose","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/TourViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport api from '../../services/api';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './TourViewer.css';\r\n\r\nfunction getAbsoluteImageUrl(image) {\r\n  if (!image) return '';\r\n  if (image.startsWith('/uploads/')) {\r\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\r\n  }\r\n  return image;\r\n}\r\n\r\nfunction TourViewer() {\r\n  const { tourId } = useParams();\r\n  const [tour, setTour] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\r\n  const containerRef = useRef();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchTour = async () => {\r\n      try {\r\n        const response = await api.getTour(tourId);\r\n        setTour(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('No se pudo cargar el tour');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchTour();\r\n  }, [tourId]);\r\n\r\n  useEffect(() => {\r\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\r\n\r\n    // Limpiar canvas anterior si existe\r\n    if (containerRef.current) {\r\n      while (containerRef.current.firstChild) {\r\n        containerRef.current.removeChild(containerRef.current.firstChild);\r\n      }\r\n    }\r\n\r\n    // Configuración de Three.js\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.set(0, 0, 0.1);\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    containerRef.current.appendChild(renderer.domElement);\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n\r\n    // Cargar escena actual\r\n    const loadScene = (index) => {\r\n      // Limpiar escena\r\n      while (scene.children.length > 0) {\r\n        scene.remove(scene.children[0]);\r\n      }\r\n      const sceneData = tour.scenes[index];\r\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\r\n      geometry.scale(-1, 1, 1);\r\n      const textureLoader = new THREE.TextureLoader();\r\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.magFilter = THREE.LinearFilter;\r\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\r\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\r\n        }\r\n        const material = new THREE.MeshBasicMaterial({\r\n          map: texture,\r\n          side: THREE.DoubleSide\r\n        });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        scene.add(sphere);\r\n\r\n        // Renderizar hotspots de acceso\r\n        if (Array.isArray(sceneData.hotspots)) {\r\n          sceneData.hotspots.forEach(hotspot => {\r\n            if (hotspot.type === 'access') {\r\n              const radius = 500;\r\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\r\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\r\n              const x = radius * Math.sin(phi) * Math.sin(theta);\r\n              const y = radius * Math.cos(phi);\r\n              const z = radius * Math.sin(phi) * Math.cos(theta);\r\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\r\n              const hMat = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\r\n              const hMesh = new THREE.Mesh(hGeo, hMat);\r\n              hMesh.position.set(x, y, z);\r\n              hMesh.userData.hotspot = hotspot;\r\n              hMesh.userData.isAccessHotspot = true;\r\n              scene.add(hMesh);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    loadScene(currentSceneIndex);\r\n\r\n    // Animación y animación de esferas\r\n    let accessSpheres = [];\r\n    scene.traverse(obj => {\r\n      if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\r\n    });\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      // Animación de expansión/contracción para esferas access\r\n      if (accessSpheres.length > 0) {\r\n        const t = Date.now() * 0.003;\r\n        accessSpheres.forEach(sphere => {\r\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\r\n          sphere.scale.set(scale, scale, scale);\r\n        });\r\n      }\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Doble click para navegar entre escenas\r\n    let lastClickTime = 0;\r\n    const dom = renderer.domElement;\r\n    function onPointerDown(event) {\r\n      if (event.button !== 0) return;\r\n      const rect = dom.getBoundingClientRect();\r\n      const mouse = new THREE.Vector2(\r\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\r\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\r\n      );\r\n      const raycaster = new THREE.Raycaster();\r\n      raycaster.setFromCamera(mouse, camera);\r\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\r\n      if (intersects.length > 0) {\r\n        const obj = intersects[0].object;\r\n        const now = Date.now();\r\n        if (obj.userData.isAccessHotspot) {\r\n          if (now - lastClickTime < 400) {\r\n            const hotspot = obj.userData.hotspot;\r\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\r\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\r\n              if (idx !== -1) setCurrentSceneIndex(idx);\r\n            }\r\n          }\r\n          lastClickTime = now;\r\n        }\r\n      }\r\n    }\r\n    dom.addEventListener('pointerdown', onPointerDown);\r\n\r\n    // Manejar redimensionamiento\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Limpieza\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      dom.removeEventListener('pointerdown', onPointerDown);\r\n      if (renderer) {\r\n        renderer.dispose();\r\n        if (containerRef.current && renderer.domElement)\r\n          containerRef.current.removeChild(renderer.domElement);\r\n      }\r\n    };\r\n  }, [tour, currentSceneIndex]);\r\n\r\n  if (loading) {\r\n    return <div className=\"viewer-loading\">Cargando tour...</div>;\r\n  }\r\n  if (error) {\r\n    return <div className=\"viewer-error\">{error}</div>;\r\n  }\r\n  if (!tour) {\r\n    return <div className=\"viewer-error\">Tour no encontrado</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"tour-viewer-container\">\r\n      <div ref={containerRef} className=\"three-container\"></div>\r\n      {/* Eliminar la sección de scene-selector para que no haya botones de navegación */}\r\n      <button className=\"btn-return\" onClick={() => navigate('/')}>Volver al mapa</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TourViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}