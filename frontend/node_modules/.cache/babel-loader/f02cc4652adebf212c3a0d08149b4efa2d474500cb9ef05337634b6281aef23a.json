{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\nimport { getAbsoluteImageUrl, isMobileDevice, createHotspotSprite, createPointerHandlers, loadOptimizedTexture, createOptimizedSphereGeometry, navigateToAccessHotspot, createOptimizedControls, createZoomHandler, createOptimizedRenderer } from '../../utils/tourUtils';\n\n// Funciones locales específicas del editor\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  // Estado para transición cruzada\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = createOptimizedRenderer(containerRef.current, width, height);\n    const controls = createOptimizedControls(camera, renderer.domElement);\n\n    // Configurar zoom con scroll optimizado\n    const zoomHandler = createZoomHandler(camera);\n    renderer.domElement.addEventListener('wheel', zoomHandler, {\n      passive: false\n    });\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      // Anisotropía para mayor nitidez\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots ---\n      hotspotSpritesRef.current = [];\n      if (Array.isArray(currentScene.hotspots)) {\n        currentScene.hotspots.forEach(hotspot => {\n          // Convertir pitch/yaw a coordenadas cartesianas\n          const radius = 500;\n          const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n          const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n          const x = radius * Math.sin(phi) * Math.sin(theta);\n          const y = radius * Math.cos(phi);\n          const z = radius * Math.sin(phi) * Math.cos(theta);\n          let obj3d;\n          if (hotspot.type === 'access') {\n            // Esfera 3D para access\n            const geometry = new THREE.SphereGeometry(12, 32, 32);\n            const material = new THREE.MeshStandardMaterial({\n              color: 0x38bdf8,\n              emissive: 0x0ea5e9,\n              metalness: 0.3,\n              roughness: 0.5\n            });\n            obj3d = new THREE.Mesh(geometry, material);\n            obj3d.userData.hotspot = hotspot;\n            obj3d.userData.isAccessHotspot = true;\n            accessSpheresRef.current.push(obj3d);\n          } else {\n            // Sprite para otros tipos\n            const size = 64;\n            const canvas = document.createElement('canvas');\n            canvas.width = size;\n            canvas.height = size;\n            const ctx = canvas.getContext('2d');\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n            ctx.fillStyle = '#38bdf8';\n            ctx.shadowColor = '#0ea5e9';\n            ctx.shadowBlur = 8;\n            ctx.fill();\n            ctx.lineWidth = 4;\n            ctx.strokeStyle = '#fff';\n            ctx.stroke();\n            const texture = new THREE.CanvasTexture(canvas);\n            const material = new THREE.SpriteMaterial({\n              map: texture,\n              depthTest: false\n            });\n            obj3d = new THREE.Sprite(material);\n            obj3d.scale.set(20, 20, 1);\n            obj3d.userData.hotspot = hotspot;\n          }\n          obj3d.position.set(x, y, z);\n          scene.add(obj3d);\n          hotspotSpritesRef.current.push(obj3d);\n        });\n      }\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // Función para navegar a hotspots de acceso\n    const handleHotspotClick = hotspot => {\n      if (navigateToAccessHotspot(hotspot, tour, startTransition)) {\n        // Navegación exitosa\n      }\n    };\n\n    // Función para manejar hover de hotspots\n    const handleHotspotHover = (obj, isHovering) => {\n      if (obj && obj.userData.hotspot && !obj.userData.isAccessHotspot) {\n        // Mostrar información del hotspot si es necesario\n      }\n    };\n\n    // Crear manejadores de eventos optimizados\n    const {\n      onPointerDown,\n      onPointerMove\n    } = createPointerHandlers(dom, cameraRef.current, () => hotspotSpritesRef.current || [], handleHotspotClick, handleHotspotHover);\n\n    // Agregar manejador específico para selección de hotspots\n    const handlePointerDown = event => {\n      onPointerDown(event);\n\n      // Lógica adicional para selección de hotspots en modo editor\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        if (obj.userData.hotspot && !obj.userData.isAccessHotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    };\n    dom.addEventListener('pointerdown', handlePointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n    return () => {\n      dom.removeEventListener('pointerdown', handlePointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (fade) return; // Evitar doble trigger\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n    // Animar FOV (zoom in)\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 35;\n    let duration = 350;\n    let start = null;\n    function animateZoomIn(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomIn);\n      } else {\n        // Esperar un poco y luego cambiar escena\n        setTimeout(() => {\n          setCurrentSceneIndex(targetIdx);\n        }, 200);\n      }\n    }\n    requestAnimationFrame(animateZoomIn);\n  }\n\n  // Animar transición cruzada\n  useEffect(() => {\n    if (!transitioning) return;\n    let frame;\n    function animate() {\n      setTransitionProgress(prev => {\n        const next = Math.min(prev + 0.04, 1);\n        if (next < 1) {\n          frame = requestAnimationFrame(animate);\n        } else {\n          setTransitioning(false);\n          setPrevTexture(null);\n          setCurrentSceneIndex(pendingSceneIndex);\n        }\n        return next;\n      });\n    }\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }, [transitioning]);\n\n  // Modificar render de la escena para usar el shader durante la transición\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    // Crear geometría y materiales\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      // Material de transición\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      // Render loop\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        var _uploadRes$data;\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async files => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const handlePointerDown = event => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - phi * 180 / Math.PI;\n      const yaw = theta * 180 / Math.PI;\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async hotspotData => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async deleteIdx => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => {\n      window.handleDeleteScene = undefined;\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async hotspotIdx => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = {\n      ...updatedScenes[currentSceneIndex]\n    };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = {\n      ...tour,\n      scenes: updatedScenes\n    };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  // --- GIROSCOPIO: Lógica de activación y manejo estilo YouTube 360 ---\n  useEffect(() => {\n    if (!isMobileDevice() || !cameraRef.current || !controlsRef.current) return;\n\n    // Habilitar/deshabilitar OrbitControls según el estado del giroscopio\n    controlsRef.current.enabled = true;\n    let lastAlpha = 0,\n      lastBeta = 0,\n      lastGamma = 0;\n    let smoothAlpha = 0,\n      smoothBeta = 0,\n      smoothGamma = 0;\n    const smoothFactor = 0.15;\n    function getScreenOrientation() {\n      if (window.screen.orientation && window.screen.orientation.angle !== undefined) {\n        return window.screen.orientation.angle;\n      }\n      return window.orientation || 0;\n    }\n    function handleOrientation(event) {\n      let alpha = event.alpha || 0;\n      let beta = event.beta || 0;\n      let gamma = event.gamma || 0;\n\n      // INVERTIR alpha para invertir la rotación horizontal\n      alpha = -alpha;\n      smoothAlpha = smoothAlpha * (1 - smoothFactor) + alpha * smoothFactor;\n      smoothBeta = smoothBeta * (1 - smoothFactor) + beta * smoothFactor;\n      smoothGamma = smoothGamma * (1 - smoothFactor) + gamma * smoothFactor;\n      const _alpha = THREE.MathUtils.degToRad(smoothAlpha);\n      const _beta = THREE.MathUtils.degToRad(smoothBeta);\n      const _gamma = THREE.MathUtils.degToRad(smoothGamma);\n      const orient = getScreenOrientation();\n      const orientRad = THREE.MathUtils.degToRad(orient);\n      const zee = new THREE.Vector3(0, 0, 1);\n      const euler = new THREE.Euler();\n      const q0 = new THREE.Quaternion();\n      const q1 = new THREE.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n      euler.set(_beta, _alpha, -_gamma, 'YXZ');\n      let quaternion = new THREE.Quaternion().setFromEuler(euler);\n      quaternion.multiply(q1);\n      quaternion.multiply(q0.setFromAxisAngle(zee, -orientRad));\n      cameraRef.current.quaternion.copy(quaternion);\n    }\n    window.addEventListener('deviceorientation', handleOrientation, true);\n    const handleScreenOrientation = () => {\n      smoothAlpha = lastAlpha;\n      smoothBeta = lastBeta;\n      smoothGamma = lastGamma;\n    };\n    window.addEventListener('orientationchange', handleScreenOrientation);\n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation, true);\n      window.removeEventListener('orientationchange', handleScreenOrientation);\n      // Rehabilitar OrbitControls al salir del modo giroscopio\n      if (controlsRef.current) controlsRef.current.enabled = true;\n    };\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      setIsAddingHotspot: () => setPlacementMode(true),\n      onReturn: () => navigate('/hub'),\n      handleDeleteHotspot: handleDeleteHotspot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 740,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"lcw9gyVlpY3jUgB6kpCqtKaqex4=\", false, function () {\n  return [useNavigate];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  flex: 1,\n                  cursor: 'pointer'\n                },\n                onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                  alt: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 23\n              }, this), scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete-scene\",\n                style: {\n                  background: 'transparent',\n                  color: '#ef4444',\n                  border: 'none',\n                  marginLeft: 8,\n                  fontSize: 20,\n                  cursor: 'pointer'\n                },\n                title: \"Eliminar escena\",\n                onClick: e => {\n                  e.stopPropagation();\n                  if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                    if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                  }\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 25\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hotspots de la Escena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-hotspot-list\",\n            children: scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n              let accessInfo = null;\n              if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n              }\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  gap: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [hotspot.type === 'access' ? 'Punto de Acceso' : hotspot.title || 'Hotspot', accessInfo && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#38bdf8',\n                      marginLeft: 8,\n                      fontSize: 13\n                    },\n                    children: accessInfo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 894,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 892,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'transparent',\n                    color: '#ef4444',\n                    border: 'none',\n                    fontSize: 18,\n                    cursor: 'pointer'\n                  },\n                  title: \"Eliminar hotspot\",\n                  onClick: () => {\n                    if (window.confirm('¿Eliminar este hotspot?')) handleDeleteHotspot(idx);\n                  },\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 23\n                }, this)]\n              }, hotspot._id || idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Haz doble clic en un hotspot de tipo \\\"Acceso\\\" para navegar a la escena vinculada.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Usa Ctrl + clic para seleccionar m\\xFAltiples hotspots.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `editor-backdrop${open ? ' open' : ''}`,\n      onClick: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","RadialFadeMaterial","getAbsoluteImageUrl","isMobileDevice","createHotspotSprite","createPointerHandlers","loadOptimizedTexture","createOptimizedSphereGeometry","navigateToAccessHotspot","createOptimizedControls","createZoomHandler","createOptimizedRenderer","jsxDEV","_jsxDEV","Fragment","_Fragment","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","fade","setFade","pendingSceneIndex","setPendingSceneIndex","transitioning","setTransitioning","transitionProgress","setTransitionProgress","prevTexture","setPrevTexture","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","accessSpheresRef","fetchTour","response","getTour","data","err","console","current","domElement","contains","removeChild","dispose","firstChild","width","clientWidth","window","innerWidth","height","clientHeight","innerHeight","scene","Scene","camera","PerspectiveCamera","position","set","renderer","controls","zoomHandler","addEventListener","passive","animationId","animate","requestAnimationFrame","length","t","Date","now","forEach","sphere","scale","Math","sin","x","update","render","handleResize","w","h","aspect","updateProjectionMatrix","setSize","removeEventListener","cancelAnimationFrame","scenes","Array","isArray","currentScene","children","remove","geometry","SphereGeometry","textureLoader","TextureLoader","imageUrl","image","load","texture","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","min","material","MeshBasicMaterial","map","side","DoubleSide","Mesh","add","hotspots","hotspot","radius","phi","MathUtils","degToRad","pitch","theta","yaw","y","cos","z","obj3d","type","MeshStandardMaterial","color","emissive","metalness","roughness","userData","isAccessHotspot","push","size","canvas","document","createElement","ctx","getContext","beginPath","arc","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","CanvasTexture","SpriteMaterial","depthTest","Sprite","dom","lastClickTime","handleHotspotClick","startTransition","handleHotspotHover","obj","isHovering","onPointerDown","onPointerMove","handlePointerDown","event","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetIdx","startFov","fov","endFov","duration","start","animateZoomIn","ts","progress","setTimeout","frame","prev","next","loader","nextTexture","renderTransition","uniforms","uProgress","value","animateZoomOut","handleImageUpload","e","files","target","from","File","file","_uploadRes$data","uploadRes","uploadImage","Error","newScene","name","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","_id","index","findIndex","toString","button","vector","Vector3","unproject","camPos","dir","sub","normalize","acos","atan2","Number","toFixed","style","cursor","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","handleSceneClick","point","radToDeg","saveNewHotspot","sceneId","addHotspot","newHotspot","refreshed","handleDeleteScene","deleteIdx","filter","_","idx","newIndex","handleDeleteHotspot","hotspotIdx","enabled","lastAlpha","lastBeta","lastGamma","smoothAlpha","smoothBeta","smoothGamma","smoothFactor","getScreenOrientation","screen","orientation","angle","handleOrientation","alpha","beta","gamma","_alpha","_beta","_gamma","orient","orientRad","zee","euler","Euler","q0","Quaternion","q1","sqrt","quaternion","setFromEuler","multiply","setFromAxisAngle","copy","handleScreenOrientation","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","onClick","onReturn","onSave","onCancel","_c","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","id","accept","onChange","display","alignItems","justifyContent","flex","src","alt","marginLeft","title","stopPropagation","confirm","accessInfo","targetSceneId","find","s","String","gap","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\nimport {\n  getAbsoluteImageUrl,\n  isMobileDevice,\n  createHotspotSprite,\n  createPointerHandlers,\n  loadOptimizedTexture,\n  createOptimizedSphereGeometry,\n  navigateToAccessHotspot,\n  createOptimizedControls,\n  createZoomHandler,\n  createOptimizedRenderer\n} from '../../utils/tourUtils';\n\n// Funciones locales específicas del editor\n\nfunction TourEditor({ tourId }) {\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  // Estado para transición cruzada\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n\n        const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75, \n      width / height, \n      0.1, \n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n\n    const renderer = createOptimizedRenderer(containerRef.current, width, height);\n    const controls = createOptimizedControls(camera, renderer.domElement);\n    \n    // Configurar zoom con scroll optimizado\n    const zoomHandler = createZoomHandler(camera);\n    renderer.domElement.addEventListener('wheel', zoomHandler, { passive: false });\n\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (\n        rendererRef.current &&\n        rendererRef.current.domElement &&\n        containerRef.current &&\n        containerRef.current.contains(rendererRef.current.domElement)\n      ) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (\n      !tour ||\n      !sceneRef.current ||\n      !tour.scenes ||\n      !Array.isArray(tour.scenes) ||\n      tour.scenes.length === 0 ||\n      currentSceneIndex === -1 ||\n      !tour.scenes[currentSceneIndex]\n    ) return;\n\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        // Anisotropía para mayor nitidez\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // --- Renderizar Hotspots ---\n        hotspotSpritesRef.current = [];\n        if (Array.isArray(currentScene.hotspots)) {\n          currentScene.hotspots.forEach(hotspot => {\n            // Convertir pitch/yaw a coordenadas cartesianas\n            const radius = 500;\n            const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n            const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n            const x = radius * Math.sin(phi) * Math.sin(theta);\n            const y = radius * Math.cos(phi);\n            const z = radius * Math.sin(phi) * Math.cos(theta);\n            let obj3d;\n            if (hotspot.type === 'access') {\n              // Esfera 3D para access\n              const geometry = new THREE.SphereGeometry(12, 32, 32);\n              const material = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              obj3d = new THREE.Mesh(geometry, material);\n              obj3d.userData.hotspot = hotspot;\n              obj3d.userData.isAccessHotspot = true;\n              accessSpheresRef.current.push(obj3d);\n            } else {\n              // Sprite para otros tipos\n              const size = 64;\n              const canvas = document.createElement('canvas');\n              canvas.width = size;\n              canvas.height = size;\n              const ctx = canvas.getContext('2d');\n              ctx.beginPath();\n              ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n              ctx.fillStyle = '#38bdf8';\n              ctx.shadowColor = '#0ea5e9';\n              ctx.shadowBlur = 8;\n              ctx.fill();\n              ctx.lineWidth = 4;\n              ctx.strokeStyle = '#fff';\n              ctx.stroke();\n              const texture = new THREE.CanvasTexture(canvas);\n              const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n              obj3d = new THREE.Sprite(material);\n              obj3d.scale.set(20, 20, 1);\n              obj3d.userData.hotspot = hotspot;\n            }\n            obj3d.position.set(x, y, z);\n            scene.add(obj3d);\n            hotspotSpritesRef.current.push(obj3d);\n          });\n        }\n      },\n      undefined,\n      err => {\n        console.error('Error al cargar la textura:', err, imageUrl);\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      }\n    );\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // Función para navegar a hotspots de acceso\n    const handleHotspotClick = (hotspot) => {\n      if (navigateToAccessHotspot(hotspot, tour, startTransition)) {\n        // Navegación exitosa\n      }\n    };\n\n    // Función para manejar hover de hotspots\n    const handleHotspotHover = (obj, isHovering) => {\n      if (obj && obj.userData.hotspot && !obj.userData.isAccessHotspot) {\n        // Mostrar información del hotspot si es necesario\n      }\n    };\n\n    // Crear manejadores de eventos optimizados\n    const { onPointerDown, onPointerMove } = createPointerHandlers(\n      dom,\n      cameraRef.current,\n      () => hotspotSpritesRef.current || [],\n      handleHotspotClick,\n      handleHotspotHover\n    );\n\n    // Agregar manejador específico para selección de hotspots\n    const handlePointerDown = (event) => {\n      onPointerDown(event);\n      \n      // Lógica adicional para selección de hotspots en modo editor\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        if (obj.userData.hotspot && !obj.userData.isAccessHotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    };\n\n    dom.addEventListener('pointerdown', handlePointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n    \n    return () => {\n      dom.removeEventListener('pointerdown', handlePointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (fade) return; // Evitar doble trigger\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n    // Animar FOV (zoom in)\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 35;\n    let duration = 350;\n    let start = null;\n    function animateZoomIn(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomIn);\n      } else {\n        // Esperar un poco y luego cambiar escena\n        setTimeout(() => {\n          setCurrentSceneIndex(targetIdx);\n        }, 200);\n      }\n    }\n    requestAnimationFrame(animateZoomIn);\n  }\n\n  // Animar transición cruzada\n  useEffect(() => {\n    if (!transitioning) return;\n    let frame;\n    function animate() {\n      setTransitionProgress(prev => {\n        const next = Math.min(prev + 0.04, 1);\n        if (next < 1) {\n          frame = requestAnimationFrame(animate);\n        } else {\n          setTransitioning(false);\n          setPrevTexture(null);\n          setCurrentSceneIndex(pendingSceneIndex);\n        }\n        return next;\n      });\n    }\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }, [transitioning]);\n\n  // Modificar render de la escena para usar el shader durante la transición\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    // Crear geometría y materiales\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      // Material de transición\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      // Render loop\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);\n        else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async (e) => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async (files) => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async (hotspotData) => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n\n    const handlePointerDown = (event) => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - (phi * 180 / Math.PI);\n      const yaw = theta * 180 / Math.PI;\n\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = (hotspotData) => {\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = (event) => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({ pitch, yaw });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async (hotspotData) => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = { ...tour };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async (deleteIdx) => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => { window.handleDeleteScene = undefined; };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async (hotspotIdx) => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = { ...updatedScenes[currentSceneIndex] };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = { ...tour, scenes: updatedScenes };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  // --- GIROSCOPIO: Lógica de activación y manejo estilo YouTube 360 ---\n  useEffect(() => {\n    if (!isMobileDevice() || !cameraRef.current || !controlsRef.current) return;\n\n    // Habilitar/deshabilitar OrbitControls según el estado del giroscopio\n    controlsRef.current.enabled = true;\n\n    let lastAlpha = 0, lastBeta = 0, lastGamma = 0;\n    let smoothAlpha = 0, smoothBeta = 0, smoothGamma = 0;\n    const smoothFactor = 0.15;\n\n    function getScreenOrientation() {\n      if (window.screen.orientation && window.screen.orientation.angle !== undefined) {\n        return window.screen.orientation.angle;\n      }\n      return window.orientation || 0;\n    }\n\n    function handleOrientation(event) {\n      let alpha = event.alpha || 0;\n      let beta = event.beta || 0;\n      let gamma = event.gamma || 0;\n\n      // INVERTIR alpha para invertir la rotación horizontal\n      alpha = -alpha;\n\n      smoothAlpha = smoothAlpha * (1 - smoothFactor) + alpha * smoothFactor;\n      smoothBeta = smoothBeta * (1 - smoothFactor) + beta * smoothFactor;\n      smoothGamma = smoothGamma * (1 - smoothFactor) + gamma * smoothFactor;\n\n      const _alpha = THREE.MathUtils.degToRad(smoothAlpha);\n      const _beta = THREE.MathUtils.degToRad(smoothBeta);\n      const _gamma = THREE.MathUtils.degToRad(smoothGamma);\n\n      const orient = getScreenOrientation();\n      const orientRad = THREE.MathUtils.degToRad(orient);\n\n      const zee = new THREE.Vector3(0, 0, 1);\n      const euler = new THREE.Euler();\n      const q0 = new THREE.Quaternion();\n      const q1 = new THREE.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n\n      euler.set(_beta, _alpha, -_gamma, 'YXZ');\n      let quaternion = new THREE.Quaternion().setFromEuler(euler);\n      quaternion.multiply(q1);\n      quaternion.multiply(q0.setFromAxisAngle(zee, -orientRad));\n\n      cameraRef.current.quaternion.copy(quaternion);\n    }\n\n    window.addEventListener('deviceorientation', handleOrientation, true);\n\n    const handleScreenOrientation = () => {\n      smoothAlpha = lastAlpha;\n      smoothBeta = lastBeta;\n      smoothGamma = lastGamma;\n    };\n    window.addEventListener('orientationchange', handleScreenOrientation);\n\n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation, true);\n      window.removeEventListener('orientationchange', handleScreenOrientation);\n      // Rehabilitar OrbitControls al salir del modo giroscopio\n      if (controlsRef.current) controlsRef.current.enabled = true;\n    };\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading\">Cargando tour...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return (\n      <div className=\"tour-editor\">\n        <div ref={containerRef} className=\"three-container\" />\n        <ControlPanel\n          open={panelOpen}\n          setOpen={setPanelOpen}\n          tour={tour}\n          handleDragDropImage={handleDragDropImage}\n          handleImageUpload={handleImageUpload}\n          scenes={[]}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tour-editor\">\n      <div\n        ref={containerRef}\n        className=\"three-container\"\n        onClick={handleSceneClick}\n      />\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <ControlPanel\n        open={panelOpen}\n        setOpen={setPanelOpen}\n        tour={tour}\n        handleDragDropImage={handleDragDropImage}\n        handleImageUpload={handleImageUpload}\n        scenes={tour.scenes}\n        currentSceneIndex={currentSceneIndex}\n        setCurrentSceneIndex={setCurrentSceneIndex}\n        setIsAddingHotspot={() => setPlacementMode(true)}\n        onReturn={() => navigate('/hub')}\n        handleDeleteHotspot={handleDeleteHotspot}\n      />\n      {(selectedHotspot || pendingHotspot) && (\n        <HotspotEditor\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\n          scenes={tour.scenes}\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\n          onCancel={() => {\n            setSelectedHotspot(null);\n            setIsAddingHotspot(false);\n            setPendingHotspot(null);\n          }}\n        />\n      )}\n      {showHotspotModal && newHotspotPosition && (\n        <HotspotCreationModal\n          position={newHotspotPosition}\n          tour={tour}\n          currentSceneIndex={currentSceneIndex}\n          onSave={saveNewHotspot}\n          onCancel={() => {\n            setShowHotspotModal(false);\n            setNewHotspotPosition(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Panel lateral plegable\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return (\n    <>\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\n        <div className=\"panel-header\">\n          <span className=\"panel-title\">Tour Virtual 360°</span>\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\n            {open ? <>&#10094;</> : <>&#10095;</>}\n          </button>\n        </div>\n        {open && (\n          <div className=\"panel-content\">\n            <button\n              className=\"btn-return-hub\"\n              onClick={onReturn}\n              style={{\n                background: '#23272f',\n                color: '#38bdf8',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 0',\n                fontSize: '1rem',\n                fontWeight: 500,\n                marginBottom: 18,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s, color 0.2s'\n              }}\n            >\n              ← Volver al Hub\n            </button>\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\n            <div className=\"panel-section\">\n              <h3>Imágenes 360°</h3>\n              <DragDrop onFileUpload={handleDragDropImage} />\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div className=\"panel-section\">\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\n              {scenes.length === 0 ? (\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\n              ) : (\n                <ul className=\"panel-image-list\">\n                  {scenes.map((scene, idx) => (\n                    <li\n                      key={scene._id || idx}\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\n                      style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center', flex: 1, cursor: 'pointer' }} onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}>\n                        <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\n                        <span>{scene.name}</span>\n                      </div>\n                      {scenes.length > 1 && (\n                        <button\n                          className=\"btn-delete-scene\"\n                          style={{ background: 'transparent', color: '#ef4444', border: 'none', marginLeft: 8, fontSize: 20, cursor: 'pointer' }}\n                          title=\"Eliminar escena\"\n                          onClick={e => {\n                            e.stopPropagation();\n                            if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                              if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                            }\n                          }}\n                        >\n                          🗑️\n                        </button>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            <div className=\"panel-section\">\n              <h3>Hotspots de la Escena</h3>\n              <ul className=\"panel-hotspot-list\">\n                {scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                  let accessInfo = null;\n                  if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                    const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                    accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                  }\n                  return (\n                    <li key={hotspot._id || idx} style={{display:'flex',alignItems:'center',justifyContent:'space-between',gap:8}}>\n                      <span>\n                        {hotspot.type === 'access' ? 'Punto de Acceso' : (hotspot.title || 'Hotspot')}\n                        {accessInfo && <span style={{color:'#38bdf8',marginLeft:8,fontSize:13}}>{accessInfo}</span>}\n                      </span>\n                      <button style={{background:'transparent',color:'#ef4444',border:'none',fontSize:18,cursor:'pointer'}} title=\"Eliminar hotspot\" onClick={()=>{if(window.confirm('¿Eliminar este hotspot?'))handleDeleteHotspot(idx)}}>🗑️</button>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n            <div className=\"panel-section panel-hint\">\n              <p>Haz doble clic en un hotspot de tipo \"Acceso\" para navegar a la escena vinculada.</p>\n              <p>Usa Ctrl + clic para seleccionar múltiples hotspots.</p>\n            </div>\n          </div>\n        )}\n      </aside>\n      <div className={`editor-backdrop${open ? ' open' : ''}`} onClick={() => setOpen(false)} />\n    </>\n  );\n}\n\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}