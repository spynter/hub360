{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\GyroscopeTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as THREE from 'three';\nimport './GyroscopeTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GyroscopeTest = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n\n  // Variables para el giroscopio\n  const gyroscopeRef = useRef(null);\n  const animationRef = useRef(null);\n  const rotationRef = useRef({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n\n  // Variables para el renderizado\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const sphereRef = useRef(null);\n\n  // Variables para el giroscopio\n  const initialOrientationRef = useRef(null);\n  useEffect(() => {\n    initializeScene();\n    startGyroscope();\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (gyroscopeRef.current) {\n        window.removeEventListener('deviceorientation', gyroscopeRef.current);\n      }\n    };\n  }, []);\n  const initializeScene = () => {\n    const canvas = canvasRef.current;\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Configurar cámara\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n\n    // Configurar renderer\n    const renderer = new THREE.WebGLRenderer({\n      canvas,\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Crear esfera con la imagen 360°\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\n    geometry.scale(-1, 1, 1); // Invertir la geometría para ver la imagen desde dentro\n\n    // Cargar la imagen local brandshop1.jpg\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load('/brandshop1.jpg', texture => {\n      texture.mapping = THREE.EquirectangularReflectionMapping;\n      const material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n      sphereRef.current = sphere;\n      animate();\n    }, undefined, error => {\n      console.error('Error cargando la imagen:', error);\n      setError('Error al cargar la imagen 360° de la tienda');\n    });\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n  };\n  const animate = () => {\n    animationRef.current = requestAnimationFrame(animate);\n    if (sphereRef.current) {\n      sphereRef.current.rotation.x = rotationRef.current.x;\n      sphereRef.current.rotation.y = rotationRef.current.y;\n    }\n    if (rendererRef.current && sceneRef.current && cameraRef.current) {\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\n    }\n  };\n  const startGyroscope = async () => {\n    try {\n      // Solicitar permisos si es necesario\n      if ('DeviceOrientationEvent' in window && 'requestPermission' in DeviceOrientationEvent) {\n        try {\n          const permission = await DeviceOrientationEvent.requestPermission();\n          if (permission !== 'granted') {\n            setError('Permiso denegado para acceder al giroscopio');\n            return;\n          }\n        } catch (err) {\n          console.log('No se requieren permisos explícitos');\n        }\n      }\n      const handleGyroscope = event => {\n        console.log('Gyroscope event received:', event);\n        if (event.alpha !== null && event.beta !== null && event.gamma !== null) {\n          // Establecer orientación inicial si es la primera vez\n          if (!initialOrientationRef.current) {\n            initialOrientationRef.current = {\n              alpha: event.alpha,\n              beta: event.beta,\n              gamma: event.gamma\n            };\n            console.log('Orientación inicial establecida:', initialOrientationRef.current);\n          }\n\n          // Calcular diferencias\n          const deltaAlpha = event.alpha - initialOrientationRef.current.alpha;\n          const deltaBeta = event.beta - initialOrientationRef.current.beta;\n\n          // Aplicar rotación\n          const sensitivity = 0.02;\n          rotationRef.current.y = THREE.MathUtils.degToRad(deltaAlpha) * sensitivity;\n          rotationRef.current.x = THREE.MathUtils.degToRad(deltaBeta - 90) * sensitivity;\n          console.log('Gyroscope data:', {\n            alpha: event.alpha,\n            beta: event.beta,\n            gamma: event.gamma,\n            deltaAlpha,\n            deltaBeta,\n            rotationX: rotationRef.current.x,\n            rotationY: rotationRef.current.y\n          });\n        } else {\n          console.log('Gyroscope data is null:', {\n            alpha: event.alpha,\n            beta: event.beta,\n            gamma: event.gamma\n          });\n        }\n      };\n      gyroscopeRef.current = handleGyroscope;\n      window.addEventListener('deviceorientation', handleGyroscope);\n      console.log('Giroscopio iniciado');\n    } catch (error) {\n      console.error('Error starting gyroscope:', error);\n      setError('Error al activar el giroscopio: ' + error.message);\n    }\n  };\n  const resetOrientation = () => {\n    initialOrientationRef.current = null;\n    rotationRef.current = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    console.log('Orientación reseteada');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gyroscope-test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyroscope-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => navigate('/hub'),\n        children: \"\\u2190 Volver al Hub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tour Virtual - Brands Shop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: resetOrientation,\n        children: \"\\uD83D\\uDD04 Resetear Vista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"gyroscope-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-label\",\n          children: \"Giroscopio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-value active\",\n          children: \"\\uD83D\\uDD04 Activo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-label\",\n          children: \"Modo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-value active\",\n          children: \"\\uD83D\\uDCF1 Mover dispositivo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(GyroscopeTest, \"qgPBceWqtPgIWdGSVbxTbb2lMlA=\", false, function () {\n  return [useNavigate];\n});\n_c = GyroscopeTest;\nexport default GyroscopeTest;\nvar _c;\n$RefreshReg$(_c, \"GyroscopeTest\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","THREE","jsxDEV","_jsxDEV","GyroscopeTest","_s","canvasRef","navigate","error","setError","gyroscopeRef","animationRef","rotationRef","x","y","z","sceneRef","cameraRef","rendererRef","sphereRef","initialOrientationRef","initializeScene","startGyroscope","current","cancelAnimationFrame","window","removeEventListener","canvas","scene","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","Math","min","devicePixelRatio","geometry","SphereGeometry","scale","textureLoader","TextureLoader","load","texture","mapping","EquirectangularReflectionMapping","material","MeshBasicMaterial","map","sphere","Mesh","add","animate","undefined","console","handleResize","aspect","updateProjectionMatrix","addEventListener","requestAnimationFrame","rotation","render","DeviceOrientationEvent","permission","requestPermission","err","log","handleGyroscope","event","alpha","beta","gamma","deltaAlpha","deltaBeta","sensitivity","MathUtils","degToRad","rotationX","rotationY","message","resetOrientation","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/GyroscopeTest.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as THREE from 'three';\r\nimport './GyroscopeTest.css';\r\n\r\nconst GyroscopeTest = () => {\r\n  const canvasRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(null);\r\n\r\n  // Variables para el giroscopio\r\n  const gyroscopeRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n  const rotationRef = useRef({ x: 0, y: 0, z: 0 });\r\n\r\n  // Variables para el renderizado\r\n  const sceneRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const sphereRef = useRef(null);\r\n\r\n  // Variables para el giroscopio\r\n  const initialOrientationRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    initializeScene();\r\n    startGyroscope();\r\n\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n      if (gyroscopeRef.current) {\r\n        window.removeEventListener('deviceorientation', gyroscopeRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const initializeScene = () => {\r\n    const canvas = canvasRef.current;\r\n    const scene = new THREE.Scene();\r\n    sceneRef.current = scene;\r\n\r\n    // Configurar cámara\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.set(0, 0, 0.1);\r\n    cameraRef.current = camera;\r\n\r\n    // Configurar renderer\r\n    const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    rendererRef.current = renderer;\r\n\r\n    // Crear esfera con la imagen 360°\r\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\r\n    geometry.scale(-1, 1, 1); // Invertir la geometría para ver la imagen desde dentro\r\n\r\n    // Cargar la imagen local brandshop1.jpg\r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(\r\n      '/brandshop1.jpg',\r\n      (texture) => {\r\n        texture.mapping = THREE.EquirectangularReflectionMapping;\r\n        const material = new THREE.MeshBasicMaterial({ map: texture });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        scene.add(sphere);\r\n        sphereRef.current = sphere;\r\n        animate();\r\n      },\r\n      undefined,\r\n      (error) => {\r\n        console.error('Error cargando la imagen:', error);\r\n        setError('Error al cargar la imagen 360° de la tienda');\r\n      }\r\n    );\r\n\r\n    // Manejar redimensionamiento\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n  };\r\n\r\n  const animate = () => {\r\n    animationRef.current = requestAnimationFrame(animate);\r\n    \r\n    if (sphereRef.current) {\r\n      sphereRef.current.rotation.x = rotationRef.current.x;\r\n      sphereRef.current.rotation.y = rotationRef.current.y;\r\n    }\r\n    \r\n    if (rendererRef.current && sceneRef.current && cameraRef.current) {\r\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\r\n    }\r\n  };\r\n\r\n  const startGyroscope = async () => {\r\n    try {\r\n      // Solicitar permisos si es necesario\r\n      if ('DeviceOrientationEvent' in window && 'requestPermission' in DeviceOrientationEvent) {\r\n        try {\r\n          const permission = await DeviceOrientationEvent.requestPermission();\r\n          if (permission !== 'granted') {\r\n            setError('Permiso denegado para acceder al giroscopio');\r\n            return;\r\n          }\r\n        } catch (err) {\r\n          console.log('No se requieren permisos explícitos');\r\n        }\r\n      }\r\n\r\n      const handleGyroscope = (event) => {\r\n        console.log('Gyroscope event received:', event);\r\n        \r\n        if (event.alpha !== null && event.beta !== null && event.gamma !== null) {\r\n          // Establecer orientación inicial si es la primera vez\r\n          if (!initialOrientationRef.current) {\r\n            initialOrientationRef.current = {\r\n              alpha: event.alpha,\r\n              beta: event.beta,\r\n              gamma: event.gamma\r\n            };\r\n            console.log('Orientación inicial establecida:', initialOrientationRef.current);\r\n          }\r\n\r\n          // Calcular diferencias\r\n          const deltaAlpha = event.alpha - initialOrientationRef.current.alpha;\r\n          const deltaBeta = event.beta - initialOrientationRef.current.beta;\r\n\r\n          // Aplicar rotación\r\n          const sensitivity = 0.02;\r\n          rotationRef.current.y = THREE.MathUtils.degToRad(deltaAlpha) * sensitivity;\r\n          rotationRef.current.x = THREE.MathUtils.degToRad(deltaBeta - 90) * sensitivity;\r\n\r\n          console.log('Gyroscope data:', {\r\n            alpha: event.alpha,\r\n            beta: event.beta,\r\n            gamma: event.gamma,\r\n            deltaAlpha,\r\n            deltaBeta,\r\n            rotationX: rotationRef.current.x,\r\n            rotationY: rotationRef.current.y\r\n          });\r\n        } else {\r\n          console.log('Gyroscope data is null:', {\r\n            alpha: event.alpha,\r\n            beta: event.beta,\r\n            gamma: event.gamma\r\n          });\r\n        }\r\n      };\r\n\r\n      gyroscopeRef.current = handleGyroscope;\r\n      window.addEventListener('deviceorientation', handleGyroscope);\r\n      console.log('Giroscopio iniciado');\r\n      \r\n    } catch (error) {\r\n      console.error('Error starting gyroscope:', error);\r\n      setError('Error al activar el giroscopio: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const resetOrientation = () => {\r\n    initialOrientationRef.current = null;\r\n    rotationRef.current = { x: 0, y: 0, z: 0 };\r\n    console.log('Orientación reseteada');\r\n  };\r\n\r\n  return (\r\n    <div className=\"gyroscope-test-container\">\r\n      <div className=\"gyroscope-header\">\r\n        <button className=\"back-btn\" onClick={() => navigate('/hub')}>\r\n          ← Volver al Hub\r\n        </button>\r\n        <h1>Tour Virtual - Brands Shop</h1>\r\n        <button className=\"reset-btn\" onClick={resetOrientation}>\r\n          🔄 Resetear Vista\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <span>⚠️</span> {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"canvas-container\">\r\n        <canvas ref={canvasRef} className=\"gyroscope-canvas\" />\r\n      </div>\r\n\r\n      <div className=\"status-info\">\r\n        <div className=\"status-item\">\r\n          <span className=\"status-label\">Giroscopio:</span>\r\n          <span className=\"status-value active\">🔄 Activo</span>\r\n        </div>\r\n        <div className=\"status-item\">\r\n          <span className=\"status-label\">Modo:</span>\r\n          <span className=\"status-value active\">📱 Mover dispositivo</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GyroscopeTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}