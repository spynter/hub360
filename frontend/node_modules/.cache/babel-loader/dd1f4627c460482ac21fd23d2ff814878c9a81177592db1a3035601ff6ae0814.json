{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\TourViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport { useAdvancedTransition } from '../../hooks/useAdvancedTransition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n// --- Utilidades y helpers para el visor, igual que en TourEditor ---\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\n// Crea un sprite visual para hotspots (puedes expandirlo si agregas hotspots en el visor)\nfunction createHotspotSprite(hotspot) {\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\nfunction TourViewer() {\n  _s();\n  const {\n    tourId\n  } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n\n  // Hook personalizado para transiciones avanzadas\n  const {\n    transitioning,\n    transitionProgress,\n    fade,\n    pendingSceneIndex,\n    startTransition,\n    renderTransition,\n    loadNewScene\n  } = useAdvancedTransition(sceneRef, cameraRef, rendererRef);\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Invertir dirección de rotación horizontal para que coincida con TourEditor.js\n    controls.rotateSpeed = -0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({\n                color: 0x38bdf8,\n                emissive: 0x0ea5e9,\n                metalness: 0.3,\n                roughness: 0.5\n              });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                // Iniciar animación de transición\n                handleSceneTransition(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement) containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile]);\n\n  // Función para manejar transiciones entre escenas\n  const handleSceneTransition = targetIdx => {\n    if (startTransition(targetIdx, currentSceneIndex)) {\n      // La transición se inició correctamente\n      console.log(`Transición iniciada hacia escena ${targetIdx}`);\n    }\n  };\n\n  // Efecto para manejar transiciones cuando se completa\n  useEffect(() => {\n    if (!pendingSceneIndex || !tour) return;\n    const nextScene = tour.scenes[pendingSceneIndex];\n    if (!nextScene) return;\n\n    // Cargar la nueva textura y renderizar la transición\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(nextScene.image), nextTexture => {\n      const sceneData = {\n        texture: nextTexture,\n        hotspots: nextScene.hotspots || []\n      };\n      renderTransition(nextTexture, sceneData);\n    });\n  }, [pendingSceneIndex, tour, renderTransition]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: \"Tour no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `transition-indicator${transitioning ? ' visible' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transition-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transition-text\",\n        children: \"Transicionando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyro-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `gyro-toggle ${gyroEnabled ? 'active' : ''}`,\n        onClick: requestGyroPermission,\n        title: \"Activar giroscopio\",\n        children: \"\\uD83C\\uDF00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-return\",\n        onClick: () => navigate('/'),\n        children: \"Volver al mapa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n}\n_s(TourViewer, \"05x3UZPOGkrsx+/jc8MPjqYQeUI=\", false, function () {\n  return [useParams, useNavigate, useAdvancedTransition];\n});\n_c = TourViewer;\nexport default TourViewer;\nvar _c;\n$RefreshReg$(_c, \"TourViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","api","useParams","useNavigate","useAdvancedTransition","jsxDEV","_jsxDEV","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","isMobileDevice","test","navigator","userAgent","createHotspotSprite","hotspot","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","TourViewer","_s","tourId","tour","setTour","loading","setLoading","error","setError","currentSceneIndex","setCurrentSceneIndex","containerRef","navigate","cameraRef","sceneRef","rendererRef","isMobile","setIsMobile","gyroEnabled","setGyroEnabled","gyroControls","setGyroControls","transitioning","transitionProgress","fade","pendingSceneIndex","startTransition","renderTransition","loadNewScene","fetchTour","response","getTour","data","err","requestGyroPermission","DeviceOrientationEvent","requestPermission","permission","console","scenes","length","current","firstChild","removeChild","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","max","min","deltaY","updateProjectionMatrix","passive","loadScene","index","children","remove","sceneData","geometry","SphereGeometry","textureLoader","TextureLoader","load","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","MeshBasicMaterial","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","forEach","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","hGeo","hMat","MeshStandardMaterial","color","emissive","metalness","roughness","hMesh","isAccessHotspot","hoveredObj","animate","requestAnimationFrame","accessSpheres","traverse","obj","push","t","Date","now","update","render","lastClickTime","dom","getAccessSpheres","arr","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetSceneId","idx","findIndex","s","String","_id","handleSceneTransition","onPointerMove","style","cursor","handleResize","aspect","removeEventListener","dispose","disconnect","targetIdx","log","nextScene","loader","nextTexture","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","title","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/TourViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport { useAdvancedTransition } from '../../hooks/useAdvancedTransition';\n\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n// --- Utilidades y helpers para el visor, igual que en TourEditor ---\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\n// Crea un sprite visual para hotspots (puedes expandirlo si agregas hotspots en el visor)\nfunction createHotspotSprite(hotspot) {\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\n\nfunction TourViewer() {\n  const { tourId } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const [isMobile, setIsMobile] = useState(false);\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [gyroControls, setGyroControls] = useState(null);\n  \n  // Hook personalizado para transiciones avanzadas\n  const {\n    transitioning,\n    transitionProgress,\n    fade,\n    pendingSceneIndex,\n    startTransition,\n    renderTransition,\n    loadNewScene\n  } = useAdvancedTransition(sceneRef, cameraRef, rendererRef);\n\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Solicitar permiso de orientación del dispositivo\n  const requestGyroPermission = async () => {\n    try {\n      if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n        const permission = await DeviceOrientationEvent.requestPermission();\n        if (permission === 'granted') {\n          setGyroEnabled(true);\n        }\n      } else {\n        setGyroEnabled(true);\n      }\n    } catch (err) {\n      console.error('Error al solicitar permiso del giroscopio:', err);\n    }\n  };\n\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    let controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Invertir dirección de rotación horizontal para que coincida con TourEditor.js\n    controls.rotateSpeed = -0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    // Cargar escena actual\n    const loadScene = (index) => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                // Iniciar animación de transición\n                handleSceneTransition(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement)\n          containerRef.current.removeChild(renderer.domElement);\n      }\n      if (gyroControls) {\n        gyroControls.disconnect();\n      }\n    };\n  }, [tour, currentSceneIndex, isMobile]);\n\n  // Función para manejar transiciones entre escenas\n  const handleSceneTransition = (targetIdx) => {\n    if (startTransition(targetIdx, currentSceneIndex)) {\n      // La transición se inició correctamente\n      console.log(`Transición iniciada hacia escena ${targetIdx}`);\n    }\n  };\n\n  // Efecto para manejar transiciones cuando se completa\n  useEffect(() => {\n    if (!pendingSceneIndex || !tour) return;\n    \n    const nextScene = tour.scenes[pendingSceneIndex];\n    if (!nextScene) return;\n    \n    // Cargar la nueva textura y renderizar la transición\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(nextScene.image), (nextTexture) => {\n      const sceneData = {\n        texture: nextTexture,\n        hotspots: nextScene.hotspots || []\n      };\n      renderTransition(nextTexture, sceneData);\n    });\n  }, [pendingSceneIndex, tour, renderTransition]);\n\n\n\n  if (loading) {\n    return <div className=\"viewer-loading\">Cargando tour...</div>;\n  }\n  if (error) {\n    return <div className=\"viewer-error\">{error}</div>;\n  }\n  if (!tour) {\n    return <div className=\"viewer-error\">Tour no encontrado</div>;\n  }\n\n  return (\n    <div className=\"tour-viewer-container\">\n      <div ref={containerRef} className=\"three-container\"></div>\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <div className={`transition-indicator${transitioning ? ' visible' : ''}`}>\n        <div className=\"transition-spinner\"></div>\n        <div className=\"transition-text\">Transicionando...</div>\n      </div>\n      <div className=\"gyro-controls\">\n        <button\n          className={`gyro-toggle ${gyroEnabled ? 'active' : ''}`}\n          onClick={requestGyroPermission}\n          title=\"Activar giroscopio\"\n        >\n          🌀\n        </button>\n        <button className=\"btn-return\" onClick={() => navigate('/')}>Volver al mapa</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TourViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}