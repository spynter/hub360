{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport SceneManager from './SceneManager';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\nfunction LocationSelector({\n  localizacion,\n  setLocalizacion\n}) {\n  var _s = $RefreshSig$();\n  // Componente para seleccionar ubicación en el mapa\n  function LocationMarker() {\n    _s();\n    useMapEvents({\n      click(e) {\n        setLocalizacion({\n          lat: e.latlng.lat,\n          lng: e.latlng.lng\n        });\n      }\n    });\n    return localizacion ? /*#__PURE__*/_jsxDEV(Marker, {\n      position: [localizacion.lat, localizacion.lng]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }, this) : null;\n  }\n  _s(LocationMarker, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: localizacion || {\n      lat: 0,\n      lng: 0\n    },\n    zoom: 2,\n    style: {\n      height: 300,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationMarker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c = LocationSelector;\nfunction TourEditor({\n  tourId\n}) {\n  _s2();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [localizacion, setLocalizacion] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      // Anisotropía para mayor nitidez\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots ---\n      hotspotSpritesRef.current = [];\n      if (Array.isArray(currentScene.hotspots)) {\n        currentScene.hotspots.forEach(hotspot => {\n          // Convertir pitch/yaw a coordenadas cartesianas\n          const radius = 500;\n          const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n          const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n          const x = radius * Math.sin(phi) * Math.sin(theta);\n          const y = radius * Math.cos(phi);\n          const z = radius * Math.sin(phi) * Math.cos(theta);\n          const sprite = createHotspotSprite(hotspot, () => {\n            // Navegar si es access\n            if (hotspot.type === 'access' && hotspot.targetSceneId) {\n              // Buscar el índice de la escena destino\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) setCurrentSceneIndex(idx);\n            } else {\n              // Si es otro tipo, podrías mostrar info, etc.\n              setSelectedHotspot(hotspot);\n            }\n          });\n          sprite.position.set(x, y, z);\n          scene.add(sprite);\n          hotspotSpritesRef.current.push(sprite);\n        });\n      }\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      // Buscar intersección con sprites\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const sprite = intersects[0].object;\n        if (sprite.userData && typeof sprite.userData.onClick === 'function') {\n          sprite.userData.onClick();\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let file;\n    if (e.target && e.target.files && e.target.files[0]) {\n      file = e.target.files[0];\n    } else if (e instanceof File) {\n      file = e;\n    } else if (e && e.target && e.target.files) {\n      file = e.target.files[0];\n    }\n    if (!file) return;\n    try {\n      var _uploadRes$data;\n      // Asegura que imageUrl siempre sea un string válido\n      let uploadRes = await api.uploadImage(file);\n      let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n      if (!imageUrl) {\n        throw new Error('No se recibió la URL de la imagen');\n      }\n      const newScene = {\n        name: `Escena ${tour.scenes.length + 1}`,\n        image: imageUrl,\n        hotspots: []\n      };\n      const updatedTour = {\n        ...tour,\n        scenes: [...tour.scenes, newScene]\n      };\n      const savedTour = await api.updateTour(tourId, updatedTour);\n      setTour(savedTour.data ? savedTour.data : savedTour);\n      setCurrentSceneIndex(updatedTour.scenes.length - 1);\n    } catch (err) {\n      console.error('Error subiendo imagen:', err);\n      alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async file => {\n    await handleImageUpload(file);\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const handlePointerDown = event => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - phi * 180 / Math.PI;\n      const yaw = theta * 180 / Math.PI;\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.z, point.x);\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async hotspotData => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Actualizar el tour localmente\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, response];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Guardar localización al actualizar el tour\n  const handleSaveLocalizacion = async () => {\n    if (!tour) return;\n    const updatedTour = {\n      ...tour,\n      localizacion\n    };\n    await api.updateTour(tourId, updatedTour);\n    setTour(updatedTour);\n  };\n  useEffect(() => {\n    if (tour && tour.localizacion) {\n      setLocalizacion(tour.localizacion);\n    }\n  }, [tour]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      setIsAddingHotspot: () => setPlacementMode(true),\n      onReturn: () => navigate('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selecciona la localizaci\\xF3n del tour en el mapa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationSelector, {\n        localizacion: localizacion,\n        setLocalizacion: setLocalizacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveLocalizacion,\n        style: {\n          marginTop: 10\n        },\n        children: \"Guardar Localizaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 529,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s2(TourEditor, \"yhMXha5VXGooEvRsIuZiovLRol8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                alt: scene.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: scene.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 23\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Haz clic en \\\"Agregar Punto de Acceso\\\" en la vista principal para conectar im\\xE1genes entre s\\xED.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-hotspot\",\n          onClick: () => setIsAddingHotspot && setIsAddingHotspot(true),\n          children: \"\\u2795 Agregar Punto de Acceso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }, this), !open && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-toggle-collapsed\",\n      onClick: () => setOpen(true),\n      \"aria-label\": \"Abrir panel de control\",\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c3 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LocationSelector\");\n$RefreshReg$(_c2, \"TourEditor\");\n$RefreshReg$(_c3, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","SceneManager","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","MapContainer","TileLayer","Marker","useMapEvents","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","LocationSelector","localizacion","setLocalizacion","_s","$RefreshSig$","LocationMarker","click","e","lat","latlng","lng","position","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","children","url","_c","TourEditor","tourId","_s2","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","fetchTour","response","getTour","data","err","console","current","domElement","contains","removeChild","dispose","firstChild","clientWidth","window","innerWidth","clientHeight","innerHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","animationId","animate","requestAnimationFrame","update","render","handleResize","w","h","aspect","updateProjectionMatrix","addEventListener","removeEventListener","cancelAnimationFrame","scenes","Array","isArray","length","currentScene","remove","geometry","SphereGeometry","textureLoader","TextureLoader","imageUrl","load","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","min","MeshBasicMaterial","side","DoubleSide","sphere","Mesh","add","hotspots","forEach","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","targetSceneId","idx","findIndex","s","String","_id","push","color","dom","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","handleImageUpload","file","target","files","File","_uploadRes$data","uploadRes","uploadImage","Error","newScene","name","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","index","Date","now","toString","handlePointerDown","vector","Vector3","unproject","camPos","dir","sub","normalize","acos","atan2","Number","toFixed","cursor","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","handleSceneClick","point","radToDeg","saveNewHotspot","sceneId","addHotspot","handleSaveLocalizacion","className","ref","ControlPanel","open","setOpen","onReturn","onSave","onCancel","margin","marginTop","_c2","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","id","accept","onChange","display","src","alt","_c3","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport SceneManager from './SceneManager';\r\nimport HotspotEditor from './HotspotEditor';\r\nimport api from '../../services/api';\r\nimport DragDrop from './DragDrop';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TourEditor.css';\r\nimport ApiKeyManager from './ApiKeyManager';\r\nimport HotspotCreationModal from './HotspotCreationModal';\r\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Utilidad para obtener la URL absoluta de la imagen\r\nfunction getAbsoluteImageUrl(image) {\r\n  if (!image) return '';\r\n  if (image.startsWith('/uploads/')) {\r\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\r\n  }\r\n  return image;\r\n}\r\n\r\nfunction createHotspotSprite(hotspot, onClick) {\r\n  // Crear un canvas para el ícono visual\r\n  const size = 64;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = size;\r\n  canvas.height = size;\r\n  const ctx = canvas.getContext('2d');\r\n  // Círculo azul claro\r\n  ctx.beginPath();\r\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\r\n  ctx.fillStyle = '#38bdf8';\r\n  ctx.shadowColor = '#0ea5e9';\r\n  ctx.shadowBlur = 8;\r\n  ctx.fill();\r\n  ctx.lineWidth = 4;\r\n  ctx.strokeStyle = '#fff';\r\n  ctx.stroke();\r\n  // Icono de flecha si es access\r\n  if (hotspot.type === 'access') {\r\n    ctx.beginPath();\r\n    ctx.moveTo(size/2, size/2-12);\r\n    ctx.lineTo(size/2+10, size/2+8);\r\n    ctx.lineTo(size/2-10, size/2+8);\r\n    ctx.closePath();\r\n    ctx.fillStyle = '#fff';\r\n    ctx.fill();\r\n  }\r\n  const texture = new THREE.CanvasTexture(canvas);\r\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\r\n  const sprite = new THREE.Sprite(material);\r\n  sprite.scale.set(20, 20, 1); // tamaño visual\r\n  sprite.userData.hotspot = hotspot;\r\n  if (onClick) sprite.userData.onClick = onClick;\r\n  return sprite;\r\n}\r\n\r\nfunction LocationSelector({ localizacion, setLocalizacion }) {\r\n  // Componente para seleccionar ubicación en el mapa\r\n  function LocationMarker() {\r\n    useMapEvents({\r\n      click(e) {\r\n        setLocalizacion({ lat: e.latlng.lat, lng: e.latlng.lng });\r\n      }\r\n    });\r\n    return localizacion ? <Marker position={[localizacion.lat, localizacion.lng]} /> : null;\r\n  }\r\n  return (\r\n    <MapContainer center={localizacion || { lat: 0, lng: 0 }} zoom={2} style={{ height: 300, width: '100%' }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <LocationMarker />\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nfunction TourEditor({ tourId }) {\r\n  const containerRef = useRef();\r\n  const [tour, setTour] = useState(null);\r\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\r\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\r\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [panelOpen, setPanelOpen] = useState(true);\r\n  const [pendingHotspot, setPendingHotspot] = useState(null);\r\n  const [placementMode, setPlacementMode] = useState(false);\r\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\r\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [localizacion, setLocalizacion] = useState(null);\r\n\r\n  // Referencias de Three.js\r\n  const sceneRef = useRef();\r\n  const cameraRef = useRef();\r\n  const rendererRef = useRef();\r\n  const controlsRef = useRef();\r\n  // Referencia a los sprites de hotspots\r\n  const hotspotSpritesRef = useRef([]);\r\n\r\n  // Cargar tour desde la API\r\n  useEffect(() => {\r\n    const fetchTour = async () => {\r\n      try {\r\n        const response = await api.getTour(tourId);\r\n        setTour(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al cargar el tour');\r\n        setLoading(false);\r\n        console.error(err);\r\n      }\r\n    };\r\n    fetchTour();\r\n  }, [tourId]);\r\n\r\n  // Inicializar Three.js\r\n  useEffect(() => {\r\n    if (!tour || loading) return;\r\n\r\n    // Limpiar canvas anterior si existe\r\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\r\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\r\n        containerRef.current.removeChild(rendererRef.current.domElement);\r\n      }\r\n      rendererRef.current.dispose();\r\n    }\r\n\r\n    // Eliminar cualquier canvas sobrante (por si acaso)\r\n    if (containerRef.current) {\r\n      while (containerRef.current.firstChild) {\r\n        containerRef.current.removeChild(containerRef.current.firstChild);\r\n      }\r\n    }\r\n\r\n    // Usar el tamaño del contenedor para el renderer\r\n    const width = containerRef.current.clientWidth || window.innerWidth;\r\n    const height = containerRef.current.clientHeight || window.innerHeight;\r\n\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      width / height,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.set(0, 0, 0.1);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(width, height);\r\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\r\n    containerRef.current.appendChild(renderer.domElement);\r\n\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.rotateSpeed = 0.5;\r\n\r\n    sceneRef.current = scene;\r\n    cameraRef.current = camera;\r\n    rendererRef.current = renderer;\r\n    controlsRef.current = controls;\r\n\r\n    let animationId;\r\n    const animate = () => {\r\n      animationId = requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Responsivo al tamaño del contenedor\r\n    const handleResize = () => {\r\n      if (!containerRef.current) return;\r\n      const w = containerRef.current.clientWidth || window.innerWidth;\r\n      const h = containerRef.current.clientHeight || window.innerHeight;\r\n      camera.aspect = w / h;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(w, h);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Limpieza\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (animationId) cancelAnimationFrame(animationId);\r\n      if (\r\n        rendererRef.current &&\r\n        rendererRef.current.domElement &&\r\n        containerRef.current &&\r\n        containerRef.current.contains(rendererRef.current.domElement)\r\n      ) {\r\n        rendererRef.current.dispose();\r\n        containerRef.current.removeChild(rendererRef.current.domElement);\r\n      }\r\n    };\r\n  }, [tour, loading]);\r\n\r\n  // Cargar la escena current\r\n  useEffect(() => {\r\n    if (\r\n      !tour ||\r\n      !sceneRef.current ||\r\n      !tour.scenes ||\r\n      !Array.isArray(tour.scenes) ||\r\n      tour.scenes.length === 0 ||\r\n      currentSceneIndex === -1 ||\r\n      !tour.scenes[currentSceneIndex]\r\n    ) return;\r\n\r\n    const scene = sceneRef.current;\r\n    const currentScene = tour.scenes[currentSceneIndex];\r\n\r\n    // Limpiar escena anterior\r\n    while (scene.children.length > 0) {\r\n      scene.remove(scene.children[0]);\r\n    }\r\n\r\n    // Crear esfera para la imagen 360 con mayor calidad visual\r\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\r\n    geometry.scale(-1, 1, 1);\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\r\n\r\n    textureLoader.load(\r\n      imageUrl,\r\n      texture => {\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.magFilter = THREE.LinearFilter;\r\n        // Usar LinearSRGBColorSpace si está disponible, si no, omitir\r\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\r\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\r\n        }\r\n        // Anisotropía para mayor nitidez\r\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\r\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\r\n        }\r\n        const material = new THREE.MeshBasicMaterial({\r\n          map: texture,\r\n          side: THREE.DoubleSide\r\n        });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        scene.add(sphere);\r\n\r\n        // --- Renderizar Hotspots ---\r\n        hotspotSpritesRef.current = [];\r\n        if (Array.isArray(currentScene.hotspots)) {\r\n          currentScene.hotspots.forEach(hotspot => {\r\n            // Convertir pitch/yaw a coordenadas cartesianas\r\n            const radius = 500;\r\n            const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\r\n            const theta = THREE.MathUtils.degToRad(hotspot.yaw);\r\n            const x = radius * Math.sin(phi) * Math.sin(theta);\r\n            const y = radius * Math.cos(phi);\r\n            const z = radius * Math.sin(phi) * Math.cos(theta);\r\n            const sprite = createHotspotSprite(hotspot, () => {\r\n              // Navegar si es access\r\n              if (hotspot.type === 'access' && hotspot.targetSceneId) {\r\n                // Buscar el índice de la escena destino\r\n                const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\r\n                if (idx !== -1) setCurrentSceneIndex(idx);\r\n              } else {\r\n                // Si es otro tipo, podrías mostrar info, etc.\r\n                setSelectedHotspot(hotspot);\r\n              }\r\n            });\r\n            sprite.position.set(x, y, z);\r\n            scene.add(sprite);\r\n            hotspotSpritesRef.current.push(sprite);\r\n          });\r\n        }\r\n      },\r\n      undefined,\r\n      err => {\r\n        console.error('Error al cargar la textura:', err, imageUrl);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        scene.add(sphere);\r\n      }\r\n    );\r\n  }, [tour, currentSceneIndex]);\r\n\r\n  // --- Detección de clics en hotspots ---\r\n  useEffect(() => {\r\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\r\n    const dom = rendererRef.current.domElement;\r\n    function onPointerDown(event) {\r\n      // Solo click izquierdo\r\n      if (event.button !== 0) return;\r\n      const rect = dom.getBoundingClientRect();\r\n      const mouse = new THREE.Vector2(\r\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\r\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\r\n      );\r\n      const raycaster = new THREE.Raycaster();\r\n      raycaster.setFromCamera(mouse, cameraRef.current);\r\n      // Buscar intersección con sprites\r\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\r\n      if (intersects.length > 0) {\r\n        const sprite = intersects[0].object;\r\n        if (sprite.userData && typeof sprite.userData.onClick === 'function') {\r\n          sprite.userData.onClick();\r\n        }\r\n      }\r\n    }\r\n    dom.addEventListener('pointerdown', onPointerDown);\r\n    return () => {\r\n      dom.removeEventListener('pointerdown', onPointerDown);\r\n    };\r\n  }, [tour, currentSceneIndex]);\r\n\r\n  // Manejar subida de imágenes\r\n  const handleImageUpload = async (e) => {\r\n    let file;\r\n    if (e.target && e.target.files && e.target.files[0]) {\r\n      file = e.target.files[0];\r\n    } else if (e instanceof File) {\r\n      file = e;\r\n    } else if (e && e.target && e.target.files) {\r\n      file = e.target.files[0];\r\n    }\r\n    if (!file) return;\r\n\r\n    try {\r\n      // Asegura que imageUrl siempre sea un string válido\r\n      let uploadRes = await api.uploadImage(file);\r\n      let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\r\n      if (!imageUrl) {\r\n        throw new Error('No se recibió la URL de la imagen');\r\n      }\r\n      const newScene = {\r\n        name: `Escena ${tour.scenes.length + 1}`,\r\n        image: imageUrl,\r\n        hotspots: []\r\n      };\r\n      const updatedTour = {\r\n        ...tour,\r\n        scenes: [...tour.scenes, newScene]\r\n      };\r\n      const savedTour = await api.updateTour(tourId, updatedTour);\r\n      setTour(savedTour.data ? savedTour.data : savedTour);\r\n      setCurrentSceneIndex(updatedTour.scenes.length - 1);\r\n    } catch (err) {\r\n      console.error('Error subiendo imagen:', err);\r\n      alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\r\n    }\r\n  };\r\n\r\n  // Manejar subida de imágenes (DragDrop)\r\n  const handleDragDropImage = async (file) => {\r\n    await handleImageUpload(file);\r\n  };\r\n\r\n  // Guardar hotspot\r\n  const handleSaveHotspot = async (hotspotData) => {\r\n    try {\r\n      const updatedScenes = [...tour.scenes];\r\n      const currentScene = updatedScenes[currentSceneIndex];\r\n\r\n      if (hotspotData._id) {\r\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\r\n        if (index !== -1) {\r\n          currentScene.hotspots[index] = hotspotData;\r\n        }\r\n      } else {\r\n        currentScene.hotspots.push({\r\n          ...hotspotData,\r\n          _id: Date.now().toString()\r\n        });\r\n      }\r\n\r\n      const updatedTour = { ...tour, scenes: updatedScenes };\r\n      setTour(updatedTour);\r\n      await api.updateTour(tourId, updatedTour);\r\n      setSelectedHotspot(null);\r\n      setIsAddingHotspot(false);\r\n    } catch (err) {\r\n      console.error('Error guardando hotspot:', err);\r\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\r\n    }\r\n  };\r\n\r\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\r\n  useEffect(() => {\r\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\r\n\r\n    const handlePointerDown = (event) => {\r\n      // Solo permitir click izquierdo\r\n      if (event.button !== 0) return;\r\n\r\n      // Evitar que el panel de control capture el click\r\n      if (event.target !== rendererRef.current.domElement) return;\r\n\r\n      // Obtener posición del click relativo al canvas\r\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\r\n      const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n\r\n      // Vector 3D en la dirección de la cámara\r\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\r\n\r\n      // Convertir a coordenadas esféricas (pitch/yaw)\r\n      const camPos = cameraRef.current.position;\r\n      const dir = vector.sub(camPos).normalize();\r\n      const phi = Math.acos(dir.y); // [0, PI]\r\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\r\n\r\n      // Convertir a grados\r\n      const pitch = 90 - (phi * 180 / Math.PI);\r\n      const yaw = theta * 180 / Math.PI;\r\n\r\n      setPendingHotspot({\r\n        pitch: Number(pitch.toFixed(2)),\r\n        yaw: Number(yaw.toFixed(2))\r\n      });\r\n      setIsAddingHotspot(false);\r\n    };\r\n\r\n    const dom = rendererRef.current.domElement;\r\n    dom.style.cursor = 'crosshair';\r\n    dom.addEventListener('pointerdown', handlePointerDown);\r\n\r\n    return () => {\r\n      dom.style.cursor = '';\r\n      dom.removeEventListener('pointerdown', handlePointerDown);\r\n    };\r\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\r\n\r\n  // Nuevo: Guardar hotspot con pitch/yaw del click\r\n  const handleSaveHotspotWithCoords = (hotspotData) => {\r\n    handleSaveHotspot({\r\n      ...hotspotData,\r\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\r\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\r\n    });\r\n    setPendingHotspot(null);\r\n  };\r\n\r\n  // Nuevo: Manejar click en la escena para colocar hotspot\r\n  const handleSceneClick = (event) => {\r\n    if (!placementMode) return;\r\n    // Obtener coordenadas del ratón normalizadas\r\n    const mouse = new THREE.Vector2();\r\n    const rect = containerRef.current.getBoundingClientRect();\r\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n\r\n    const raycaster = new THREE.Raycaster();\r\n    raycaster.setFromCamera(mouse, cameraRef.current);\r\n\r\n    // Intersectar con la esfera (único mesh en la escena)\r\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\r\n    if (intersects.length > 0) {\r\n      const point = intersects[0].point;\r\n      const radius = 500;\r\n      const phi = Math.acos(point.y / radius);\r\n      const theta = Math.atan2(point.z, point.x);\r\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\r\n      const yaw = THREE.MathUtils.radToDeg(theta);\r\n      setNewHotspotPosition({ pitch, yaw });\r\n      setShowHotspotModal(true);\r\n      setPlacementMode(false);\r\n    }\r\n  };\r\n\r\n  // Guardar el nuevo hotspot usando el endpoint REST\r\n  const saveNewHotspot = async (hotspotData) => {\r\n    try {\r\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\r\n      const sceneId = tour.scenes[currentSceneIndex]._id;\r\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\r\n      // Actualizar el tour localmente\r\n      const updatedTour = { ...tour };\r\n      updatedTour.scenes = [...updatedTour.scenes];\r\n      const scene = updatedTour.scenes[currentSceneIndex];\r\n      scene.hotspots = [...scene.hotspots, response];\r\n      setTour(updatedTour);\r\n      setShowHotspotModal(false);\r\n      setNewHotspotPosition(null);\r\n    } catch (error) {\r\n      alert('Error al guardar el hotspot');\r\n      setShowHotspotModal(false);\r\n      setNewHotspotPosition(null);\r\n    }\r\n  };\r\n\r\n  // Guardar localización al actualizar el tour\r\n  const handleSaveLocalizacion = async () => {\r\n    if (!tour) return;\r\n    const updatedTour = { ...tour, localizacion };\r\n    await api.updateTour(tourId, updatedTour);\r\n    setTour(updatedTour);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tour && tour.localizacion) {\r\n      setLocalizacion(tour.localizacion);\r\n    }\r\n  }, [tour]);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Cargando tour...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\r\n  if (!tour.scenes || tour.scenes.length === 0) {\r\n    return (\r\n      <div className=\"tour-editor\">\r\n        <div ref={containerRef} className=\"three-container\" />\r\n        <ControlPanel\r\n          open={panelOpen}\r\n          setOpen={setPanelOpen}\r\n          tour={tour}\r\n          handleDragDropImage={handleDragDropImage}\r\n          handleImageUpload={handleImageUpload}\r\n          scenes={[]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"tour-editor\">\r\n      <div\r\n        ref={containerRef}\r\n        className=\"three-container\"\r\n        onClick={handleSceneClick}\r\n      />\r\n      <ControlPanel\r\n        open={panelOpen}\r\n        setOpen={setPanelOpen}\r\n        tour={tour}\r\n        handleDragDropImage={handleDragDropImage}\r\n        handleImageUpload={handleImageUpload}\r\n        scenes={tour.scenes}\r\n        currentSceneIndex={currentSceneIndex}\r\n        setCurrentSceneIndex={setCurrentSceneIndex}\r\n        setIsAddingHotspot={() => setPlacementMode(true)}\r\n        onReturn={() => navigate('/')}\r\n      />\r\n      {(selectedHotspot || pendingHotspot) && (\r\n        <HotspotEditor\r\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\r\n          scenes={tour.scenes}\r\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\r\n          onCancel={() => {\r\n            setSelectedHotspot(null);\r\n            setIsAddingHotspot(false);\r\n            setPendingHotspot(null);\r\n          }}\r\n        />\r\n      )}\r\n      {showHotspotModal && newHotspotPosition && (\r\n        <HotspotCreationModal\r\n          position={newHotspotPosition}\r\n          tour={tour}\r\n          currentSceneIndex={currentSceneIndex}\r\n          onSave={saveNewHotspot}\r\n          onCancel={() => {\r\n            setShowHotspotModal(false);\r\n            setNewHotspotPosition(null);\r\n          }}\r\n        />\r\n      )}\r\n      <div style={{ margin: '20px 0' }}>\r\n        <h3>Selecciona la localización del tour en el mapa</h3>\r\n        <LocationSelector localizacion={localizacion} setLocalizacion={setLocalizacion} />\r\n        <button onClick={handleSaveLocalizacion} style={{ marginTop: 10 }}>Guardar Localización</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Panel lateral plegable\r\nfunction ControlPanel({\r\n  open,\r\n  setOpen,\r\n  tour,\r\n  handleDragDropImage,\r\n  handleImageUpload,\r\n  scenes,\r\n  currentSceneIndex,\r\n  setCurrentSceneIndex,\r\n  setIsAddingHotspot,\r\n  onReturn\r\n}) {\r\n  return (\r\n    <>\r\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\r\n        <div className=\"panel-header\">\r\n          <span className=\"panel-title\">Tour Virtual 360°</span>\r\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\r\n            {open ? <>&#10094;</> : <>&#10095;</>}\r\n          </button>\r\n        </div>\r\n        {open && (\r\n          <div className=\"panel-content\">\r\n            <button\r\n              className=\"btn-return-hub\"\r\n              onClick={onReturn}\r\n              style={{\r\n                background: '#23272f',\r\n                color: '#38bdf8',\r\n                border: 'none',\r\n                borderRadius: 8,\r\n                padding: '10px 0',\r\n                fontSize: '1rem',\r\n                fontWeight: 500,\r\n                marginBottom: 18,\r\n                cursor: 'pointer',\r\n                width: '100%',\r\n                transition: 'background 0.2s, color 0.2s'\r\n              }}\r\n            >\r\n              ← Volver al Hub\r\n            </button>\r\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\r\n            <div className=\"panel-section\">\r\n              <h3>Imágenes 360°</h3>\r\n              <DragDrop onFileUpload={handleDragDropImage} />\r\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\r\n              <input\r\n                type=\"file\"\r\n                id=\"image-upload\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </div>\r\n            <div className=\"panel-section\">\r\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\r\n              {scenes.length === 0 ? (\r\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\r\n              ) : (\r\n                <ul className=\"panel-image-list\">\r\n                  {scenes.map((scene, idx) => (\r\n                    <li\r\n                      key={scene._id || idx}\r\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\r\n                      onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}\r\n                    >\r\n                      <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\r\n                      <span>{scene.name}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n            <div className=\"panel-section panel-hint\">\r\n              <span>\r\n                Haz clic en \"Agregar Punto de Acceso\" en la vista principal para conectar imágenes entre sí.\r\n              </span>\r\n            </div>\r\n            <button\r\n              className=\"btn-add-hotspot\"\r\n              onClick={() => setIsAddingHotspot && setIsAddingHotspot(true)}\r\n            >\r\n              ➕ Agregar Punto de Acceso\r\n            </button>\r\n          </div>\r\n        )}\r\n      </aside>\r\n      {!open && (\r\n        <button\r\n          className=\"panel-toggle-collapsed\"\r\n          onClick={() => setOpen(true)}\r\n          aria-label=\"Abrir panel de control\"\r\n        >\r\n          &#10095;\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TourEditor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,2CAA2C;AACzE,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,kBAAkB;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAC7E,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,mBAAmBA,CAACC,KAAK,EAAE;EAClC,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;EACrB,IAAIA,KAAK,CAACC,UAAU,CAAC,WAAW,CAAC,EAAE;IAAA,IAAAC,qBAAA;IACjC,OAAO,GAAG,EAAAA,qBAAA,GAAAC,OAAO,CAACC,GAAG,CAACC,iBAAiB,cAAAH,qBAAA,uBAA7BA,qBAAA,CAA+BI,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,KAAI,uBAAuB,GAAGN,KAAK,EAAE;EACnG;EACA,OAAOA,KAAK;AACd;AAEA,SAASO,mBAAmBA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAC7C;EACA,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CF,MAAM,CAACG,KAAK,GAAGJ,IAAI;EACnBC,MAAM,CAACI,MAAM,GAAGL,IAAI;EACpB,MAAMM,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;EACnC;EACAD,GAAG,CAACE,SAAS,CAAC,CAAC;EACfF,GAAG,CAACG,GAAG,CAACT,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAACU,IAAI,CAACC,EAAE,CAAC;EAC/CL,GAAG,CAACM,SAAS,GAAG,SAAS;EACzBN,GAAG,CAACO,WAAW,GAAG,SAAS;EAC3BP,GAAG,CAACQ,UAAU,GAAG,CAAC;EAClBR,GAAG,CAACS,IAAI,CAAC,CAAC;EACVT,GAAG,CAACU,SAAS,GAAG,CAAC;EACjBV,GAAG,CAACW,WAAW,GAAG,MAAM;EACxBX,GAAG,CAACY,MAAM,CAAC,CAAC;EACZ;EACA,IAAIpB,OAAO,CAACqB,IAAI,KAAK,QAAQ,EAAE;IAC7Bb,GAAG,CAACE,SAAS,CAAC,CAAC;IACfF,GAAG,CAACc,MAAM,CAACpB,IAAI,GAAC,CAAC,EAAEA,IAAI,GAAC,CAAC,GAAC,EAAE,CAAC;IAC7BM,GAAG,CAACe,MAAM,CAACrB,IAAI,GAAC,CAAC,GAAC,EAAE,EAAEA,IAAI,GAAC,CAAC,GAAC,CAAC,CAAC;IAC/BM,GAAG,CAACe,MAAM,CAACrB,IAAI,GAAC,CAAC,GAAC,EAAE,EAAEA,IAAI,GAAC,CAAC,GAAC,CAAC,CAAC;IAC/BM,GAAG,CAACgB,SAAS,CAAC,CAAC;IACfhB,GAAG,CAACM,SAAS,GAAG,MAAM;IACtBN,GAAG,CAACS,IAAI,CAAC,CAAC;EACZ;EACA,MAAMQ,OAAO,GAAG,IAAInD,KAAK,CAACoD,aAAa,CAACvB,MAAM,CAAC;EAC/C,MAAMwB,QAAQ,GAAG,IAAIrD,KAAK,CAACsD,cAAc,CAAC;IAAEC,GAAG,EAAEJ,OAAO;IAAEK,SAAS,EAAE;EAAM,CAAC,CAAC;EAC7E,MAAMC,MAAM,GAAG,IAAIzD,KAAK,CAAC0D,MAAM,CAACL,QAAQ,CAAC;EACzCI,MAAM,CAACE,KAAK,CAACC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7BH,MAAM,CAACI,QAAQ,CAACnC,OAAO,GAAGA,OAAO;EACjC,IAAIC,OAAO,EAAE8B,MAAM,CAACI,QAAQ,CAAClC,OAAO,GAAGA,OAAO;EAC9C,OAAO8B,MAAM;AACf;AAEA,SAASK,gBAAgBA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,EAAE;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3D;EACA,SAASC,cAAcA,CAAA,EAAG;IAAAF,EAAA;IACxBrD,YAAY,CAAC;MACXwD,KAAKA,CAACC,CAAC,EAAE;QACPL,eAAe,CAAC;UAAEM,GAAG,EAAED,CAAC,CAACE,MAAM,CAACD,GAAG;UAAEE,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACC;QAAI,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC;IACF,OAAOT,YAAY,gBAAGjD,OAAA,CAACH,MAAM;MAAC8D,QAAQ,EAAE,CAACV,YAAY,CAACO,GAAG,EAAEP,YAAY,CAACS,GAAG;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI;EACzF;EAACZ,EAAA,CAPQE,cAAc;IAAA,QACrBvD,YAAY;EAAA;EAOd,oBACEE,OAAA,CAACL,YAAY;IAACqE,MAAM,EAAEf,YAAY,IAAI;MAAEO,GAAG,EAAE,CAAC;MAAEE,GAAG,EAAE;IAAE,CAAE;IAACO,IAAI,EAAE,CAAE;IAACC,KAAK,EAAE;MAAE/C,MAAM,EAAE,GAAG;MAAED,KAAK,EAAE;IAAO,CAAE;IAAAiD,QAAA,gBACvGnE,OAAA,CAACJ,SAAS;MAACwE,GAAG,EAAC;IAAoD;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE/D,OAAA,CAACqD,cAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEnB;AAACM,EAAA,GAhBQrB,gBAAgB;AAkBzB,SAASsB,UAAUA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,GAAA;EAC9B,MAAMC,YAAY,GAAG1F,MAAM,CAAC,CAAC;EAC7B,MAAM,CAAC2F,IAAI,EAAEC,OAAO,CAAC,GAAG1F,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC2F,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG5F,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC6F,eAAe,EAAEC,kBAAkB,CAAC,GAAG9F,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC+F,eAAe,EAAEC,kBAAkB,CAAC,GAAGhG,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiG,OAAO,EAAEC,UAAU,CAAC,GAAGlG,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmG,KAAK,EAAEC,QAAQ,CAAC,GAAGpG,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqG,SAAS,EAAEC,YAAY,CAAC,GAAGtG,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACuG,cAAc,EAAEC,iBAAiB,CAAC,GAAGxG,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACyG,aAAa,EAAEC,gBAAgB,CAAC,GAAG1G,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC2G,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5G,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAAC6G,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9G,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM+G,QAAQ,GAAGxG,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACyD,YAAY,EAAEC,eAAe,CAAC,GAAGjE,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMgH,QAAQ,GAAGlH,MAAM,CAAC,CAAC;EACzB,MAAMmH,SAAS,GAAGnH,MAAM,CAAC,CAAC;EAC1B,MAAMoH,WAAW,GAAGpH,MAAM,CAAC,CAAC;EAC5B,MAAMqH,WAAW,GAAGrH,MAAM,CAAC,CAAC;EAC5B;EACA,MAAMsH,iBAAiB,GAAGtH,MAAM,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMsH,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjH,GAAG,CAACkH,OAAO,CAACjC,MAAM,CAAC;QAC1CI,OAAO,CAAC4B,QAAQ,CAACE,IAAI,CAAC;QACtBtB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOuB,GAAG,EAAE;QACZrB,QAAQ,CAAC,yBAAyB,CAAC;QACnCF,UAAU,CAAC,KAAK,CAAC;QACjBwB,OAAO,CAACvB,KAAK,CAACsB,GAAG,CAAC;MACpB;IACF,CAAC;IACDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAAC/B,MAAM,CAAC,CAAC;;EAEZ;EACAvF,SAAS,CAAC,MAAM;IACd,IAAI,CAAC0F,IAAI,IAAIQ,OAAO,EAAE;;IAEtB;IACA,IAAIiB,WAAW,CAACS,OAAO,IAAIT,WAAW,CAACS,OAAO,CAACC,UAAU,IAAIpC,YAAY,CAACmC,OAAO,EAAE;MACjF,IAAInC,YAAY,CAACmC,OAAO,CAACE,QAAQ,CAACX,WAAW,CAACS,OAAO,CAACC,UAAU,CAAC,EAAE;QACjEpC,YAAY,CAACmC,OAAO,CAACG,WAAW,CAACZ,WAAW,CAACS,OAAO,CAACC,UAAU,CAAC;MAClE;MACAV,WAAW,CAACS,OAAO,CAACI,OAAO,CAAC,CAAC;IAC/B;;IAEA;IACA,IAAIvC,YAAY,CAACmC,OAAO,EAAE;MACxB,OAAOnC,YAAY,CAACmC,OAAO,CAACK,UAAU,EAAE;QACtCxC,YAAY,CAACmC,OAAO,CAACG,WAAW,CAACtC,YAAY,CAACmC,OAAO,CAACK,UAAU,CAAC;MACnE;IACF;;IAEA;IACA,MAAM/F,KAAK,GAAGuD,YAAY,CAACmC,OAAO,CAACM,WAAW,IAAIC,MAAM,CAACC,UAAU;IACnE,MAAMjG,MAAM,GAAGsD,YAAY,CAACmC,OAAO,CAACS,YAAY,IAAIF,MAAM,CAACG,WAAW;IAEtE,MAAMC,KAAK,GAAG,IAAIrI,KAAK,CAACsI,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIvI,KAAK,CAACwI,iBAAiB,CACxC,EAAE,EACFxG,KAAK,GAAGC,MAAM,EACd,GAAG,EACH,IACF,CAAC;IACDsG,MAAM,CAAC9D,QAAQ,CAACb,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAE9B,MAAM6E,QAAQ,GAAG,IAAIzI,KAAK,CAAC0I,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAAC5G,KAAK,EAAEC,MAAM,CAAC;IAC/BwG,QAAQ,CAACI,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IACrCtD,YAAY,CAACmC,OAAO,CAACoB,WAAW,CAACL,QAAQ,CAACd,UAAU,CAAC;IAErD,MAAMoB,QAAQ,GAAG,IAAI9I,aAAa,CAACsI,MAAM,EAAEE,QAAQ,CAACd,UAAU,CAAC;IAC/DoB,QAAQ,CAACC,aAAa,GAAG,IAAI;IAC7BD,QAAQ,CAACE,aAAa,GAAG,IAAI;IAC7BF,QAAQ,CAACG,WAAW,GAAG,GAAG;IAE1BnC,QAAQ,CAACW,OAAO,GAAGW,KAAK;IACxBrB,SAAS,CAACU,OAAO,GAAGa,MAAM;IAC1BtB,WAAW,CAACS,OAAO,GAAGe,QAAQ;IAC9BvB,WAAW,CAACQ,OAAO,GAAGqB,QAAQ;IAE9B,IAAII,WAAW;IACf,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBD,WAAW,GAAGE,qBAAqB,CAACD,OAAO,CAAC;MAC5CL,QAAQ,CAACO,MAAM,CAAC,CAAC;MACjBb,QAAQ,CAACc,MAAM,CAAClB,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IACDa,OAAO,CAAC,CAAC;;IAET;IACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI,CAACjE,YAAY,CAACmC,OAAO,EAAE;MAC3B,MAAM+B,CAAC,GAAGlE,YAAY,CAACmC,OAAO,CAACM,WAAW,IAAIC,MAAM,CAACC,UAAU;MAC/D,MAAMwB,CAAC,GAAGnE,YAAY,CAACmC,OAAO,CAACS,YAAY,IAAIF,MAAM,CAACG,WAAW;MACjEG,MAAM,CAACoB,MAAM,GAAGF,CAAC,GAAGC,CAAC;MACrBnB,MAAM,CAACqB,sBAAsB,CAAC,CAAC;MAC/BnB,QAAQ,CAACG,OAAO,CAACa,CAAC,EAAEC,CAAC,CAAC;IACxB,CAAC;IACDzB,MAAM,CAAC4B,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXvB,MAAM,CAAC6B,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;MAClD,IAAIL,WAAW,EAAEY,oBAAoB,CAACZ,WAAW,CAAC;MAClD,IACElC,WAAW,CAACS,OAAO,IACnBT,WAAW,CAACS,OAAO,CAACC,UAAU,IAC9BpC,YAAY,CAACmC,OAAO,IACpBnC,YAAY,CAACmC,OAAO,CAACE,QAAQ,CAACX,WAAW,CAACS,OAAO,CAACC,UAAU,CAAC,EAC7D;QACAV,WAAW,CAACS,OAAO,CAACI,OAAO,CAAC,CAAC;QAC7BvC,YAAY,CAACmC,OAAO,CAACG,WAAW,CAACZ,WAAW,CAACS,OAAO,CAACC,UAAU,CAAC;MAClE;IACF,CAAC;EACH,CAAC,EAAE,CAACnC,IAAI,EAAEQ,OAAO,CAAC,CAAC;;EAEnB;EACAlG,SAAS,CAAC,MAAM;IACd,IACE,CAAC0F,IAAI,IACL,CAACuB,QAAQ,CAACW,OAAO,IACjB,CAAClC,IAAI,CAACwE,MAAM,IACZ,CAACC,KAAK,CAACC,OAAO,CAAC1E,IAAI,CAACwE,MAAM,CAAC,IAC3BxE,IAAI,CAACwE,MAAM,CAACG,MAAM,KAAK,CAAC,IACxBzE,iBAAiB,KAAK,CAAC,CAAC,IACxB,CAACF,IAAI,CAACwE,MAAM,CAACtE,iBAAiB,CAAC,EAC/B;IAEF,MAAM2C,KAAK,GAAGtB,QAAQ,CAACW,OAAO;IAC9B,MAAM0C,YAAY,GAAG5E,IAAI,CAACwE,MAAM,CAACtE,iBAAiB,CAAC;;IAEnD;IACA,OAAO2C,KAAK,CAACpD,QAAQ,CAACkF,MAAM,GAAG,CAAC,EAAE;MAChC9B,KAAK,CAACgC,MAAM,CAAChC,KAAK,CAACpD,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjC;;IAEA;IACA,MAAMqF,QAAQ,GAAG,IAAItK,KAAK,CAACuK,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACzDD,QAAQ,CAAC3G,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAExB,MAAM6G,aAAa,GAAG,IAAIxK,KAAK,CAACyK,aAAa,CAAC,CAAC;IAC/C,IAAIC,QAAQ,GAAGzJ,mBAAmB,CAACmJ,YAAY,CAAClJ,KAAK,CAAC;IAEtDsJ,aAAa,CAACG,IAAI,CAChBD,QAAQ,EACRvH,OAAO,IAAI;MACTA,OAAO,CAACyH,SAAS,GAAG5K,KAAK,CAAC6K,YAAY;MACtC1H,OAAO,CAAC2H,SAAS,GAAG9K,KAAK,CAAC6K,YAAY;MACtC;MACA,IAAI1H,OAAO,CAAC4H,UAAU,KAAKC,SAAS,IAAIhL,KAAK,CAACiL,oBAAoB,EAAE;QAClE9H,OAAO,CAAC4H,UAAU,GAAG/K,KAAK,CAACiL,oBAAoB;MACjD;MACA;MACA,IAAIhE,WAAW,CAACS,OAAO,IAAIT,WAAW,CAACS,OAAO,CAACwD,YAAY,CAACC,gBAAgB,EAAE;QAC5EhI,OAAO,CAACiI,UAAU,GAAG9I,IAAI,CAAC+I,GAAG,CAAC,EAAE,EAAEpE,WAAW,CAACS,OAAO,CAACwD,YAAY,CAACC,gBAAgB,CAAC,CAAC,CAAC;MACxF;MACA,MAAM9H,QAAQ,GAAG,IAAIrD,KAAK,CAACsL,iBAAiB,CAAC;QAC3C/H,GAAG,EAAEJ,OAAO;QACZoI,IAAI,EAAEvL,KAAK,CAACwL;MACd,CAAC,CAAC;MACF,MAAMC,MAAM,GAAG,IAAIzL,KAAK,CAAC0L,IAAI,CAACpB,QAAQ,EAAEjH,QAAQ,CAAC;MACjDgF,KAAK,CAACsD,GAAG,CAACF,MAAM,CAAC;;MAEjB;MACAtE,iBAAiB,CAACO,OAAO,GAAG,EAAE;MAC9B,IAAIuC,KAAK,CAACC,OAAO,CAACE,YAAY,CAACwB,QAAQ,CAAC,EAAE;QACxCxB,YAAY,CAACwB,QAAQ,CAACC,OAAO,CAACnK,OAAO,IAAI;UACvC;UACA,MAAMoK,MAAM,GAAG,GAAG;UAClB,MAAMC,GAAG,GAAG/L,KAAK,CAACgM,SAAS,CAACC,QAAQ,CAAC,EAAE,GAAGvK,OAAO,CAACwK,KAAK,CAAC;UACxD,MAAMC,KAAK,GAAGnM,KAAK,CAACgM,SAAS,CAACC,QAAQ,CAACvK,OAAO,CAAC0K,GAAG,CAAC;UACnD,MAAMC,CAAC,GAAGP,MAAM,GAAGxJ,IAAI,CAACgK,GAAG,CAACP,GAAG,CAAC,GAAGzJ,IAAI,CAACgK,GAAG,CAACH,KAAK,CAAC;UAClD,MAAMI,CAAC,GAAGT,MAAM,GAAGxJ,IAAI,CAACkK,GAAG,CAACT,GAAG,CAAC;UAChC,MAAMU,CAAC,GAAGX,MAAM,GAAGxJ,IAAI,CAACgK,GAAG,CAACP,GAAG,CAAC,GAAGzJ,IAAI,CAACkK,GAAG,CAACL,KAAK,CAAC;UAClD,MAAM1I,MAAM,GAAGhC,mBAAmB,CAACC,OAAO,EAAE,MAAM;YAChD;YACA,IAAIA,OAAO,CAACqB,IAAI,KAAK,QAAQ,IAAIrB,OAAO,CAACgL,aAAa,EAAE;cACtD;cACA,MAAMC,GAAG,GAAGnH,IAAI,CAACwE,MAAM,CAAC4C,SAAS,CAACC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAACE,GAAG,CAAC,KAAKD,MAAM,CAACpL,OAAO,CAACgL,aAAa,CAAC,CAAC;cACvF,IAAIC,GAAG,KAAK,CAAC,CAAC,EAAEhH,oBAAoB,CAACgH,GAAG,CAAC;YAC3C,CAAC,MAAM;cACL;cACA9G,kBAAkB,CAACnE,OAAO,CAAC;YAC7B;UACF,CAAC,CAAC;UACF+B,MAAM,CAACgB,QAAQ,CAACb,GAAG,CAACyI,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;UAC5BpE,KAAK,CAACsD,GAAG,CAAClI,MAAM,CAAC;UACjB0D,iBAAiB,CAACO,OAAO,CAACsF,IAAI,CAACvJ,MAAM,CAAC;QACxC,CAAC,CAAC;MACJ;IACF,CAAC,EACDuH,SAAS,EACTxD,GAAG,IAAI;MACLC,OAAO,CAACvB,KAAK,CAAC,6BAA6B,EAAEsB,GAAG,EAAEkD,QAAQ,CAAC;MAC3D,MAAMrH,QAAQ,GAAG,IAAIrD,KAAK,CAACsL,iBAAiB,CAAC;QAAE2B,KAAK,EAAE,QAAQ;QAAE1B,IAAI,EAAEvL,KAAK,CAACwL;MAAW,CAAC,CAAC;MACzF,MAAMC,MAAM,GAAG,IAAIzL,KAAK,CAAC0L,IAAI,CAACpB,QAAQ,EAAEjH,QAAQ,CAAC;MACjDgF,KAAK,CAACsD,GAAG,CAACF,MAAM,CAAC;IACnB,CACF,CAAC;EACH,CAAC,EAAE,CAACjG,IAAI,EAAEE,iBAAiB,CAAC,CAAC;;EAE7B;EACA5F,SAAS,CAAC,MAAM;IACd,IAAI,CAACmH,WAAW,CAACS,OAAO,IAAI,CAACV,SAAS,CAACU,OAAO,IAAI,CAACX,QAAQ,CAACW,OAAO,EAAE;IACrE,MAAMwF,GAAG,GAAGjG,WAAW,CAACS,OAAO,CAACC,UAAU;IAC1C,SAASwF,aAAaA,CAACC,KAAK,EAAE;MAC5B;MACA,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACxB,MAAMC,IAAI,GAAGJ,GAAG,CAACK,qBAAqB,CAAC,CAAC;MACxC,MAAMC,KAAK,GAAG,IAAIxN,KAAK,CAACyN,OAAO,CAC5B,CAACL,KAAK,CAACM,OAAO,GAAGJ,IAAI,CAACK,IAAI,IAAIL,IAAI,CAACtL,KAAK,GAAI,CAAC,GAAG,CAAC,EAClD,EAAE,CAACoL,KAAK,CAACQ,OAAO,GAAGN,IAAI,CAACO,GAAG,IAAIP,IAAI,CAACrL,MAAM,CAAC,GAAG,CAAC,GAAG,CACpD,CAAC;MACD,MAAM6L,SAAS,GAAG,IAAI9N,KAAK,CAAC+N,SAAS,CAAC,CAAC;MACvCD,SAAS,CAACE,aAAa,CAACR,KAAK,EAAExG,SAAS,CAACU,OAAO,CAAC;MACjD;MACA,MAAMuG,UAAU,GAAGH,SAAS,CAACI,gBAAgB,CAAC/G,iBAAiB,CAACO,OAAO,IAAI,EAAE,EAAE,IAAI,CAAC;MACpF,IAAIuG,UAAU,CAAC9D,MAAM,GAAG,CAAC,EAAE;QACzB,MAAM1G,MAAM,GAAGwK,UAAU,CAAC,CAAC,CAAC,CAACE,MAAM;QACnC,IAAI1K,MAAM,CAACI,QAAQ,IAAI,OAAOJ,MAAM,CAACI,QAAQ,CAAClC,OAAO,KAAK,UAAU,EAAE;UACpE8B,MAAM,CAACI,QAAQ,CAAClC,OAAO,CAAC,CAAC;QAC3B;MACF;IACF;IACAuL,GAAG,CAACrD,gBAAgB,CAAC,aAAa,EAAEsD,aAAa,CAAC;IAClD,OAAO,MAAM;MACXD,GAAG,CAACpD,mBAAmB,CAAC,aAAa,EAAEqD,aAAa,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAAC3H,IAAI,EAAEE,iBAAiB,CAAC,CAAC;;EAE7B;EACA,MAAM0I,iBAAiB,GAAG,MAAO/J,CAAC,IAAK;IACrC,IAAIgK,IAAI;IACR,IAAIhK,CAAC,CAACiK,MAAM,IAAIjK,CAAC,CAACiK,MAAM,CAACC,KAAK,IAAIlK,CAAC,CAACiK,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACnDF,IAAI,GAAGhK,CAAC,CAACiK,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAIlK,CAAC,YAAYmK,IAAI,EAAE;MAC5BH,IAAI,GAAGhK,CAAC;IACV,CAAC,MAAM,IAAIA,CAAC,IAAIA,CAAC,CAACiK,MAAM,IAAIjK,CAAC,CAACiK,MAAM,CAACC,KAAK,EAAE;MAC1CF,IAAI,GAAGhK,CAAC,CAACiK,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1B;IACA,IAAI,CAACF,IAAI,EAAE;IAEX,IAAI;MAAA,IAAAI,eAAA;MACF;MACA,IAAIC,SAAS,GAAG,MAAMtO,GAAG,CAACuO,WAAW,CAACN,IAAI,CAAC;MAC3C,IAAI3D,QAAQ,GAAG,EAAA+D,eAAA,GAAAC,SAAS,CAACnH,IAAI,cAAAkH,eAAA,uBAAdA,eAAA,CAAgB/D,QAAQ,KAAIgE,SAAS,CAAChE,QAAQ;MAC7D,IAAI,CAACA,QAAQ,EAAE;QACb,MAAM,IAAIkE,KAAK,CAAC,mCAAmC,CAAC;MACtD;MACA,MAAMC,QAAQ,GAAG;QACfC,IAAI,EAAE,UAAUtJ,IAAI,CAACwE,MAAM,CAACG,MAAM,GAAG,CAAC,EAAE;QACxCjJ,KAAK,EAAEwJ,QAAQ;QACfkB,QAAQ,EAAE;MACZ,CAAC;MACD,MAAMmD,WAAW,GAAG;QAClB,GAAGvJ,IAAI;QACPwE,MAAM,EAAE,CAAC,GAAGxE,IAAI,CAACwE,MAAM,EAAE6E,QAAQ;MACnC,CAAC;MACD,MAAMG,SAAS,GAAG,MAAM5O,GAAG,CAAC6O,UAAU,CAAC5J,MAAM,EAAE0J,WAAW,CAAC;MAC3DtJ,OAAO,CAACuJ,SAAS,CAACzH,IAAI,GAAGyH,SAAS,CAACzH,IAAI,GAAGyH,SAAS,CAAC;MACpDrJ,oBAAoB,CAACoJ,WAAW,CAAC/E,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC;IACrD,CAAC,CAAC,OAAO3C,GAAG,EAAE;MACZC,OAAO,CAACvB,KAAK,CAAC,wBAAwB,EAAEsB,GAAG,CAAC;MAC5C0H,KAAK,CAAC,0BAA0B1H,GAAG,CAACtB,KAAK,IAAIsB,GAAG,CAAC2H,OAAO,IAAI,oBAAoB,EAAE,CAAC;IACrF;EACF,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAG,MAAOf,IAAI,IAAK;IAC1C,MAAMD,iBAAiB,CAACC,IAAI,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMgB,iBAAiB,GAAG,MAAOC,WAAW,IAAK;IAC/C,IAAI;MACF,MAAMC,aAAa,GAAG,CAAC,GAAG/J,IAAI,CAACwE,MAAM,CAAC;MACtC,MAAMI,YAAY,GAAGmF,aAAa,CAAC7J,iBAAiB,CAAC;MAErD,IAAI4J,WAAW,CAACvC,GAAG,EAAE;QACnB,MAAMyC,KAAK,GAAGpF,YAAY,CAACwB,QAAQ,CAACgB,SAAS,CAAClD,CAAC,IAAIA,CAAC,CAACqD,GAAG,KAAKuC,WAAW,CAACvC,GAAG,CAAC;QAC7E,IAAIyC,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBpF,YAAY,CAACwB,QAAQ,CAAC4D,KAAK,CAAC,GAAGF,WAAW;QAC5C;MACF,CAAC,MAAM;QACLlF,YAAY,CAACwB,QAAQ,CAACoB,IAAI,CAAC;UACzB,GAAGsC,WAAW;UACdvC,GAAG,EAAE0C,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC;QAC3B,CAAC,CAAC;MACJ;MAEA,MAAMZ,WAAW,GAAG;QAAE,GAAGvJ,IAAI;QAAEwE,MAAM,EAAEuF;MAAc,CAAC;MACtD9J,OAAO,CAACsJ,WAAW,CAAC;MACpB,MAAM3O,GAAG,CAAC6O,UAAU,CAAC5J,MAAM,EAAE0J,WAAW,CAAC;MACzClJ,kBAAkB,CAAC,IAAI,CAAC;MACxBE,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZC,OAAO,CAACvB,KAAK,CAAC,0BAA0B,EAAEsB,GAAG,CAAC;MAC9C0H,KAAK,CAAC,qBAAqB1H,GAAG,CAACtB,KAAK,IAAI,oBAAoB,EAAE,CAAC;IACjE;EACF,CAAC;;EAED;EACApG,SAAS,CAAC,MAAM;IACd,IAAI,CAACgG,eAAe,IAAI,CAACmB,WAAW,CAACS,OAAO,IAAI,CAACX,QAAQ,CAACW,OAAO,IAAI,CAACV,SAAS,CAACU,OAAO,EAAE;IAEzF,MAAMkI,iBAAiB,GAAIxC,KAAK,IAAK;MACnC;MACA,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;;MAExB;MACA,IAAID,KAAK,CAACkB,MAAM,KAAKrH,WAAW,CAACS,OAAO,CAACC,UAAU,EAAE;;MAErD;MACA,MAAM2F,IAAI,GAAGrG,WAAW,CAACS,OAAO,CAACC,UAAU,CAAC4F,qBAAqB,CAAC,CAAC;MACnE,MAAMlB,CAAC,GAAI,CAACe,KAAK,CAACM,OAAO,GAAGJ,IAAI,CAACK,IAAI,IAAIL,IAAI,CAACtL,KAAK,GAAI,CAAC,GAAG,CAAC;MAC5D,MAAMuK,CAAC,GAAG,EAAE,CAACa,KAAK,CAACQ,OAAO,GAAGN,IAAI,CAACO,GAAG,IAAIP,IAAI,CAACrL,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;;MAE7D;MACA,MAAM4N,MAAM,GAAG,IAAI7P,KAAK,CAAC8P,OAAO,CAACzD,CAAC,EAAEE,CAAC,EAAE,GAAG,CAAC,CAACwD,SAAS,CAAC/I,SAAS,CAACU,OAAO,CAAC;;MAExE;MACA,MAAMsI,MAAM,GAAGhJ,SAAS,CAACU,OAAO,CAACjD,QAAQ;MACzC,MAAMwL,GAAG,GAAGJ,MAAM,CAACK,GAAG,CAACF,MAAM,CAAC,CAACG,SAAS,CAAC,CAAC;MAC1C,MAAMpE,GAAG,GAAGzJ,IAAI,CAAC8N,IAAI,CAACH,GAAG,CAAC1D,CAAC,CAAC,CAAC,CAAC;MAC9B,MAAMJ,KAAK,GAAG7J,IAAI,CAAC+N,KAAK,CAACJ,GAAG,CAAC5D,CAAC,EAAE4D,GAAG,CAACxD,CAAC,CAAC,CAAC,CAAC;;MAExC;MACA,MAAMP,KAAK,GAAG,EAAE,GAAIH,GAAG,GAAG,GAAG,GAAGzJ,IAAI,CAACC,EAAG;MACxC,MAAM6J,GAAG,GAAGD,KAAK,GAAG,GAAG,GAAG7J,IAAI,CAACC,EAAE;MAEjCgE,iBAAiB,CAAC;QAChB2F,KAAK,EAAEoE,MAAM,CAACpE,KAAK,CAACqE,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/BnE,GAAG,EAAEkE,MAAM,CAAClE,GAAG,CAACmE,OAAO,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC;MACFxK,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED,MAAMmH,GAAG,GAAGjG,WAAW,CAACS,OAAO,CAACC,UAAU;IAC1CuF,GAAG,CAAClI,KAAK,CAACwL,MAAM,GAAG,WAAW;IAC9BtD,GAAG,CAACrD,gBAAgB,CAAC,aAAa,EAAE+F,iBAAiB,CAAC;IAEtD,OAAO,MAAM;MACX1C,GAAG,CAAClI,KAAK,CAACwL,MAAM,GAAG,EAAE;MACrBtD,GAAG,CAACpD,mBAAmB,CAAC,aAAa,EAAE8F,iBAAiB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,CAAC9J,eAAe,EAAEmB,WAAW,EAAEF,QAAQ,EAAEC,SAAS,CAAC,CAAC;;EAEvD;EACA,MAAMyJ,2BAA2B,GAAInB,WAAW,IAAK;IAAA,IAAAoB,qBAAA,EAAAC,mBAAA;IACnDtB,iBAAiB,CAAC;MAChB,GAAGC,WAAW;MACdpD,KAAK,GAAAwE,qBAAA,GAAEpK,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE4F,KAAK,cAAAwE,qBAAA,cAAAA,qBAAA,GAAIpB,WAAW,CAACpD,KAAK;MACjDE,GAAG,GAAAuE,mBAAA,GAAErK,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE8F,GAAG,cAAAuE,mBAAA,cAAAA,mBAAA,GAAIrB,WAAW,CAAClD;IAC1C,CAAC,CAAC;IACF7F,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMqK,gBAAgB,GAAIxD,KAAK,IAAK;IAClC,IAAI,CAAC5G,aAAa,EAAE;IACpB;IACA,MAAMgH,KAAK,GAAG,IAAIxN,KAAK,CAACyN,OAAO,CAAC,CAAC;IACjC,MAAMH,IAAI,GAAG/H,YAAY,CAACmC,OAAO,CAAC6F,qBAAqB,CAAC,CAAC;IACzDC,KAAK,CAACnB,CAAC,GAAI,CAACe,KAAK,CAACM,OAAO,GAAGJ,IAAI,CAACK,IAAI,IAAIL,IAAI,CAACtL,KAAK,GAAI,CAAC,GAAG,CAAC;IAC5DwL,KAAK,CAACjB,CAAC,GAAG,EAAE,CAACa,KAAK,CAACQ,OAAO,GAAGN,IAAI,CAACO,GAAG,IAAIP,IAAI,CAACrL,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;IAE7D,MAAM6L,SAAS,GAAG,IAAI9N,KAAK,CAAC+N,SAAS,CAAC,CAAC;IACvCD,SAAS,CAACE,aAAa,CAACR,KAAK,EAAExG,SAAS,CAACU,OAAO,CAAC;;IAEjD;IACA,MAAMuG,UAAU,GAAGH,SAAS,CAACI,gBAAgB,CAACnH,QAAQ,CAACW,OAAO,CAACzC,QAAQ,CAAC;IACxE,IAAIgJ,UAAU,CAAC9D,MAAM,GAAG,CAAC,EAAE;MACzB,MAAM0G,KAAK,GAAG5C,UAAU,CAAC,CAAC,CAAC,CAAC4C,KAAK;MACjC,MAAM/E,MAAM,GAAG,GAAG;MAClB,MAAMC,GAAG,GAAGzJ,IAAI,CAAC8N,IAAI,CAACS,KAAK,CAACtE,CAAC,GAAGT,MAAM,CAAC;MACvC,MAAMK,KAAK,GAAG7J,IAAI,CAAC+N,KAAK,CAACQ,KAAK,CAACpE,CAAC,EAAEoE,KAAK,CAACxE,CAAC,CAAC;MAC1C,MAAMH,KAAK,GAAG,EAAE,GAAGlM,KAAK,CAACgM,SAAS,CAAC8E,QAAQ,CAAC/E,GAAG,CAAC;MAChD,MAAMK,GAAG,GAAGpM,KAAK,CAACgM,SAAS,CAAC8E,QAAQ,CAAC3E,KAAK,CAAC;MAC3CxF,qBAAqB,CAAC;QAAEuF,KAAK;QAAEE;MAAI,CAAC,CAAC;MACrCvF,mBAAmB,CAAC,IAAI,CAAC;MACzBJ,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMsK,cAAc,GAAG,MAAOzB,WAAW,IAAK;IAC5C,IAAI;MACF,IAAI,CAAC9J,IAAI,IAAI,CAACA,IAAI,CAACwE,MAAM,IAAI,CAACxE,IAAI,CAACwE,MAAM,CAACtE,iBAAiB,CAAC,EAAE;MAC9D,MAAMsL,OAAO,GAAGxL,IAAI,CAACwE,MAAM,CAACtE,iBAAiB,CAAC,CAACqH,GAAG;MAClD,MAAM1F,QAAQ,GAAG,MAAMjH,GAAG,CAAC6Q,UAAU,CAACzL,IAAI,CAACuH,GAAG,EAAEiE,OAAO,EAAE1B,WAAW,CAAC;MACrE;MACA,MAAMP,WAAW,GAAG;QAAE,GAAGvJ;MAAK,CAAC;MAC/BuJ,WAAW,CAAC/E,MAAM,GAAG,CAAC,GAAG+E,WAAW,CAAC/E,MAAM,CAAC;MAC5C,MAAM3B,KAAK,GAAG0G,WAAW,CAAC/E,MAAM,CAACtE,iBAAiB,CAAC;MACnD2C,KAAK,CAACuD,QAAQ,GAAG,CAAC,GAAGvD,KAAK,CAACuD,QAAQ,EAAEvE,QAAQ,CAAC;MAC9C5B,OAAO,CAACsJ,WAAW,CAAC;MACpBlI,mBAAmB,CAAC,KAAK,CAAC;MAC1BF,qBAAqB,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdgJ,KAAK,CAAC,6BAA6B,CAAC;MACpCrI,mBAAmB,CAAC,KAAK,CAAC;MAC1BF,qBAAqB,CAAC,IAAI,CAAC;IAC7B;EACF,CAAC;;EAED;EACA,MAAMuK,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAAC1L,IAAI,EAAE;IACX,MAAMuJ,WAAW,GAAG;MAAE,GAAGvJ,IAAI;MAAEzB;IAAa,CAAC;IAC7C,MAAM3D,GAAG,CAAC6O,UAAU,CAAC5J,MAAM,EAAE0J,WAAW,CAAC;IACzCtJ,OAAO,CAACsJ,WAAW,CAAC;EACtB,CAAC;EAEDjP,SAAS,CAAC,MAAM;IACd,IAAI0F,IAAI,IAAIA,IAAI,CAACzB,YAAY,EAAE;MAC7BC,eAAe,CAACwB,IAAI,CAACzB,YAAY,CAAC;IACpC;EACF,CAAC,EAAE,CAACyB,IAAI,CAAC,CAAC;EAEV,IAAIQ,OAAO,EAAE;IACX,oBAAOlF,OAAA;MAAKqQ,SAAS,EAAC,SAAS;MAAAlM,QAAA,EAAC;IAAgB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxD;EAEA,IAAIqB,KAAK,EAAE;IACT,oBAAOpF,OAAA;MAAKqQ,SAAS,EAAC,OAAO;MAAAlM,QAAA,EAAEiB;IAAK;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7C;;EAEA;EACA,IAAI,CAACW,IAAI,CAACwE,MAAM,IAAIxE,IAAI,CAACwE,MAAM,CAACG,MAAM,KAAK,CAAC,EAAE;IAC5C,oBACErJ,OAAA;MAAKqQ,SAAS,EAAC,aAAa;MAAAlM,QAAA,gBAC1BnE,OAAA;QAAKsQ,GAAG,EAAE7L,YAAa;QAAC4L,SAAS,EAAC;MAAiB;QAAAzM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtD/D,OAAA,CAACuQ,YAAY;QACXC,IAAI,EAAElL,SAAU;QAChBmL,OAAO,EAAElL,YAAa;QACtBb,IAAI,EAAEA,IAAK;QACX4J,mBAAmB,EAAEA,mBAAoB;QACzChB,iBAAiB,EAAEA,iBAAkB;QACrCpE,MAAM,EAAE;MAAG;QAAAtF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;EAEA,oBACE/D,OAAA;IAAKqQ,SAAS,EAAC,aAAa;IAAAlM,QAAA,gBAC1BnE,OAAA;MACEsQ,GAAG,EAAE7L,YAAa;MAClB4L,SAAS,EAAC,iBAAiB;MAC3BxP,OAAO,EAAEiP;IAAiB;MAAAlM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF/D,OAAA,CAACuQ,YAAY;MACXC,IAAI,EAAElL,SAAU;MAChBmL,OAAO,EAAElL,YAAa;MACtBb,IAAI,EAAEA,IAAK;MACX4J,mBAAmB,EAAEA,mBAAoB;MACzChB,iBAAiB,EAAEA,iBAAkB;MACrCpE,MAAM,EAAExE,IAAI,CAACwE,MAAO;MACpBtE,iBAAiB,EAAEA,iBAAkB;MACrCC,oBAAoB,EAAEA,oBAAqB;MAC3CI,kBAAkB,EAAEA,CAAA,KAAMU,gBAAgB,CAAC,IAAI,CAAE;MACjD+K,QAAQ,EAAEA,CAAA,KAAM1K,QAAQ,CAAC,GAAG;IAAE;MAAApC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACD,CAACe,eAAe,IAAIU,cAAc,kBACjCxF,OAAA,CAACX,aAAa;MACZuB,OAAO,EAAEkE,eAAe,IAAI;QAAEsG,KAAK,EAAE5F,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE4F,KAAK;QAAEE,GAAG,EAAE9F,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE8F;MAAI,CAAE;MACvFpC,MAAM,EAAExE,IAAI,CAACwE,MAAO;MACpByH,MAAM,EAAEnL,cAAc,GAAGmK,2BAA2B,GAAGpB,iBAAkB;MACzEqC,QAAQ,EAAEA,CAAA,KAAM;QACd7L,kBAAkB,CAAC,IAAI,CAAC;QACxBE,kBAAkB,CAAC,KAAK,CAAC;QACzBQ,iBAAiB,CAAC,IAAI,CAAC;MACzB;IAAE;MAAA7B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EACA+B,gBAAgB,IAAIF,kBAAkB,iBACrC5F,OAAA,CAACN,oBAAoB;MACnBiE,QAAQ,EAAEiC,kBAAmB;MAC7BlB,IAAI,EAAEA,IAAK;MACXE,iBAAiB,EAAEA,iBAAkB;MACrC+L,MAAM,EAAEV,cAAe;MACvBW,QAAQ,EAAEA,CAAA,KAAM;QACd7K,mBAAmB,CAAC,KAAK,CAAC;QAC1BF,qBAAqB,CAAC,IAAI,CAAC;MAC7B;IAAE;MAAAjC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,eACD/D,OAAA;MAAKkE,KAAK,EAAE;QAAE2M,MAAM,EAAE;MAAS,CAAE;MAAA1M,QAAA,gBAC/BnE,OAAA;QAAAmE,QAAA,EAAI;MAA8C;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvD/D,OAAA,CAACgD,gBAAgB;QAACC,YAAY,EAAEA,YAAa;QAACC,eAAe,EAAEA;MAAgB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClF/D,OAAA;QAAQa,OAAO,EAAEuP,sBAAuB;QAAClM,KAAK,EAAE;UAAE4M,SAAS,EAAE;QAAG,CAAE;QAAA3M,QAAA,EAAC;MAAoB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAAS,GAAA,CAtfSF,UAAU;EAAA,QAaA9E,WAAW;AAAA;AAAAuR,GAAA,GAbrBzM,UAAU;AAufnB,SAASiM,YAAYA,CAAC;EACpBC,IAAI;EACJC,OAAO;EACP/L,IAAI;EACJ4J,mBAAmB;EACnBhB,iBAAiB;EACjBpE,MAAM;EACNtE,iBAAiB;EACjBC,oBAAoB;EACpBI,kBAAkB;EAClByL;AACF,CAAC,EAAE;EACD,oBACE1Q,OAAA,CAAAE,SAAA;IAAAiE,QAAA,gBACEnE,OAAA;MAAOqQ,SAAS,EAAE,eAAeG,IAAI,GAAG,OAAO,GAAG,EAAE,EAAG;MAAArM,QAAA,gBACrDnE,OAAA;QAAKqQ,SAAS,EAAC,cAAc;QAAAlM,QAAA,gBAC3BnE,OAAA;UAAMqQ,SAAS,EAAC,aAAa;UAAAlM,QAAA,EAAC;QAAiB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtD/D,OAAA;UAAQqQ,SAAS,EAAC,cAAc;UAACxP,OAAO,EAAEA,CAAA,KAAM4P,OAAO,CAAC,CAACD,IAAI,CAAE;UAAArM,QAAA,EAC5DqM,IAAI,gBAAGxQ,OAAA,CAAAE,SAAA;YAAAiE,QAAA,EAAE;UAAQ,gBAAE,CAAC,gBAAGnE,OAAA,CAAAE,SAAA;YAAAiE,QAAA,EAAE;UAAQ,gBAAE;QAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLyM,IAAI,iBACHxQ,OAAA;QAAKqQ,SAAS,EAAC,eAAe;QAAAlM,QAAA,gBAC5BnE,OAAA;UACEqQ,SAAS,EAAC,gBAAgB;UAC1BxP,OAAO,EAAE6P,QAAS;UAClBxM,KAAK,EAAE;YACL8M,UAAU,EAAE,SAAS;YACrB7E,KAAK,EAAE,SAAS;YAChB8E,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,CAAC;YACfC,OAAO,EAAE,QAAQ;YACjBC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,GAAG;YACfC,YAAY,EAAE,EAAE;YAChB5B,MAAM,EAAE,SAAS;YACjBxO,KAAK,EAAE,MAAM;YACbqQ,UAAU,EAAE;UACd,CAAE;UAAApN,QAAA,EACH;QAED;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT/D,OAAA,CAACP,aAAa;UAAC8E,MAAM,EAAEG,IAAI,CAACuH,GAAI;UAACuF,aAAa,EAAE9M,IAAI,CAAC+M;QAAO;UAAA7N,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/D/D,OAAA;UAAKqQ,SAAS,EAAC,eAAe;UAAAlM,QAAA,gBAC5BnE,OAAA;YAAAmE,QAAA,EAAI;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtB/D,OAAA,CAACT,QAAQ;YAACmS,YAAY,EAAEpD;UAAoB;YAAA1K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/C/D,OAAA;YAAKqQ,SAAS,EAAC,qBAAqB;YAAAlM,QAAA,EAAC;UAA2B;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtE/D,OAAA;YACEiC,IAAI,EAAC,MAAM;YACX0P,EAAE,EAAC,cAAc;YACjBC,MAAM,EAAC,SAAS;YAChBC,QAAQ,EAAEvE,iBAAkB;YAC5BpJ,KAAK,EAAE;cAAE4N,OAAO,EAAE;YAAO;UAAE;YAAAlO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/D,OAAA;UAAKqQ,SAAS,EAAC,eAAe;UAAAlM,QAAA,gBAC5BnE,OAAA;YAAAmE,QAAA,GAAI,wBAAmB,EAAC+E,MAAM,CAACG,MAAM,EAAC,GAAC;UAAA;YAAAzF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC3CmF,MAAM,CAACG,MAAM,KAAK,CAAC,gBAClBrJ,OAAA;YAAKqQ,SAAS,EAAC,aAAa;YAAAlM,QAAA,EAAC;UAAwB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBAE3D/D,OAAA;YAAIqQ,SAAS,EAAC,kBAAkB;YAAAlM,QAAA,EAC7B+E,MAAM,CAACzG,GAAG,CAAC,CAAC8E,KAAK,EAAEsE,GAAG,kBACrB7L,OAAA;cAEEqQ,SAAS,EAAE,mBAAmBzL,iBAAiB,KAAKiH,GAAG,GAAG,SAAS,GAAG,EAAE,EAAG;cAC3EhL,OAAO,EAAEA,CAAA,KAAMgE,oBAAoB,IAAIA,oBAAoB,CAACgH,GAAG,CAAE;cAAA1H,QAAA,gBAEjEnE,OAAA;gBAAK+R,GAAG,EAAExK,KAAK,CAACnH,KAAK,GAAGD,mBAAmB,CAACoH,KAAK,CAACnH,KAAK,CAAC,GAAG,EAAG;gBAAC4R,GAAG,EAAEzK,KAAK,CAACyG;cAAK;gBAAApK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAClF/D,OAAA;gBAAAmE,QAAA,EAAOoD,KAAK,CAACyG;cAAI;gBAAApK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GALpBwD,KAAK,CAAC0E,GAAG,IAAIJ,GAAG;cAAAjI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMnB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN/D,OAAA;UAAKqQ,SAAS,EAAC,0BAA0B;UAAAlM,QAAA,eACvCnE,OAAA;YAAAmE,QAAA,EAAM;UAEN;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN/D,OAAA;UACEqQ,SAAS,EAAC,iBAAiB;UAC3BxP,OAAO,EAAEA,CAAA,KAAMoE,kBAAkB,IAAIA,kBAAkB,CAAC,IAAI,CAAE;UAAAd,QAAA,EAC/D;QAED;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EACP,CAACyM,IAAI,iBACJxQ,OAAA;MACEqQ,SAAS,EAAC,wBAAwB;MAClCxP,OAAO,EAAEA,CAAA,KAAM4P,OAAO,CAAC,IAAI,CAAE;MAC7B,cAAW,wBAAwB;MAAAtM,QAAA,EACpC;IAED;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA,eACD,CAAC;AAEP;AAACkO,GAAA,GAnGQ1B,YAAY;AAqGrB,eAAejM,UAAU;AAAC,IAAAD,EAAA,EAAA0M,GAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAA7N,EAAA;AAAA6N,YAAA,CAAAnB,GAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}