{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Embed\\\\EmbedViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport './EmbedViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmbedViewer({\n  tour\n}) {\n  _s();\n  const containerRef = useRef();\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Configuraci贸n de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(sceneData.image, texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      });\n    };\n\n    // Cargar primera escena\n    loadScene(currentSceneIndex);\n\n    // Animaci贸n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n        containerRef.current.removeChild(renderer.domElement);\n      }\n    };\n  }, [tour, currentSceneIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embed-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), tour.scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene-selector\",\n      children: tour.scenes.map((scene, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `scene-btn ${index === currentSceneIndex ? 'active' : ''}`,\n        onClick: () => setCurrentSceneIndex(index),\n        children: scene.name || `Escena ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbedViewer, \"PrZuye/iCQHtCoeQha4AMVL4HOI=\");\n_c = EmbedViewer;\nexport default EmbedViewer;\nvar _c;\n$RefreshReg$(_c, \"EmbedViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","jsxDEV","_jsxDEV","EmbedViewer","tour","_s","containerRef","currentSceneIndex","setCurrentSceneIndex","scenes","length","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","controls","enableDamping","dampingFactor","loadScene","index","children","remove","sceneData","geometry","SphereGeometry","scale","textureLoader","TextureLoader","load","image","texture","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","dispose","removeChild","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Embed/EmbedViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport './EmbedViewer.css';\r\n\r\nfunction EmbedViewer({ tour }) {\r\n  const containerRef = useRef();\r\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\r\n\r\n    // Configuraci贸n de Three.js\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75, \r\n      window.innerWidth / window.innerHeight, \r\n      0.1, \r\n      1000\r\n    );\r\n    camera.position.set(0, 0, 0.1);\r\n    \r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    containerRef.current.appendChild(renderer.domElement);\r\n    \r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    \r\n    // Cargar escena actual\r\n    const loadScene = (index) => {\r\n      // Limpiar escena\r\n      while(scene.children.length > 0) { \r\n        scene.remove(scene.children[0]); \r\n      }\r\n      \r\n      const sceneData = tour.scenes[index];\r\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\r\n      geometry.scale(-1, 1, 1);\r\n      \r\n      const textureLoader = new THREE.TextureLoader();\r\n      textureLoader.load(sceneData.image, texture => {\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.magFilter = THREE.LinearFilter;\r\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\r\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\r\n        }\r\n        const material = new THREE.MeshBasicMaterial({ \r\n          map: texture,\r\n          side: THREE.DoubleSide\r\n        });\r\n        const sphere = new THREE.Mesh(geometry, material);\r\n        scene.add(sphere);\r\n      });\r\n    };\r\n    \r\n    // Cargar primera escena\r\n    loadScene(currentSceneIndex);\r\n    \r\n    // Animaci贸n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n    \r\n    // Manejar redimensionamiento\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    // Limpieza\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (renderer) {\r\n        renderer.dispose();\r\n        containerRef.current.removeChild(renderer.domElement);\r\n      }\r\n    };\r\n  }, [tour, currentSceneIndex]);\r\n\r\n  return (\r\n    <div className=\"embed-viewer\">\r\n      <div ref={containerRef} className=\"three-container\"></div>\r\n      {tour.scenes.length > 1 && (\r\n        <div className=\"scene-selector\">\r\n          {tour.scenes.map((scene, index) => (\r\n            <button\r\n              key={index}\r\n              className={`scene-btn ${index === currentSceneIndex ? 'active' : ''}`}\r\n              onClick={() => setCurrentSceneIndex(index)}\r\n            >\r\n              {scene.name || `Escena ${index + 1}`}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmbedViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}