{"ast":null,"code":"// Función para obtener la URL base correcta para autenticación social\nexport const getAuthUrl = provider => {\n  const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n  // Si la URL base ya termina en /api, no agregar /api nuevamente\n  const apiUrl = baseUrl.endsWith('/api') ? baseUrl : `${baseUrl}/api`;\n  return `${apiUrl}/auth/${provider}`;\n};\n\n// URLs específicas para cada proveedor\nexport const getGoogleAuthUrl = () => getAuthUrl('google');\nexport const getFacebookAuthUrl = () => getAuthUrl('facebook');","map":{"version":3,"names":["getAuthUrl","provider","baseUrl","process","env","REACT_APP_API_URL","apiUrl","endsWith","getGoogleAuthUrl","getFacebookAuthUrl"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/utils/auth.js"],"sourcesContent":["// Función para obtener la URL base correcta para autenticación social\r\nexport const getAuthUrl = (provider) => {\r\n  const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n  \r\n  // Si la URL base ya termina en /api, no agregar /api nuevamente\r\n  const apiUrl = baseUrl.endsWith('/api') ? baseUrl : `${baseUrl}/api`;\r\n  \r\n  return `${apiUrl}/auth/${provider}`;\r\n};\r\n\r\n// URLs específicas para cada proveedor\r\nexport const getGoogleAuthUrl = () => getAuthUrl('google');\r\nexport const getFacebookAuthUrl = () => getAuthUrl('facebook'); "],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAIC,QAAQ,IAAK;EACtC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;EAExE;EACA,MAAMC,MAAM,GAAGJ,OAAO,CAACK,QAAQ,CAAC,MAAM,CAAC,GAAGL,OAAO,GAAG,GAAGA,OAAO,MAAM;EAEpE,OAAO,GAAGI,MAAM,SAASL,QAAQ,EAAE;AACrC,CAAC;;AAED;AACA,OAAO,MAAMO,gBAAgB,GAAGA,CAAA,KAAMR,UAAU,CAAC,QAAQ,CAAC;AAC1D,OAAO,MAAMS,kBAAkB,GAAGA,CAAA,KAAMT,UAAU,CAAC,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}