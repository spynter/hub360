{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [zoom, setZoom] = useState(75); // FOV inicial\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    camera.fov = zoom;\n    camera.updateProjectionMatrix();\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      // Anisotropía para mayor nitidez\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots ---\n      hotspotSpritesRef.current = [];\n      if (Array.isArray(currentScene.hotspots)) {\n        currentScene.hotspots.forEach(hotspot => {\n          // Convertir pitch/yaw a coordenadas cartesianas\n          const radius = 500;\n          const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n          const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n          const x = radius * Math.sin(phi) * Math.sin(theta);\n          const y = radius * Math.cos(phi);\n          const z = radius * Math.sin(phi) * Math.cos(theta);\n          let obj3d;\n          if (hotspot.type === 'access') {\n            // Esfera 3D para access\n            const geometry = new THREE.SphereGeometry(12, 32, 32);\n            const material = new THREE.MeshStandardMaterial({\n              color: 0x38bdf8,\n              emissive: 0x0ea5e9,\n              metalness: 0.3,\n              roughness: 0.5\n            });\n            obj3d = new THREE.Mesh(geometry, material);\n            obj3d.userData.hotspot = hotspot;\n            obj3d.userData.isAccessHotspot = true;\n            accessSpheresRef.current.push(obj3d);\n          } else {\n            // Sprite para otros tipos\n            const size = 64;\n            const canvas = document.createElement('canvas');\n            canvas.width = size;\n            canvas.height = size;\n            const ctx = canvas.getContext('2d');\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n            ctx.fillStyle = '#38bdf8';\n            ctx.shadowColor = '#0ea5e9';\n            ctx.shadowBlur = 8;\n            ctx.fill();\n            ctx.lineWidth = 4;\n            ctx.strokeStyle = '#fff';\n            ctx.stroke();\n            const texture = new THREE.CanvasTexture(canvas);\n            const material = new THREE.SpriteMaterial({\n              map: texture,\n              depthTest: false\n            });\n            obj3d = new THREE.Sprite(material);\n            obj3d.scale.set(20, 20, 1);\n            obj3d.userData.hotspot = hotspot;\n          }\n          obj3d.position.set(x, y, z);\n          scene.add(obj3d);\n          hotspotSpritesRef.current.push(obj3d);\n        });\n      }\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // 1. Comparación de IDs como string en la navegación de hotspots\n    const doubleClickNavigateToAccessHotspot = hotspot => {\n      if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n        const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n        if (idx !== -1) setCurrentSceneIndex(idx);\n      }\n    };\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            // doble click\n            doubleClickNavigateToAccessHotspot(obj.userData.hotspot);\n          }\n          lastClickTime = now;\n        } else if (obj.userData.hotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        var _uploadRes$data;\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async files => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const handlePointerDown = event => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - phi * 180 / Math.PI;\n      const yaw = theta * 180 / Math.PI;\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async hotspotData => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async deleteIdx => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => {\n      window.handleDeleteScene = undefined;\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async hotspotIdx => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = {\n      ...updatedScenes[currentSceneIndex]\n    };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = {\n      ...tour,\n      scenes: updatedScenes\n    };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 24,\n          right: 24,\n          zIndex: 10,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: 22,\n            borderRadius: 8,\n            padding: 8,\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            marginBottom: 4,\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            setZoom(z => Math.max(30, z - 5));\n            if (cameraRef.current) {\n              cameraRef.current.fov = Math.max(30, cameraRef.current.fov - 5);\n              cameraRef.current.updateProjectionMatrix();\n            }\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: 22,\n            borderRadius: 8,\n            padding: 8,\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            setZoom(z => Math.min(120, z + 5));\n            if (cameraRef.current) {\n              cameraRef.current.fov = Math.min(120, cameraRef.current.fov + 5);\n              cameraRef.current.updateProjectionMatrix();\n            }\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      setIsAddingHotspot: () => setPlacementMode(true),\n      onReturn: () => navigate('/hub'),\n      handleDeleteHotspot: handleDeleteHotspot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"+Z7aIN8IPI/e5D3HE3vIyOP77nA=\", false, function () {\n  return [useNavigate];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  var _scenes$currentSceneI;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  flex: 1,\n                  cursor: 'pointer'\n                },\n                onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                  alt: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 23\n              }, this), scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete-scene\",\n                style: {\n                  background: 'transparent',\n                  color: '#ef4444',\n                  border: 'none',\n                  marginLeft: 8,\n                  fontSize: 20,\n                  cursor: 'pointer'\n                },\n                title: \"Eliminar escena\",\n                onClick: e => {\n                  e.stopPropagation();\n                  if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                    if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                  }\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 25\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 13\n        }, this), Array.isArray((_scenes$currentSceneI = scenes[currentSceneIndex]) === null || _scenes$currentSceneI === void 0 ? void 0 : _scenes$currentSceneI.hotspots) && scenes[currentSceneIndex].hotspots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hotspots de la Escena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-hotspot-list\",\n            children: scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n              let accessInfo = null;\n              if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n              }\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  gap: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [hotspot.type === 'access' ? 'Punto de Acceso' : hotspot.title || 'Hotspot', accessInfo && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#38bdf8',\n                      marginLeft: 8,\n                      fontSize: 13\n                    },\n                    children: accessInfo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 42\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'transparent',\n                    color: '#ef4444',\n                    border: 'none',\n                    fontSize: 18,\n                    cursor: 'pointer'\n                  },\n                  title: \"Eliminar hotspot\",\n                  onClick: () => {\n                    if (window.confirm('¿Eliminar este hotspot?')) handleDeleteHotspot(idx);\n                  },\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 25\n                }, this)]\n              }, hotspot._id || idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Haz clic en \\\"Agregar Punto de Acceso\\\" en la vista principal para conectar im\\xE1genes entre s\\xED.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-hotspot\",\n          onClick: () => setIsAddingHotspot && setIsAddingHotspot(true),\n          children: \"\\u2795 Agregar Punto de Acceso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 7\n    }, this), !open && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-toggle-collapsed\",\n      onClick: () => setOpen(true),\n      \"aria-label\": \"Abrir panel de control\",\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","zoom","setZoom","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","accessSpheresRef","fetchTour","response","getTour","data","err","console","current","domElement","contains","removeChild","dispose","firstChild","clientWidth","window","innerWidth","clientHeight","innerHeight","scene","Scene","camera","PerspectiveCamera","position","fov","updateProjectionMatrix","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","animationId","animate","requestAnimationFrame","length","t","Date","now","forEach","sphere","sin","x","update","render","handleResize","w","h","aspect","addEventListener","removeEventListener","cancelAnimationFrame","scenes","Array","isArray","currentScene","children","remove","geometry","SphereGeometry","textureLoader","TextureLoader","imageUrl","load","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","min","MeshBasicMaterial","side","DoubleSide","Mesh","add","hotspots","radius","phi","MathUtils","degToRad","pitch","theta","yaw","y","cos","z","obj3d","MeshStandardMaterial","color","emissive","metalness","roughness","isAccessHotspot","push","dom","lastClickTime","doubleClickNavigateToAccessHotspot","targetSceneId","idx","findIndex","s","String","_id","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","obj","object","handleImageUpload","e","files","target","from","File","file","_uploadRes$data","uploadRes","uploadImage","Error","newScene","name","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","index","toString","handlePointerDown","vector","Vector3","unproject","camPos","dir","sub","normalize","acos","atan2","Number","toFixed","style","cursor","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","handleSceneClick","point","radToDeg","saveNewHotspot","sceneId","addHotspot","newHotspot","refreshed","handleDeleteScene","deleteIdx","filter","_","newIndex","handleDeleteHotspot","hotspotIdx","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","right","zIndex","display","flexDirection","gap","fontSize","borderRadius","padding","background","border","marginBottom","max","onReturn","onSave","onCancel","_c","_scenes$currentSceneI","fontWeight","transition","initialApiKey","apiKey","onFileUpload","id","accept","onChange","alignItems","justifyContent","flex","src","alt","marginLeft","title","stopPropagation","confirm","accessInfo","find","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\n\nfunction TourEditor({ tourId }) {\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [zoom, setZoom] = useState(75); // FOV inicial\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n    camera.fov = zoom;\n    camera.updateProjectionMatrix();\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (\n        rendererRef.current &&\n        rendererRef.current.domElement &&\n        containerRef.current &&\n        containerRef.current.contains(rendererRef.current.domElement)\n      ) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (\n      !tour ||\n      !sceneRef.current ||\n      !tour.scenes ||\n      !Array.isArray(tour.scenes) ||\n      tour.scenes.length === 0 ||\n      currentSceneIndex === -1 ||\n      !tour.scenes[currentSceneIndex]\n    ) return;\n\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        // Anisotropía para mayor nitidez\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // --- Renderizar Hotspots ---\n        hotspotSpritesRef.current = [];\n        if (Array.isArray(currentScene.hotspots)) {\n          currentScene.hotspots.forEach(hotspot => {\n            // Convertir pitch/yaw a coordenadas cartesianas\n            const radius = 500;\n            const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n            const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n            const x = radius * Math.sin(phi) * Math.sin(theta);\n            const y = radius * Math.cos(phi);\n            const z = radius * Math.sin(phi) * Math.cos(theta);\n            let obj3d;\n            if (hotspot.type === 'access') {\n              // Esfera 3D para access\n              const geometry = new THREE.SphereGeometry(12, 32, 32);\n              const material = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              obj3d = new THREE.Mesh(geometry, material);\n              obj3d.userData.hotspot = hotspot;\n              obj3d.userData.isAccessHotspot = true;\n              accessSpheresRef.current.push(obj3d);\n            } else {\n              // Sprite para otros tipos\n              const size = 64;\n              const canvas = document.createElement('canvas');\n              canvas.width = size;\n              canvas.height = size;\n              const ctx = canvas.getContext('2d');\n              ctx.beginPath();\n              ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n              ctx.fillStyle = '#38bdf8';\n              ctx.shadowColor = '#0ea5e9';\n              ctx.shadowBlur = 8;\n              ctx.fill();\n              ctx.lineWidth = 4;\n              ctx.strokeStyle = '#fff';\n              ctx.stroke();\n              const texture = new THREE.CanvasTexture(canvas);\n              const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n              obj3d = new THREE.Sprite(material);\n              obj3d.scale.set(20, 20, 1);\n              obj3d.userData.hotspot = hotspot;\n            }\n            obj3d.position.set(x, y, z);\n            scene.add(obj3d);\n            hotspotSpritesRef.current.push(obj3d);\n          });\n        }\n      },\n      undefined,\n      err => {\n        console.error('Error al cargar la textura:', err, imageUrl);\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      }\n    );\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // 1. Comparación de IDs como string en la navegación de hotspots\n    const doubleClickNavigateToAccessHotspot = (hotspot) => {\n      if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n        const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n        if (idx !== -1) setCurrentSceneIndex(idx);\n      }\n    };\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) { // doble click\n            doubleClickNavigateToAccessHotspot(obj.userData.hotspot);\n          }\n          lastClickTime = now;\n        } else if (obj.userData.hotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async (e) => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async (files) => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async (hotspotData) => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n\n    const handlePointerDown = (event) => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - (phi * 180 / Math.PI);\n      const yaw = theta * 180 / Math.PI;\n\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = (hotspotData) => {\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = (event) => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({ pitch, yaw });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async (hotspotData) => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = { ...tour };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async (deleteIdx) => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => { window.handleDeleteScene = undefined; };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async (hotspotIdx) => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = { ...updatedScenes[currentSceneIndex] };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = { ...tour, scenes: updatedScenes };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Cargando tour...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return (\n      <div className=\"tour-editor\">\n        <div ref={containerRef} className=\"three-container\" />\n        <ControlPanel\n          open={panelOpen}\n          setOpen={setPanelOpen}\n          tour={tour}\n          handleDragDropImage={handleDragDropImage}\n          handleImageUpload={handleImageUpload}\n          scenes={[]}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tour-editor\">\n      <div\n        ref={containerRef}\n        className=\"three-container\"\n        onClick={handleSceneClick}\n      >\n        <div style={{ position: 'absolute', top: 24, right: 24, zIndex: 10, display: 'flex', flexDirection: 'column', gap: 8 }}>\n          <button style={{ fontSize: 22, borderRadius: 8, padding: 8, background: '#23272f', color: '#38bdf8', border: 'none', marginBottom: 4, cursor: 'pointer' }} onClick={() => { setZoom(z => Math.max(30, z - 5)); if (cameraRef.current) { cameraRef.current.fov = Math.max(30, cameraRef.current.fov - 5); cameraRef.current.updateProjectionMatrix(); } }}>+</button>\n          <button style={{ fontSize: 22, borderRadius: 8, padding: 8, background: '#23272f', color: '#38bdf8', border: 'none', cursor: 'pointer' }} onClick={() => { setZoom(z => Math.min(120, z + 5)); if (cameraRef.current) { cameraRef.current.fov = Math.min(120, cameraRef.current.fov + 5); cameraRef.current.updateProjectionMatrix(); } }}>-</button>\n        </div>\n      </div>\n      <ControlPanel\n        open={panelOpen}\n        setOpen={setPanelOpen}\n        tour={tour}\n        handleDragDropImage={handleDragDropImage}\n        handleImageUpload={handleImageUpload}\n        scenes={tour.scenes}\n        currentSceneIndex={currentSceneIndex}\n        setCurrentSceneIndex={setCurrentSceneIndex}\n        setIsAddingHotspot={() => setPlacementMode(true)}\n        onReturn={() => navigate('/hub')}\n        handleDeleteHotspot={handleDeleteHotspot}\n      />\n      {(selectedHotspot || pendingHotspot) && (\n        <HotspotEditor\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\n          scenes={tour.scenes}\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\n          onCancel={() => {\n            setSelectedHotspot(null);\n            setIsAddingHotspot(false);\n            setPendingHotspot(null);\n          }}\n        />\n      )}\n      {showHotspotModal && newHotspotPosition && (\n        <HotspotCreationModal\n          position={newHotspotPosition}\n          tour={tour}\n          currentSceneIndex={currentSceneIndex}\n          onSave={saveNewHotspot}\n          onCancel={() => {\n            setShowHotspotModal(false);\n            setNewHotspotPosition(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Panel lateral plegable\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return (\n    <>\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\n        <div className=\"panel-header\">\n          <span className=\"panel-title\">Tour Virtual 360°</span>\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\n            {open ? <>&#10094;</> : <>&#10095;</>}\n          </button>\n        </div>\n        {open && (\n          <div className=\"panel-content\">\n            <button\n              className=\"btn-return-hub\"\n              onClick={onReturn}\n              style={{\n                background: '#23272f',\n                color: '#38bdf8',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 0',\n                fontSize: '1rem',\n                fontWeight: 500,\n                marginBottom: 18,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s, color 0.2s'\n              }}\n            >\n              ← Volver al Hub\n            </button>\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\n            <div className=\"panel-section\">\n              <h3>Imágenes 360°</h3>\n              <DragDrop onFileUpload={handleDragDropImage} />\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div className=\"panel-section\">\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\n              {scenes.length === 0 ? (\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\n              ) : (\n                <ul className=\"panel-image-list\">\n                  {scenes.map((scene, idx) => (\n                    <li\n                      key={scene._id || idx}\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\n                      style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center', flex: 1, cursor: 'pointer' }} onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}>\n                        <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\n                        <span>{scene.name}</span>\n                      </div>\n                      {scenes.length > 1 && (\n                        <button\n                          className=\"btn-delete-scene\"\n                          style={{ background: 'transparent', color: '#ef4444', border: 'none', marginLeft: 8, fontSize: 20, cursor: 'pointer' }}\n                          title=\"Eliminar escena\"\n                          onClick={e => {\n                            e.stopPropagation();\n                            if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                              if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                            }\n                          }}\n                        >\n                          🗑️\n                        </button>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            {Array.isArray(scenes[currentSceneIndex]?.hotspots) && scenes[currentSceneIndex].hotspots.length > 0 && (\n              <div className=\"panel-section\">\n                <h3>Hotspots de la Escena</h3>\n                <ul className=\"panel-hotspot-list\">\n                  {scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                    let accessInfo = null;\n                    if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                      const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                      accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                    }\n                    return (\n                      <li key={hotspot._id || idx} style={{display:'flex',alignItems:'center',justifyContent:'space-between',gap:8}}>\n                        <span>\n                          {hotspot.type === 'access' ? 'Punto de Acceso' : (hotspot.title || 'Hotspot')}\n                          {accessInfo && <span style={{color:'#38bdf8',marginLeft:8,fontSize:13}}>{accessInfo}</span>}\n                        </span>\n                        <button style={{background:'transparent',color:'#ef4444',border:'none',fontSize:18,cursor:'pointer'}} title=\"Eliminar hotspot\" onClick={()=>{if(window.confirm('¿Eliminar este hotspot?'))handleDeleteHotspot(idx)}}>🗑️</button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n            )}\n            <div className=\"panel-section panel-hint\">\n              <span>\n                Haz clic en \"Agregar Punto de Acceso\" en la vista principal para conectar imágenes entre sí.\n              </span>\n            </div>\n            <button\n              className=\"btn-add-hotspot\"\n              onClick={() => setIsAddingHotspot && setIsAddingHotspot(true)}\n            >\n              ➕ Agregar Punto de Acceso\n            </button>\n          </div>\n        )}\n      </aside>\n      {!open && (\n        <button\n          className=\"panel-toggle-collapsed\"\n          onClick={() => setOpen(true)}\n          aria-label=\"Abrir panel de control\"\n        >\n          &#10095;\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}