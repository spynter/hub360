{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n});\n\n// Variable para almacenar el token actual\nlet authToken = null;\n\n// Interceptor para agregar token JWT a las peticiones\napi.interceptors.request.use(config => {\n  if (authToken) {\n    config.headers.Authorization = `Bearer ${authToken}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptores para manejar errores globalmente\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n\n  // Si el token es inválido, limpiar datos locales\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    authToken = null;\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Solo redirigir si no estamos en la página de login\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Métodos para manejar el token de autenticación\nconst setAuthToken = token => {\n  authToken = token;\n  if (token) {\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n};\nconst removeAuthToken = () => {\n  authToken = null;\n  localStorage.removeItem('token');\n};\nconst getAuthToken = () => {\n  return authToken || localStorage.getItem('token');\n};\nexport default {\n  // Métodos de autenticación\n  setAuthToken,\n  removeAuthToken,\n  getAuthToken,\n  // Operaciones CRUD para tours\n  getTours: () => api.get('/tours'),\n  getTour: id => api.get(`/tours/${id}`),\n  createTour: tour => api.post('/tours', tour),\n  updateTour: (id, tour) => api.put(`/tours/${id}`, tour),\n  deleteTour: id => api.delete(`/tours/${id}`),\n  // Subida de imágenes\n  uploadImage: file => {\n    const formData = new FormData();\n    formData.append('image', file);\n    return api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      timeout: 30000,\n      // 30 segundos de timeout\n      onUploadProgress: progressEvent => {\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        console.log('Progreso de upload:', percentCompleted + '%');\n      }\n    });\n  },\n  addHotspot: (tourId, sceneId, hotspotData) => api.post(`/tours/${tourId}/scenes/${sceneId}/hotspots`, hotspotData),\n  // Generar nueva API key para un tour\n  generateApiKey: tourId => api.post(`/tours/${tourId}/generate-key`).then(res => res.data),\n  // Obtener tour por apiKey para embed\n  getTourByApiKey: apiKey => api.get(`/tours/by-key/${apiKey}`).then(res => res.data),\n  // Productos (tienda)\n  createProduct: product => api.post('/products', product),\n  getProductCountByTour: async tourId => {\n    // Devuelve solo el número de productos asociados a un tour\n    const res = await api.get(`/products/by-tour/${tourId}/count`);\n    return res.data.count || 0;\n  },\n  // Autenticación\n  register: userData => api.post('/auth/register', userData),\n  login: loginData => api.post('/auth/login', loginData),\n  // Verificar usuario actual\n  getCurrentUser: () => api.get('/auth/me'),\n  // Verificar si el usuario es admin\n  verifyAdminAccess: () => api.get('/auth/verify-admin')\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","authToken","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response","_error$response","_error$response2","console","data","message","status","localStorage","removeItem","window","location","pathname","includes","href","setAuthToken","token","setItem","removeAuthToken","getAuthToken","getItem","getTours","get","getTour","id","createTour","tour","post","updateTour","put","deleteTour","delete","uploadImage","file","formData","FormData","append","timeout","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","log","addHotspot","tourId","sceneId","hotspotData","generateApiKey","then","res","getTourByApiKey","apiKey","createProduct","product","getProductCountByTour","count","register","userData","login","loginData","getCurrentUser","verifyAdminAccess"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n});\n\n// Variable para almacenar el token actual\nlet authToken = null;\n\n// Interceptor para agregar token JWT a las peticiones\napi.interceptors.request.use(\n  (config) => {\n    if (authToken) {\n      config.headers.Authorization = `Bearer ${authToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptores para manejar errores globalmente\napi.interceptors.response.use(\n  response => response,\n  error => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    // Si el token es inválido, limpiar datos locales\n    if (error.response?.status === 401) {\n      authToken = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      \n      // Solo redirigir si no estamos en la página de login\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = '/login';\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Métodos para manejar el token de autenticación\nconst setAuthToken = (token) => {\n  authToken = token;\n  if (token) {\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n};\n\nconst removeAuthToken = () => {\n  authToken = null;\n  localStorage.removeItem('token');\n};\n\nconst getAuthToken = () => {\n  return authToken || localStorage.getItem('token');\n};\n\nexport default {\n  // Métodos de autenticación\n  setAuthToken,\n  removeAuthToken,\n  getAuthToken,\n  \n  // Operaciones CRUD para tours\n  getTours: () => api.get('/tours'),\n  getTour: (id) => api.get(`/tours/${id}`),\n  createTour: (tour) => api.post('/tours', tour),\n  updateTour: (id, tour) => api.put(`/tours/${id}`, tour),\n  deleteTour: (id) => api.delete(`/tours/${id}`),\n  \n  // Subida de imágenes\n  uploadImage: (file) => {\n    const formData = new FormData();\n    formData.append('image', file);\n    return api.post('/upload', formData, {\n      headers: { \n        'Content-Type': 'multipart/form-data'\n      },\n      timeout: 30000, // 30 segundos de timeout\n      onUploadProgress: (progressEvent) => {\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        console.log('Progreso de upload:', percentCompleted + '%');\n      }\n    });\n  },\n\n  addHotspot: (tourId, sceneId, hotspotData) =>\n    api.post(`/tours/${tourId}/scenes/${sceneId}/hotspots`, hotspotData),\n\n  // Generar nueva API key para un tour\n  generateApiKey: (tourId) =>\n    api.post(`/tours/${tourId}/generate-key`).then(res => res.data),\n\n  // Obtener tour por apiKey para embed\n  getTourByApiKey: (apiKey) =>\n    api.get(`/tours/by-key/${apiKey}`).then(res => res.data),\n\n  // Productos (tienda)\n  createProduct: (product) => api.post('/products', product),\n  getProductCountByTour: async (tourId) => {\n    // Devuelve solo el número de productos asociados a un tour\n    const res = await api.get(`/products/by-tour/${tourId}/count`);\n    return res.data.count || 0;\n  },\n\n  // Autenticación\n  register: (userData) => api.post('/auth/register', userData),\n  login: (loginData) => api.post('/auth/login', loginData),\n  \n  // Verificar usuario actual\n  getCurrentUser: () => api.get('/auth/me'),\n  \n  // Verificar si el usuario es admin\n  verifyAdminAccess: () => api.get('/auth/verify-admin'),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}