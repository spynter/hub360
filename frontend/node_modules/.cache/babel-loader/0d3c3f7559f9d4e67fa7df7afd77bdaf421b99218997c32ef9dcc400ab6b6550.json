{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport function UserProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Intenta cargar usuario y token de localStorage al iniciar\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    if (storedUser && storedToken) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setToken(storedToken);\n\n        // Verificar si el token sigue siendo válido\n        verifyToken(storedToken);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        clearStoredData();\n      }\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  const verifyToken = async tokenToVerify => {\n    try {\n      // Configurar el token en el header de la API\n      api.setAuthToken(tokenToVerify);\n\n      // Verificar el token con el backend\n      const response = await api.getCurrentUser();\n      if (response.data) {\n        // Token válido, actualizar usuario si es necesario\n        setUser(response.data);\n        setToken(tokenToVerify);\n        localStorage.setItem('user', JSON.stringify(response.data));\n        localStorage.setItem('token', tokenToVerify);\n      } else {\n        // Token inválido\n        clearStoredData();\n      }\n    } catch (error) {\n      console.error('Token verification failed:', error);\n      clearStoredData();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const clearStoredData = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    api.removeAuthToken();\n    setIsLoading(false);\n  };\n  const login = (userData, authToken) => {\n    setUser(userData);\n    setToken(authToken);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', authToken);\n    api.setAuthToken(authToken);\n  };\n  const logout = () => {\n    clearStoredData();\n  };\n  const isAuthenticated = () => {\n    return !!(user && token);\n  };\n  const isAdmin = () => {\n    return user && user.tipo === 'admin';\n  };\n  const hasRole = role => {\n    return user && user.tipo === role;\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      token,\n      isLoading,\n      login,\n      logout,\n      isAuthenticated,\n      isAdmin,\n      hasRole\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","token","setToken","isLoading","setIsLoading","storedUser","localStorage","getItem","storedToken","userData","JSON","parse","verifyToken","error","console","clearStoredData","tokenToVerify","setAuthToken","response","getCurrentUser","data","setItem","stringify","removeItem","removeAuthToken","login","authToken","logout","isAuthenticated","isAdmin","tipo","hasRole","role","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Intenta cargar usuario y token de localStorage al iniciar\r\n    const storedUser = localStorage.getItem('user');\r\n    const storedToken = localStorage.getItem('token');\r\n    \r\n    if (storedUser && storedToken) {\r\n      try {\r\n        const userData = JSON.parse(storedUser);\r\n        setUser(userData);\r\n        setToken(storedToken);\r\n        \r\n        // Verificar si el token sigue siendo válido\r\n        verifyToken(storedToken);\r\n      } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n        clearStoredData();\r\n      }\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const verifyToken = async (tokenToVerify) => {\r\n    try {\r\n      // Configurar el token en el header de la API\r\n      api.setAuthToken(tokenToVerify);\r\n      \r\n      // Verificar el token con el backend\r\n      const response = await api.getCurrentUser();\r\n      \r\n      if (response.data) {\r\n        // Token válido, actualizar usuario si es necesario\r\n        setUser(response.data);\r\n        setToken(tokenToVerify);\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n        localStorage.setItem('token', tokenToVerify);\r\n      } else {\r\n        // Token inválido\r\n        clearStoredData();\r\n      }\r\n    } catch (error) {\r\n      console.error('Token verification failed:', error);\r\n      clearStoredData();\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearStoredData = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    api.removeAuthToken();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const login = (userData, authToken) => {\r\n    setUser(userData);\r\n    setToken(authToken);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('token', authToken);\r\n    api.setAuthToken(authToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    clearStoredData();\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return !!(user && token);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user && user.tipo === 'admin';\r\n  };\r\n\r\n  const hasRole = (role) => {\r\n    return user && user.tipo === role;\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ \r\n      user, \r\n      token, \r\n      isLoading,\r\n      login, \r\n      logout, \r\n      isAuthenticated,\r\n      isAdmin,\r\n      hasRole\r\n    }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}