{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Embed\\\\EmbedViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport './EmbedViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\n\n// Hotspot mejorado con efectos visuales similares a Kuula\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createHotspotSprite(hotspot) {\n  const size = 80;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n\n  // Fondo con gradiente\n  const gradient = ctx.createRadialGradient(size / 2, size / 2, 0, size / 2, size / 2, size / 2);\n  gradient.addColorStop(0, 'rgba(56, 189, 248, 0.9)');\n  gradient.addColorStop(0.7, 'rgba(14, 165, 233, 0.7)');\n  gradient.addColorStop(1, 'rgba(14, 165, 233, 0.3)');\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 6, 0, 2 * Math.PI);\n  ctx.fillStyle = gradient;\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 12;\n  ctx.fill();\n\n  // Borde exterior\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#ffffff';\n  ctx.stroke();\n\n  // Borde interior\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 12, 0, 2 * Math.PI);\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n  ctx.stroke();\n\n  // Icono según el tipo\n  if (hotspot.type === 'access') {\n    // Flecha de navegación\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 15);\n    ctx.lineTo(size / 2 + 12, size / 2 + 5);\n    ctx.lineTo(size / 2 - 12, size / 2 + 5);\n    ctx.closePath();\n    ctx.fillStyle = '#ffffff';\n    ctx.fill();\n\n    // Punto central\n    ctx.beginPath();\n    ctx.arc(size / 2, size / 2 + 8, 3, 0, 2 * Math.PI);\n    ctx.fillStyle = '#ffffff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false,\n    transparent: true,\n    opacity: 0.9\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(25, 25, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\nfunction EmbedViewer({\n  tour\n}) {\n  _s();\n  var _tour$scenes$currentS, _tour$scenes$currentS2;\n  const containerRef = useRef();\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const cameraRef = useRef();\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(false);\n  const [fullscreen, setFullscreen] = useState(false);\n  const [showSceneSelector, setShowSceneSelector] = useState(false);\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  const animationRef = useRef();\n  useEffect(() => {\n    setIsMobile(isMobileDevice());\n  }, []);\n\n  // Navegación con teclado\n  const handleKeyDown = useCallback(event => {\n    if (!tour || !tour.scenes) return;\n    switch (event.key) {\n      case 'ArrowLeft':\n        event.preventDefault();\n        navigateToScene(currentSceneIndex - 1);\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        navigateToScene(currentSceneIndex + 1);\n        break;\n      case ' ':\n        event.preventDefault();\n        setAutoRotate(!autoRotate);\n        break;\n      case 'f':\n        event.preventDefault();\n        toggleFullscreen();\n        break;\n      case 'Escape':\n        if (fullscreen) {\n          toggleFullscreen();\n        }\n        break;\n    }\n  }, [tour, currentSceneIndex, autoRotate, fullscreen]);\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  // Navegación entre escenas\n  const navigateToScene = useCallback(index => {\n    if (!tour || !tour.scenes || index < 0 || index >= tour.scenes.length) return;\n    if (transitioning) return;\n    startTransition(index);\n  }, [tour, transitioning]);\n\n  // Toggle fullscreen\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      var _containerRef$current;\n      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.requestFullscreen();\n      setFullscreen(true);\n    } else {\n      document.exitFullscreen();\n      setFullscreen(false);\n    }\n  };\n\n  // Transición mejorada\n  const startTransition = useCallback(targetIdx => {\n    if (transitioning) return;\n    const scene = sceneRef.current;\n    const renderer = rendererRef.current;\n    const camera = cameraRef.current;\n    if (!scene || !renderer || !camera) return;\n\n    // Capturar textura de la escena actual\n    const renderTarget = new THREE.WebGLRenderTarget(renderer.domElement.width, renderer.domElement.height);\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(scene, camera);\n    renderer.setRenderTarget(null);\n    setPrevTexture(renderTarget.texture);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n\n    // Animación de transición\n    const startTime = Date.now();\n    const duration = 800;\n    const animateTransition = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      // Easing suave\n      const easedProgress = 1 - Math.pow(1 - progress, 3);\n      setTransitionProgress(easedProgress);\n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(animateTransition);\n      } else {\n        // Finalizar transición\n        setCurrentSceneIndex(targetIdx);\n        setTransitioning(false);\n        setPendingSceneIndex(null);\n        setPrevTexture(null);\n        if (renderTarget) {\n          renderTarget.dispose();\n        }\n      }\n    };\n    animationRef.current = requestAnimationFrame(animateTransition);\n  }, [transitioning]);\n\n  // Efecto de vibración en móviles para feedback táctil\n  const triggerHapticFeedback = () => {\n    if (navigator.vibrate && isMobile) {\n      navigator.vibrate(50);\n    }\n  };\n\n  // Navegación con feedback háptico\n  const navigateToSceneWithFeedback = useCallback(index => {\n    triggerHapticFeedback();\n    navigateToScene(index);\n  }, [navigateToScene]);\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Configuración de Three.js optimizada para alta calidad\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n      powerPreference: \"high-performance\",\n      preserveDrawingBuffer: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1.0;\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5;\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    controls.autoRotate = autoRotate;\n    controls.autoRotateSpeed = 0.5;\n    controlsRef.current = controls;\n\n    // Zoom con scroll mejorado\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      const zoomSpeed = 0.1;\n      const zoomDelta = e.deltaY > 0 ? -zoomSpeed : zoomSpeed;\n      camera.fov = Math.max(30, Math.min(100, camera.fov + zoomDelta * 10));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(sceneData.image, texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        texture.generateMipmaps = false;\n        texture.anisotropy = renderer.capabilities.getMaxAnisotropy();\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots mejorados\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const sprite = createHotspotSprite(hotspot);\n              sprite.position.set(x, y, z);\n              sprite.userData.hotspot = hotspot;\n              sprite.userData.isAccessHotspot = true;\n              scene.add(sprite);\n            }\n          });\n        }\n      });\n    };\n\n    // Cargar primera escena\n    loadScene(currentSceneIndex);\n\n    // Animación mejorada\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Actualizar controles\n      if (controls) {\n        controls.autoRotate = autoRotate;\n        controls.update();\n      }\n\n      // Animación de hotspots\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) {\n          accessSpheres.push(obj);\n        }\n      });\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.002;\n        accessSpheres.forEach((sphere, index) => {\n          // Animación de pulso\n          let scale = 1.0 + 0.1 * Math.sin(t * 2 + index * 0.5);\n          if (sphere === hoveredObj) {\n            scale *= 1.3;\n            sphere.material.opacity = 1.0;\n          } else {\n            sphere.material.opacity = 0.8 + 0.2 * Math.sin(t + index);\n          }\n          sphere.scale.set(scale, scale, 1);\n\n          // Rotación sutil\n          sphere.rotation.z = t * 0.5 + index * 0.3;\n        });\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas por hotspot\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                navigateToSceneWithFeedback(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n        containerRef.current.removeChild(renderer.domElement);\n      }\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n    };\n  }, [tour, currentSceneIndex, autoRotate, fullscreen, isMobile, navigateToSceneWithFeedback]);\n\n  // Animación de transición\n  useEffect(() => {\n    if (!transitioning) return;\n    let frame;\n    function animate() {\n      setTransitionProgress(prev => {\n        const next = Math.min(prev + 0.04, 1);\n        if (next < 1) {\n          frame = requestAnimationFrame(animate);\n        } else {\n          setTransitioning(false);\n          setPrevTexture(null);\n          setCurrentSceneIndex(pendingSceneIndex);\n        }\n        return next;\n      });\n    }\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }, [transitioning]);\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(currentScene.image, nextTexture => {\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Handler para botones de escena\n  function handleSceneBtn(idx) {\n    if (idx === currentSceneIndex) return;\n    navigateToSceneWithFeedback(idx);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embed-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${autoRotate ? 'active' : ''}`,\n          onClick: () => setAutoRotate(!autoRotate),\n          title: \"Rotaci\\xF3n autom\\xE1tica (Espacio)\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: toggleFullscreen,\n          title: \"Pantalla completa (F)\",\n          children: fullscreen ? '⛶' : '⛶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${showSceneSelector ? 'active' : ''}`,\n          onClick: () => setShowSceneSelector(!showSceneSelector),\n          title: \"Selector de escenas\",\n          children: \"\\uD83D\\uDCCB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), showSceneSelector && tour.scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene-selector\",\n      children: tour.scenes.map((scene, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `scene-btn ${index === currentSceneIndex ? 'active' : ''}`,\n        onClick: () => navigateToSceneWithFeedback(index),\n        disabled: transitioning,\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this), tour.scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-arrows\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-arrow left\",\n        onClick: () => navigateToSceneWithFeedback(currentSceneIndex - 1),\n        disabled: currentSceneIndex === 0 || transitioning,\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-arrow right\",\n        onClick: () => navigateToSceneWithFeedback(currentSceneIndex + 1),\n        disabled: currentSceneIndex === tour.scenes.length - 1 || transitioning,\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scene-title\",\n        children: ((_tour$scenes$currentS = tour.scenes[currentSceneIndex]) === null || _tour$scenes$currentS === void 0 ? void 0 : _tour$scenes$currentS.title) || `Escena ${currentSceneIndex + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scene-description\",\n        children: ((_tour$scenes$currentS2 = tour.scenes[currentSceneIndex]) === null || _tour$scenes$currentS2 === void 0 ? void 0 : _tour$scenes$currentS2.description) || 'Tour virtual 360°'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this), tour.scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${(currentSceneIndex + 1) / tour.scenes.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [currentSceneIndex + 1, \" / \", tour.scenes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Usa las flechas del teclado para navegar \\u2022 Espacio para rotaci\\xF3n autom\\xE1tica \\u2022 F para pantalla completa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbedViewer, \"ahkyTC+Ld9mKWzaMIaZ6BGBT8d4=\");\n_c = EmbedViewer;\nexport default EmbedViewer;\nvar _c;\n$RefreshReg$(_c, \"EmbedViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","THREE","OrbitControls","RadialFadeMaterial","jsxDEV","_jsxDEV","createHotspotSprite","hotspot","size","canvas","document","createElement","width","height","ctx","getContext","gradient","createRadialGradient","addColorStop","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","transparent","opacity","sprite","Sprite","scale","set","userData","isMobileDevice","test","navigator","userAgent","EmbedViewer","tour","_s","_tour$scenes$currentS","_tour$scenes$currentS2","containerRef","currentSceneIndex","setCurrentSceneIndex","fade","setFade","pendingSceneIndex","setPendingSceneIndex","cameraRef","transitioning","setTransitioning","transitionProgress","setTransitionProgress","prevTexture","setPrevTexture","isMobile","setIsMobile","autoRotate","setAutoRotate","fullscreen","setFullscreen","showSceneSelector","setShowSceneSelector","sceneRef","rendererRef","controlsRef","animationRef","handleKeyDown","event","scenes","key","preventDefault","navigateToScene","toggleFullscreen","addEventListener","removeEventListener","index","length","startTransition","fullscreenElement","_containerRef$current","current","requestFullscreen","exitFullscreen","targetIdx","scene","renderer","camera","renderTarget","WebGLRenderTarget","domElement","setRenderTarget","render","startTime","Date","now","duration","animateTransition","elapsed","progress","min","easedProgress","pow","requestAnimationFrame","dispose","triggerHapticFeedback","vibrate","navigateToSceneWithFeedback","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","WebGLRenderer","antialias","alpha","powerPreference","preserveDrawingBuffer","setSize","setPixelRatio","devicePixelRatio","toneMapping","ACESFilmicToneMapping","toneMappingExposure","shadowMap","enabled","PCFSoftShadowMap","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","autoRotateSpeed","e","zoomSpeed","zoomDelta","deltaY","fov","max","updateProjectionMatrix","passive","loadScene","children","remove","sceneData","geometry","SphereGeometry","textureLoader","TextureLoader","load","image","minFilter","LinearFilter","magFilter","generateMipmaps","anisotropy","capabilities","getMaxAnisotropy","colorSpace","undefined","LinearSRGBColorSpace","MeshBasicMaterial","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","forEach","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","isAccessHotspot","hoveredObj","animate","update","accessSpheres","traverse","obj","push","t","rotation","lastClickTime","dom","getAccessSpheres","arr","onPointerDown","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetSceneId","idx","findIndex","s","String","_id","onPointerMove","style","cursor","handleResize","aspect","removeChild","frame","prev","next","cancelAnimationFrame","currentScene","loader","nextTexture","renderTransition","uniforms","uProgress","value","startFov","endFov","start","animateZoomOut","ts","setTimeout","handleSceneBtn","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","disabled","description","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Embed/EmbedViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport './EmbedViewer.css';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\n\n// Hotspot mejorado con efectos visuales similares a Kuula\nfunction createHotspotSprite(hotspot) {\n  const size = 80;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  \n  // Fondo con gradiente\n  const gradient = ctx.createRadialGradient(size/2, size/2, 0, size/2, size/2, size/2);\n  gradient.addColorStop(0, 'rgba(56, 189, 248, 0.9)');\n  gradient.addColorStop(0.7, 'rgba(14, 165, 233, 0.7)');\n  gradient.addColorStop(1, 'rgba(14, 165, 233, 0.3)');\n  \n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-6, 0, 2*Math.PI);\n  ctx.fillStyle = gradient;\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 12;\n  ctx.fill();\n  \n  // Borde exterior\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#ffffff';\n  ctx.stroke();\n  \n  // Borde interior\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-12, 0, 2*Math.PI);\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n  ctx.stroke();\n  \n  // Icono según el tipo\n  if (hotspot.type === 'access') {\n    // Flecha de navegación\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-15);\n    ctx.lineTo(size/2+12, size/2+5);\n    ctx.lineTo(size/2-12, size/2+5);\n    ctx.closePath();\n    ctx.fillStyle = '#ffffff';\n    ctx.fill();\n    \n    // Punto central\n    ctx.beginPath();\n    ctx.arc(size/2, size/2+8, 3, 0, 2*Math.PI);\n    ctx.fillStyle = '#ffffff';\n    ctx.fill();\n  }\n  \n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ \n    map: texture, \n    depthTest: false,\n    transparent: true,\n    opacity: 0.9\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(25, 25, 1);\n  sprite.userData.hotspot = hotspot;\n  return sprite;\n}\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\nfunction EmbedViewer({ tour }) {\n  const containerRef = useRef();\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const cameraRef = useRef();\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [autoRotate, setAutoRotate] = useState(false);\n  const [fullscreen, setFullscreen] = useState(false);\n  const [showSceneSelector, setShowSceneSelector] = useState(false);\n  \n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  const animationRef = useRef();\n\n  useEffect(() => {\n    setIsMobile(isMobileDevice());\n  }, []);\n\n  // Navegación con teclado\n  const handleKeyDown = useCallback((event) => {\n    if (!tour || !tour.scenes) return;\n    \n    switch(event.key) {\n      case 'ArrowLeft':\n        event.preventDefault();\n        navigateToScene(currentSceneIndex - 1);\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        navigateToScene(currentSceneIndex + 1);\n        break;\n      case ' ':\n        event.preventDefault();\n        setAutoRotate(!autoRotate);\n        break;\n      case 'f':\n        event.preventDefault();\n        toggleFullscreen();\n        break;\n      case 'Escape':\n        if (fullscreen) {\n          toggleFullscreen();\n        }\n        break;\n    }\n  }, [tour, currentSceneIndex, autoRotate, fullscreen]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  // Navegación entre escenas\n  const navigateToScene = useCallback((index) => {\n    if (!tour || !tour.scenes || index < 0 || index >= tour.scenes.length) return;\n    if (transitioning) return;\n    \n    startTransition(index);\n  }, [tour, transitioning]);\n\n  // Toggle fullscreen\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      containerRef.current?.requestFullscreen();\n      setFullscreen(true);\n    } else {\n      document.exitFullscreen();\n      setFullscreen(false);\n    }\n  };\n\n  // Transición mejorada\n  const startTransition = useCallback((targetIdx) => {\n    if (transitioning) return;\n    \n    const scene = sceneRef.current;\n    const renderer = rendererRef.current;\n    const camera = cameraRef.current;\n    \n    if (!scene || !renderer || !camera) return;\n    \n    // Capturar textura de la escena actual\n    const renderTarget = new THREE.WebGLRenderTarget(\n      renderer.domElement.width,\n      renderer.domElement.height\n    );\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(scene, camera);\n    renderer.setRenderTarget(null);\n    \n    setPrevTexture(renderTarget.texture);\n    setTransitioning(true);\n    setTransitionProgress(0);\n    setPendingSceneIndex(targetIdx);\n    \n    // Animación de transición\n    const startTime = Date.now();\n    const duration = 800;\n    \n    const animateTransition = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      \n      // Easing suave\n      const easedProgress = 1 - Math.pow(1 - progress, 3);\n      setTransitionProgress(easedProgress);\n      \n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(animateTransition);\n      } else {\n        // Finalizar transición\n        setCurrentSceneIndex(targetIdx);\n        setTransitioning(false);\n        setPendingSceneIndex(null);\n        setPrevTexture(null);\n        if (renderTarget) {\n          renderTarget.dispose();\n        }\n      }\n    };\n    \n    animationRef.current = requestAnimationFrame(animateTransition);\n  }, [transitioning]);\n\n  // Efecto de vibración en móviles para feedback táctil\n  const triggerHapticFeedback = () => {\n    if (navigator.vibrate && isMobile) {\n      navigator.vibrate(50);\n    }\n  };\n\n  // Navegación con feedback háptico\n  const navigateToSceneWithFeedback = useCallback((index) => {\n    triggerHapticFeedback();\n    navigateToScene(index);\n  }, [navigateToScene]);\n\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Configuración de Three.js optimizada para alta calidad\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75, \n      window.innerWidth / window.innerHeight, \n      0.1, \n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    \n    const renderer = new THREE.WebGLRenderer({ \n      antialias: true,\n      alpha: true,\n      powerPreference: \"high-performance\",\n      preserveDrawingBuffer: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1.0;\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    rendererRef.current = renderer;\n    containerRef.current.appendChild(renderer.domElement);\n    \n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5;\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    controls.autoRotate = autoRotate;\n    controls.autoRotateSpeed = 0.5;\n    controlsRef.current = controls;\n    \n    // Zoom con scroll mejorado\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      const zoomSpeed = 0.1;\n      const zoomDelta = e.deltaY > 0 ? -zoomSpeed : zoomSpeed;\n      camera.fov = Math.max(30, Math.min(100, camera.fov + zoomDelta * 10));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n    \n    // Cargar escena actual\n    const loadScene = (index) => {\n      // Limpiar escena\n      while(scene.children.length > 0) { \n        scene.remove(scene.children[0]); \n      }\n      \n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      \n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(sceneData.image, texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        texture.generateMipmaps = false;\n        texture.anisotropy = renderer.capabilities.getMaxAnisotropy();\n        \n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        \n        const material = new THREE.MeshBasicMaterial({ \n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n        \n        // Renderizar hotspots mejorados\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              \n              const sprite = createHotspotSprite(hotspot);\n              sprite.position.set(x, y, z);\n              sprite.userData.hotspot = hotspot;\n              sprite.userData.isAccessHotspot = true;\n              scene.add(sprite);\n            }\n          });\n        }\n      });\n    };\n    \n    // Cargar primera escena\n    loadScene(currentSceneIndex);\n    \n    // Animación mejorada\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      \n      // Actualizar controles\n      if (controls) {\n        controls.autoRotate = autoRotate;\n        controls.update();\n      }\n      \n      // Animación de hotspots\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) {\n          accessSpheres.push(obj);\n        }\n      });\n      \n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.002;\n        accessSpheres.forEach((sphere, index) => {\n          // Animación de pulso\n          let scale = 1.0 + 0.1 * Math.sin(t * 2 + index * 0.5);\n          if (sphere === hoveredObj) {\n            scale *= 1.3;\n            sphere.material.opacity = 1.0;\n          } else {\n            sphere.material.opacity = 0.8 + 0.2 * Math.sin(t + index);\n          }\n          sphere.scale.set(scale, scale, 1);\n          \n          // Rotación sutil\n          sphere.rotation.z = t * 0.5 + index * 0.3;\n        });\n      }\n      \n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas por hotspot\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                navigateToSceneWithFeedback(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n    \n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    \n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n        containerRef.current.removeChild(renderer.domElement);\n      }\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n    };\n  }, [tour, currentSceneIndex, autoRotate, fullscreen, isMobile, navigateToSceneWithFeedback]);\n\n  // Animación de transición\n  useEffect(() => {\n    if (!transitioning) return;\n    let frame;\n    function animate() {\n      setTransitionProgress(prev => {\n        const next = Math.min(prev + 0.04, 1);\n        if (next < 1) {\n          frame = requestAnimationFrame(animate);\n        } else {\n          setTransitioning(false);\n          setPrevTexture(null);\n          setCurrentSceneIndex(pendingSceneIndex);\n        }\n        return next;\n      });\n    }\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }, [transitioning]);\n\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(currentScene.image, nextTexture => {\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);\n        else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Handler para botones de escena\n  function handleSceneBtn(idx) {\n    if (idx === currentSceneIndex) return;\n    navigateToSceneWithFeedback(idx);\n  }\n\n  return (\n    <div className=\"embed-viewer\">\n      <div ref={containerRef} className=\"three-container\"></div>\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      \n      {/* Controles principales */}\n      <div className=\"viewer-controls\">\n        <div className=\"control-buttons\">\n          <button \n            className={`control-btn ${autoRotate ? 'active' : ''}`}\n            onClick={() => setAutoRotate(!autoRotate)}\n            title=\"Rotación automática (Espacio)\"\n          >\n            🔄\n          </button>\n          \n          <button \n            className=\"control-btn\"\n            onClick={toggleFullscreen}\n            title=\"Pantalla completa (F)\"\n          >\n            {fullscreen ? '⛶' : '⛶'}\n          </button>\n          \n          <button \n            className={`control-btn ${showSceneSelector ? 'active' : ''}`}\n            onClick={() => setShowSceneSelector(!showSceneSelector)}\n            title=\"Selector de escenas\"\n          >\n            📋\n          </button>\n        </div>\n      </div>\n      \n      {/* Selector de escenas */}\n      {showSceneSelector && tour.scenes.length > 1 && (\n        <div className=\"scene-selector\">\n          {tour.scenes.map((scene, index) => (\n            <button\n              key={index}\n              className={`scene-btn ${index === currentSceneIndex ? 'active' : ''}`}\n              onClick={() => navigateToSceneWithFeedback(index)}\n              disabled={transitioning}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n      \n      {/* Navegación con flechas */}\n      {tour.scenes.length > 1 && (\n        <div className=\"navigation-arrows\">\n          <button \n            className=\"nav-arrow left\"\n            onClick={() => navigateToSceneWithFeedback(currentSceneIndex - 1)}\n            disabled={currentSceneIndex === 0 || transitioning}\n          >\n            ‹\n          </button>\n          <button \n            className=\"nav-arrow right\"\n            onClick={() => navigateToSceneWithFeedback(currentSceneIndex + 1)}\n            disabled={currentSceneIndex === tour.scenes.length - 1 || transitioning}\n          >\n            ›\n          </button>\n        </div>\n      )}\n      \n      {/* Información de la escena actual */}\n      <div className=\"scene-info\">\n        <div className=\"scene-title\">\n          {tour.scenes[currentSceneIndex]?.title || `Escena ${currentSceneIndex + 1}`}\n        </div>\n        <div className=\"scene-description\">\n          {tour.scenes[currentSceneIndex]?.description || 'Tour virtual 360°'}\n        </div>\n      </div>\n      \n      {/* Indicador de progreso */}\n      {tour.scenes.length > 1 && (\n        <div className=\"progress-indicator\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${((currentSceneIndex + 1) / tour.scenes.length) * 100}%` }}\n            ></div>\n          </div>\n          <span className=\"progress-text\">\n            {currentSceneIndex + 1} / {tour.scenes.length}\n          </span>\n        </div>\n      )}\n      \n      {/* Instrucciones */}\n      <div className=\"instructions\">\n        <p>Usa las flechas del teclado para navegar • Espacio para rotación automática • F para pantalla completa</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EmbedViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}