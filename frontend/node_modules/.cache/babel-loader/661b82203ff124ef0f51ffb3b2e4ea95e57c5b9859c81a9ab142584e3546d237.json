{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      // Anisotropía para mayor nitidez\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots ---\n      hotspotSpritesRef.current = [];\n      if (Array.isArray(currentScene.hotspots)) {\n        currentScene.hotspots.forEach(hotspot => {\n          // Convertir pitch/yaw a coordenadas cartesianas\n          const radius = 500;\n          const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n          const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n          const x = radius * Math.sin(phi) * Math.sin(theta);\n          const y = radius * Math.cos(phi);\n          const z = radius * Math.sin(phi) * Math.cos(theta);\n          let obj3d;\n          if (hotspot.type === 'access') {\n            // Esfera 3D para access\n            const geometry = new THREE.SphereGeometry(12, 32, 32);\n            const material = new THREE.MeshStandardMaterial({\n              color: 0x38bdf8,\n              emissive: 0x0ea5e9,\n              metalness: 0.3,\n              roughness: 0.5\n            });\n            obj3d = new THREE.Mesh(geometry, material);\n            obj3d.userData.hotspot = hotspot;\n            obj3d.userData.isAccessHotspot = true;\n            accessSpheresRef.current.push(obj3d);\n          } else {\n            // Sprite para otros tipos\n            const size = 64;\n            const canvas = document.createElement('canvas');\n            canvas.width = size;\n            canvas.height = size;\n            const ctx = canvas.getContext('2d');\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n            ctx.fillStyle = '#38bdf8';\n            ctx.shadowColor = '#0ea5e9';\n            ctx.shadowBlur = 8;\n            ctx.fill();\n            ctx.lineWidth = 4;\n            ctx.strokeStyle = '#fff';\n            ctx.stroke();\n            const texture = new THREE.CanvasTexture(canvas);\n            const material = new THREE.SpriteMaterial({\n              map: texture,\n              depthTest: false\n            });\n            obj3d = new THREE.Sprite(material);\n            obj3d.scale.set(20, 20, 1);\n            obj3d.userData.hotspot = hotspot;\n          }\n          obj3d.position.set(x, y, z);\n          scene.add(obj3d);\n          hotspotSpritesRef.current.push(obj3d);\n        });\n      }\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // 1. Comparación de IDs como string en la navegación de hotspots\n    const doubleClickNavigateToAccessHotspot = hotspot => {\n      if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n        const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n        if (idx !== -1) {\n          startTransition(idx);\n        }\n      }\n    };\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            // doble click\n            doubleClickNavigateToAccessHotspot(obj.userData.hotspot);\n          }\n          lastClickTime = now;\n        } else if (obj.userData.hotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (fade) return; // Evitar doble trigger\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n\n    // --- EFECTO DE FUNDIDO CRUZADO CON ESTIRAMIENTO RADIAL ---\n    const camera = cameraRef.current;\n    const renderer = rendererRef.current;\n    const scene = sceneRef.current;\n    if (!camera || !renderer || !scene || !tour || !tour.scenes[targetIdx]) return;\n\n    // 1. Obtener la textura de la nueva escena\n    const nextScene = tour.scenes[targetIdx];\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(nextScene.image);\n    textureLoader.load(imageUrl, newTexture => {\n      newTexture.minFilter = THREE.LinearFilter;\n      newTexture.magFilter = THREE.LinearFilter;\n      if (newTexture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        newTexture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      if (renderer.capabilities.getMaxAnisotropy) {\n        newTexture.anisotropy = Math.min(16, renderer.capabilities.getMaxAnisotropy());\n      }\n      // 2. Crear esfera secundaria para la nueva imagen\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const material = new THREE.MeshBasicMaterial({\n        map: newTexture,\n        side: THREE.DoubleSide,\n        transparent: true,\n        opacity: 0.0\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      sphere.name = '__transition_sphere__';\n      sphere.scale.set(0.7, 0.7, 0.7); // Comienza más pequeño (radial)\n      scene.add(sphere);\n\n      // 3. Animar opacidad y escala radial\n      let duration = 650; // ms\n      let start = null;\n      function animateTransition(ts) {\n        if (!start) start = ts;\n        let progress = Math.min((ts - start) / duration, 1);\n        // Ease in-out\n        let eased = 0.5 - 0.5 * Math.cos(Math.PI * progress);\n        material.opacity = eased;\n        let scale = 0.7 + 0.6 * eased; // de 0.7 a 1.3\n        sphere.scale.set(scale, scale, scale);\n        if (progress < 1) {\n          requestAnimationFrame(animateTransition);\n        } else {\n          // Esperar un poco y luego cambiar escena\n          setTimeout(() => {\n            // Eliminar la esfera de transición\n            scene.remove(sphere);\n            setCurrentSceneIndex(targetIdx);\n          }, 80);\n        }\n      }\n      requestAnimationFrame(animateTransition);\n    }, undefined, err => {\n      // Si falla la textura, fallback a transición normal\n      setTimeout(() => {\n        setCurrentSceneIndex(targetIdx);\n      }, 200);\n    });\n  }\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        var _uploadRes$data;\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async files => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const handlePointerDown = event => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - phi * 180 / Math.PI;\n      const yaw = theta * 180 / Math.PI;\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async hotspotData => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async deleteIdx => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => {\n      window.handleDeleteScene = undefined;\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async hotspotIdx => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = {\n      ...updatedScenes[currentSceneIndex]\n    };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = {\n      ...tour,\n      scenes: updatedScenes\n    };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      setIsAddingHotspot: () => setPlacementMode(true),\n      onReturn: () => navigate('/hub'),\n      handleDeleteHotspot: handleDeleteHotspot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 698,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"6pbcL3rtLw/vjDbU5fUDEJRGvoE=\", false, function () {\n  return [useNavigate];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  var _scenes$currentSceneI;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  flex: 1,\n                  cursor: 'pointer'\n                },\n                onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                  alt: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 23\n              }, this), scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete-scene\",\n                style: {\n                  background: 'transparent',\n                  color: '#ef4444',\n                  border: 'none',\n                  marginLeft: 8,\n                  fontSize: 20,\n                  cursor: 'pointer'\n                },\n                title: \"Eliminar escena\",\n                onClick: e => {\n                  e.stopPropagation();\n                  if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                    if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                  }\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 25\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 13\n        }, this), Array.isArray((_scenes$currentSceneI = scenes[currentSceneIndex]) === null || _scenes$currentSceneI === void 0 ? void 0 : _scenes$currentSceneI.hotspots) && scenes[currentSceneIndex].hotspots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hotspots de la Escena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-hotspot-list\",\n            children: scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n              let accessInfo = null;\n              if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n              }\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  gap: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [hotspot.type === 'access' ? 'Punto de Acceso' : hotspot.title || 'Hotspot', accessInfo && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#38bdf8',\n                      marginLeft: 8,\n                      fontSize: 13\n                    },\n                    children: accessInfo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 853,\n                    columnNumber: 42\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'transparent',\n                    color: '#ef4444',\n                    border: 'none',\n                    fontSize: 18,\n                    cursor: 'pointer'\n                  },\n                  title: \"Eliminar hotspot\",\n                  onClick: () => {\n                    if (window.confirm('¿Eliminar este hotspot?')) handleDeleteHotspot(idx);\n                  },\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 855,\n                  columnNumber: 25\n                }, this)]\n              }, hotspot._id || idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Haz clic en \\\"Agregar Punto de Acceso\\\" en la vista principal para conectar im\\xE1genes entre s\\xED.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-hotspot\",\n          onClick: () => setIsAddingHotspot && setIsAddingHotspot(true),\n          children: \"\\u2795 Agregar Punto de Acceso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 7\n    }, this), !open && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"panel-toggle-collapsed\",\n      onClick: () => setOpen(true),\n      \"aria-label\": \"Abrir panel de control\",\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","fade","setFade","pendingSceneIndex","setPendingSceneIndex","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","accessSpheresRef","fetchTour","response","getTour","data","err","console","current","domElement","contains","removeChild","dispose","firstChild","clientWidth","window","innerWidth","clientHeight","innerHeight","scene","Scene","camera","PerspectiveCamera","position","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","max","min","deltaY","updateProjectionMatrix","passive","animationId","animate","requestAnimationFrame","length","t","Date","now","forEach","sphere","sin","x","update","render","handleResize","w","h","aspect","removeEventListener","cancelAnimationFrame","scenes","Array","isArray","currentScene","children","remove","geometry","SphereGeometry","textureLoader","TextureLoader","imageUrl","load","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","MeshBasicMaterial","side","DoubleSide","Mesh","add","hotspots","radius","phi","MathUtils","degToRad","pitch","theta","yaw","y","cos","z","obj3d","MeshStandardMaterial","color","emissive","metalness","roughness","isAccessHotspot","push","dom","lastClickTime","doubleClickNavigateToAccessHotspot","targetSceneId","idx","findIndex","s","String","_id","startTransition","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","obj","object","targetIdx","nextScene","newTexture","transparent","opacity","name","duration","start","animateTransition","ts","progress","eased","setTimeout","startFov","endFov","animateZoomOut","handleImageUpload","files","target","from","File","file","_uploadRes$data","uploadRes","uploadImage","Error","newScene","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","index","toString","handlePointerDown","vector","Vector3","unproject","camPos","dir","sub","normalize","acos","atan2","Number","toFixed","style","cursor","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","handleSceneClick","point","radToDeg","saveNewHotspot","sceneId","addHotspot","newHotspot","refreshed","handleDeleteScene","deleteIdx","filter","_","newIndex","handleDeleteHotspot","hotspotIdx","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","onReturn","onSave","onCancel","_c","_scenes$currentSceneI","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","id","accept","onChange","display","alignItems","justifyContent","flex","src","alt","marginLeft","title","stopPropagation","confirm","accessInfo","find","gap","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\n\n// Utilidad para obtener la URL absoluta de la imagen\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\n\nfunction TourEditor({ tourId }) {\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (\n        rendererRef.current &&\n        rendererRef.current.domElement &&\n        containerRef.current &&\n        containerRef.current.contains(rendererRef.current.domElement)\n      ) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (\n      !tour ||\n      !sceneRef.current ||\n      !tour.scenes ||\n      !Array.isArray(tour.scenes) ||\n      tour.scenes.length === 0 ||\n      currentSceneIndex === -1 ||\n      !tour.scenes[currentSceneIndex]\n    ) return;\n\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        // Anisotropía para mayor nitidez\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // --- Renderizar Hotspots ---\n        hotspotSpritesRef.current = [];\n        if (Array.isArray(currentScene.hotspots)) {\n          currentScene.hotspots.forEach(hotspot => {\n            // Convertir pitch/yaw a coordenadas cartesianas\n            const radius = 500;\n            const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n            const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n            const x = radius * Math.sin(phi) * Math.sin(theta);\n            const y = radius * Math.cos(phi);\n            const z = radius * Math.sin(phi) * Math.cos(theta);\n            let obj3d;\n            if (hotspot.type === 'access') {\n              // Esfera 3D para access\n              const geometry = new THREE.SphereGeometry(12, 32, 32);\n              const material = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              obj3d = new THREE.Mesh(geometry, material);\n              obj3d.userData.hotspot = hotspot;\n              obj3d.userData.isAccessHotspot = true;\n              accessSpheresRef.current.push(obj3d);\n            } else {\n              // Sprite para otros tipos\n              const size = 64;\n              const canvas = document.createElement('canvas');\n              canvas.width = size;\n              canvas.height = size;\n              const ctx = canvas.getContext('2d');\n              ctx.beginPath();\n              ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n              ctx.fillStyle = '#38bdf8';\n              ctx.shadowColor = '#0ea5e9';\n              ctx.shadowBlur = 8;\n              ctx.fill();\n              ctx.lineWidth = 4;\n              ctx.strokeStyle = '#fff';\n              ctx.stroke();\n              const texture = new THREE.CanvasTexture(canvas);\n              const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n              obj3d = new THREE.Sprite(material);\n              obj3d.scale.set(20, 20, 1);\n              obj3d.userData.hotspot = hotspot;\n            }\n            obj3d.position.set(x, y, z);\n            scene.add(obj3d);\n            hotspotSpritesRef.current.push(obj3d);\n          });\n        }\n      },\n      undefined,\n      err => {\n        console.error('Error al cargar la textura:', err, imageUrl);\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      }\n    );\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // 1. Comparación de IDs como string en la navegación de hotspots\n    const doubleClickNavigateToAccessHotspot = (hotspot) => {\n      if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n        const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n        if (idx !== -1) {\n          startTransition(idx);\n        }\n      }\n    };\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) { // doble click\n            doubleClickNavigateToAccessHotspot(obj.userData.hotspot);\n          }\n          lastClickTime = now;\n        } else if (obj.userData.hotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (fade) return; // Evitar doble trigger\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n\n    // --- EFECTO DE FUNDIDO CRUZADO CON ESTIRAMIENTO RADIAL ---\n    const camera = cameraRef.current;\n    const renderer = rendererRef.current;\n    const scene = sceneRef.current;\n    if (!camera || !renderer || !scene || !tour || !tour.scenes[targetIdx]) return;\n\n    // 1. Obtener la textura de la nueva escena\n    const nextScene = tour.scenes[targetIdx];\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(nextScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      (newTexture) => {\n        newTexture.minFilter = THREE.LinearFilter;\n        newTexture.magFilter = THREE.LinearFilter;\n        if (newTexture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          newTexture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        if (renderer.capabilities.getMaxAnisotropy) {\n          newTexture.anisotropy = Math.min(16, renderer.capabilities.getMaxAnisotropy());\n        }\n        // 2. Crear esfera secundaria para la nueva imagen\n        const geometry = new THREE.SphereGeometry(500, 128, 96);\n        geometry.scale(-1, 1, 1);\n        const material = new THREE.MeshBasicMaterial({\n          map: newTexture,\n          side: THREE.DoubleSide,\n          transparent: true,\n          opacity: 0.0\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        sphere.name = '__transition_sphere__';\n        sphere.scale.set(0.7, 0.7, 0.7); // Comienza más pequeño (radial)\n        scene.add(sphere);\n\n        // 3. Animar opacidad y escala radial\n        let duration = 650; // ms\n        let start = null;\n        function animateTransition(ts) {\n          if (!start) start = ts;\n          let progress = Math.min((ts - start) / duration, 1);\n          // Ease in-out\n          let eased = 0.5 - 0.5 * Math.cos(Math.PI * progress);\n          material.opacity = eased;\n          let scale = 0.7 + 0.6 * eased; // de 0.7 a 1.3\n          sphere.scale.set(scale, scale, scale);\n          if (progress < 1) {\n            requestAnimationFrame(animateTransition);\n          } else {\n            // Esperar un poco y luego cambiar escena\n            setTimeout(() => {\n              // Eliminar la esfera de transición\n              scene.remove(sphere);\n              setCurrentSceneIndex(targetIdx);\n            }, 80);\n          }\n        }\n        requestAnimationFrame(animateTransition);\n      },\n      undefined,\n      (err) => {\n        // Si falla la textura, fallback a transición normal\n        setTimeout(() => {\n          setCurrentSceneIndex(targetIdx);\n        }, 200);\n      }\n    );\n  }\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async (e) => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async (files) => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async (hotspotData) => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n\n    const handlePointerDown = (event) => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - (phi * 180 / Math.PI);\n      const yaw = theta * 180 / Math.PI;\n\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = (hotspotData) => {\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = (event) => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({ pitch, yaw });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async (hotspotData) => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = { ...tour };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async (deleteIdx) => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => { window.handleDeleteScene = undefined; };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async (hotspotIdx) => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = { ...updatedScenes[currentSceneIndex] };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = { ...tour, scenes: updatedScenes };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Cargando tour...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return (\n      <div className=\"tour-editor\">\n        <div ref={containerRef} className=\"three-container\" />\n        <ControlPanel\n          open={panelOpen}\n          setOpen={setPanelOpen}\n          tour={tour}\n          handleDragDropImage={handleDragDropImage}\n          handleImageUpload={handleImageUpload}\n          scenes={[]}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tour-editor\">\n      <div\n        ref={containerRef}\n        className=\"three-container\"\n        onClick={handleSceneClick}\n      />\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <ControlPanel\n        open={panelOpen}\n        setOpen={setPanelOpen}\n        tour={tour}\n        handleDragDropImage={handleDragDropImage}\n        handleImageUpload={handleImageUpload}\n        scenes={tour.scenes}\n        currentSceneIndex={currentSceneIndex}\n        setCurrentSceneIndex={setCurrentSceneIndex}\n        setIsAddingHotspot={() => setPlacementMode(true)}\n        onReturn={() => navigate('/hub')}\n        handleDeleteHotspot={handleDeleteHotspot}\n      />\n      {(selectedHotspot || pendingHotspot) && (\n        <HotspotEditor\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\n          scenes={tour.scenes}\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\n          onCancel={() => {\n            setSelectedHotspot(null);\n            setIsAddingHotspot(false);\n            setPendingHotspot(null);\n          }}\n        />\n      )}\n      {showHotspotModal && newHotspotPosition && (\n        <HotspotCreationModal\n          position={newHotspotPosition}\n          tour={tour}\n          currentSceneIndex={currentSceneIndex}\n          onSave={saveNewHotspot}\n          onCancel={() => {\n            setShowHotspotModal(false);\n            setNewHotspotPosition(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Panel lateral plegable\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return (\n    <>\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\n        <div className=\"panel-header\">\n          <span className=\"panel-title\">Tour Virtual 360°</span>\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\n            {open ? <>&#10094;</> : <>&#10095;</>}\n          </button>\n        </div>\n        {open && (\n          <div className=\"panel-content\">\n            <button\n              className=\"btn-return-hub\"\n              onClick={onReturn}\n              style={{\n                background: '#23272f',\n                color: '#38bdf8',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 0',\n                fontSize: '1rem',\n                fontWeight: 500,\n                marginBottom: 18,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s, color 0.2s'\n              }}\n            >\n              ← Volver al Hub\n            </button>\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\n            <div className=\"panel-section\">\n              <h3>Imágenes 360°</h3>\n              <DragDrop onFileUpload={handleDragDropImage} />\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div className=\"panel-section\">\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\n              {scenes.length === 0 ? (\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\n              ) : (\n                <ul className=\"panel-image-list\">\n                  {scenes.map((scene, idx) => (\n                    <li\n                      key={scene._id || idx}\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\n                      style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center', flex: 1, cursor: 'pointer' }} onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}>\n                        <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\n                        <span>{scene.name}</span>\n                      </div>\n                      {scenes.length > 1 && (\n                        <button\n                          className=\"btn-delete-scene\"\n                          style={{ background: 'transparent', color: '#ef4444', border: 'none', marginLeft: 8, fontSize: 20, cursor: 'pointer' }}\n                          title=\"Eliminar escena\"\n                          onClick={e => {\n                            e.stopPropagation();\n                            if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                              if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                            }\n                          }}\n                        >\n                          🗑️\n                        </button>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            {Array.isArray(scenes[currentSceneIndex]?.hotspots) && scenes[currentSceneIndex].hotspots.length > 0 && (\n              <div className=\"panel-section\">\n                <h3>Hotspots de la Escena</h3>\n                <ul className=\"panel-hotspot-list\">\n                  {scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                    let accessInfo = null;\n                    if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                      const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                      accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                    }\n                    return (\n                      <li key={hotspot._id || idx} style={{display:'flex',alignItems:'center',justifyContent:'space-between',gap:8}}>\n                        <span>\n                          {hotspot.type === 'access' ? 'Punto de Acceso' : (hotspot.title || 'Hotspot')}\n                          {accessInfo && <span style={{color:'#38bdf8',marginLeft:8,fontSize:13}}>{accessInfo}</span>}\n                        </span>\n                        <button style={{background:'transparent',color:'#ef4444',border:'none',fontSize:18,cursor:'pointer'}} title=\"Eliminar hotspot\" onClick={()=>{if(window.confirm('¿Eliminar este hotspot?'))handleDeleteHotspot(idx)}}>🗑️</button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n            )}\n            <div className=\"panel-section panel-hint\">\n              <span>\n                Haz clic en \"Agregar Punto de Acceso\" en la vista principal para conectar imágenes entre sí.\n              </span>\n            </div>\n            <button\n              className=\"btn-add-hotspot\"\n              onClick={() => setIsAddingHotspot && setIsAddingHotspot(true)}\n            >\n              ➕ Agregar Punto de Acceso\n            </button>\n          </div>\n        )}\n      </aside>\n      {!open && (\n        <button\n          className=\"panel-toggle-collapsed\"\n          onClick={() => setOpen(true)}\n          aria-label=\"Abrir panel de control\"\n        >\n          &#10095;\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}