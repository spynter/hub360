{"ast":null,"code":"import * as THREE from 'three';\nimport { loadOptimizedTexture as loadOptimizedTextureFromCache, createOptimizedGeometry as createOptimizedGeometryFromCache, configureOptimizedRenderer as configureOptimizedRendererFromCache } from './imageOptimizer';\n\n// Utilidad para obtener la URL absoluta de la imagen\nexport function getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\n// Detectar dispositivo móvil\nexport function isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\n// Crear sprite visual optimizado para hotspots\nexport function createHotspotSprite(hotspot, onClick) {\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n\n  // Círculo azul claro con sombra\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false,\n    transparent: true,\n    opacity: 0.9\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1);\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\n\n// Función optimizada para manejo de eventos del mouse\nexport function createPointerHandlers(dom, camera, getAccessSpheres, onHotspotClick, onHotspotHover) {\n  let lastClickTime = 0;\n  let hoveredObj = null;\n  let raycaster = new THREE.Raycaster();\n  const onPointerDown = event => {\n    if (event.button !== 0) return;\n    const rect = dom.getBoundingClientRect();\n    const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n    raycaster.setFromCamera(mouse, camera);\n    const accessSpheres = getAccessSpheres();\n    const intersects = raycaster.intersectObjects(accessSpheres, true);\n    if (intersects.length > 0) {\n      const obj = intersects[0].object;\n      const now = Date.now();\n      if (obj.userData.isAccessHotspot) {\n        if (now - lastClickTime < 400) {\n          // doble click\n          onHotspotClick(obj.userData.hotspot);\n        }\n        lastClickTime = now;\n      }\n    }\n  };\n  const onPointerMove = event => {\n    const rect = dom.getBoundingClientRect();\n    const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n    raycaster.setFromCamera(mouse, camera);\n    const accessSpheres = getAccessSpheres();\n    const intersects = raycaster.intersectObjects(accessSpheres, true);\n    if (intersects.length > 0) {\n      const obj = intersects[0].object;\n      if (hoveredObj !== obj) {\n        hoveredObj = obj;\n        dom.style.cursor = 'pointer';\n        if (onHotspotHover) onHotspotHover(obj, true);\n      }\n    } else {\n      if (hoveredObj !== null) {\n        hoveredObj = null;\n        dom.style.cursor = '';\n        if (onHotspotHover) onHotspotHover(null, false);\n      }\n    }\n  };\n  return {\n    onPointerDown,\n    onPointerMove\n  };\n}\n\n// Función optimizada para cargar texturas con mejor calidad\nexport function loadOptimizedTexture(imageUrl, onLoad, onProgress, onError) {\n  return loadOptimizedTextureFromCache(imageUrl, onLoad, onProgress, onError);\n}\n\n// Función para crear geometría optimizada para imágenes 360°\nexport function createOptimizedSphereGeometry(radius = 500, segments = 128, rings = 96) {\n  return createOptimizedGeometryFromCache(radius);\n}\n\n// Función para navegar a hotspots de acceso con validación mejorada\nexport function navigateToAccessHotspot(hotspot, tour, onTransition) {\n  if (!hotspot || !hotspot.type === 'access' || !hotspot.targetSceneId) {\n    console.warn('Hotspot inválido para navegación:', hotspot);\n    return false;\n  }\n  const targetIndex = tour.scenes.findIndex(scene => String(scene._id) === String(hotspot.targetSceneId));\n  if (targetIndex === -1) {\n    console.error('Escena objetivo no encontrada:', hotspot.targetSceneId);\n    return false;\n  }\n  if (onTransition) {\n    onTransition(targetIndex);\n  }\n  return true;\n}\n\n// Función para crear controles optimizados\nexport function createOptimizedControls(camera, domElement) {\n  const controls = new THREE.OrbitControls(camera, domElement);\n\n  // Configuración optimizada\n  controls.enableDamping = true;\n  controls.dampingFactor = 0.05;\n  controls.rotateSpeed = -0.5; // Invertir dirección de rotación\n  controls.enableZoom = true;\n  controls.minDistance = 0.05;\n  controls.maxDistance = 2.5;\n  controls.enablePan = false; // Deshabilitar pan para mejor UX\n\n  // Configurar límites de rotación\n  controls.minPolarAngle = 0;\n  controls.maxPolarAngle = Math.PI;\n  return controls;\n}\n\n// Función para manejar el zoom con scroll optimizado\nexport function createZoomHandler(camera, minFov = 30, maxFov = 100, step = 2) {\n  return event => {\n    event.preventDefault();\n    const newFov = Math.max(minFov, Math.min(maxFov, camera.fov + (event.deltaY > 0 ? step : -step)));\n    camera.fov = newFov;\n    camera.updateProjectionMatrix();\n  };\n}\n\n// Función para crear renderer optimizado\nexport function createOptimizedRenderer(container, width, height) {\n  const renderer = new THREE.WebGLRenderer({\n    antialias: true,\n    alpha: false,\n    powerPreference: \"high-performance\"\n  });\n  renderer.setSize(width, height);\n  renderer.setClearColor(0x22232a, 1);\n\n  // Aplicar configuración optimizada\n  configureOptimizedRendererFromCache(renderer);\n  container.appendChild(renderer.domElement);\n  return renderer;\n}","map":{"version":3,"names":["THREE","loadOptimizedTexture","loadOptimizedTextureFromCache","createOptimizedGeometry","createOptimizedGeometryFromCache","configureOptimizedRenderer","configureOptimizedRendererFromCache","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","isMobileDevice","test","navigator","userAgent","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","transparent","opacity","sprite","Sprite","scale","set","userData","createPointerHandlers","dom","camera","getAccessSpheres","onHotspotClick","onHotspotHover","lastClickTime","hoveredObj","raycaster","Raycaster","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","setFromCamera","accessSpheres","intersects","intersectObjects","length","obj","object","now","Date","isAccessHotspot","onPointerMove","style","cursor","imageUrl","onLoad","onProgress","onError","createOptimizedSphereGeometry","radius","segments","rings","navigateToAccessHotspot","tour","onTransition","targetSceneId","console","warn","targetIndex","scenes","findIndex","scene","String","_id","error","createOptimizedControls","domElement","controls","OrbitControls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","enablePan","minPolarAngle","maxPolarAngle","createZoomHandler","minFov","maxFov","step","preventDefault","newFov","max","min","fov","deltaY","updateProjectionMatrix","createOptimizedRenderer","container","renderer","WebGLRenderer","antialias","alpha","powerPreference","setSize","setClearColor","appendChild"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/utils/tourUtils.js"],"sourcesContent":["import * as THREE from 'three';\r\nimport { loadOptimizedTexture as loadOptimizedTextureFromCache, createOptimizedGeometry as createOptimizedGeometryFromCache, configureOptimizedRenderer as configureOptimizedRendererFromCache } from './imageOptimizer';\r\n\r\n// Utilidad para obtener la URL absoluta de la imagen\r\nexport function getAbsoluteImageUrl(image) {\r\n  if (!image) return '';\r\n  if (image.startsWith('/uploads/')) {\r\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\r\n  }\r\n  return image;\r\n}\r\n\r\n// Detectar dispositivo móvil\r\nexport function isMobileDevice() {\r\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\r\n}\r\n\r\n// Crear sprite visual optimizado para hotspots\r\nexport function createHotspotSprite(hotspot, onClick) {\r\n  const size = 64;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = size;\r\n  canvas.height = size;\r\n  const ctx = canvas.getContext('2d');\r\n  \r\n  // Círculo azul claro con sombra\r\n  ctx.beginPath();\r\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\r\n  ctx.fillStyle = '#38bdf8';\r\n  ctx.shadowColor = '#0ea5e9';\r\n  ctx.shadowBlur = 8;\r\n  ctx.fill();\r\n  ctx.lineWidth = 4;\r\n  ctx.strokeStyle = '#fff';\r\n  ctx.stroke();\r\n  \r\n  // Icono de flecha si es access\r\n  if (hotspot.type === 'access') {\r\n    ctx.beginPath();\r\n    ctx.moveTo(size/2, size/2-12);\r\n    ctx.lineTo(size/2+10, size/2+8);\r\n    ctx.lineTo(size/2-10, size/2+8);\r\n    ctx.closePath();\r\n    ctx.fillStyle = '#fff';\r\n    ctx.fill();\r\n  }\r\n  \r\n  const texture = new THREE.CanvasTexture(canvas);\r\n  const material = new THREE.SpriteMaterial({ \r\n    map: texture, \r\n    depthTest: false,\r\n    transparent: true,\r\n    opacity: 0.9\r\n  });\r\n  const sprite = new THREE.Sprite(material);\r\n  sprite.scale.set(20, 20, 1);\r\n  sprite.userData.hotspot = hotspot;\r\n  if (onClick) sprite.userData.onClick = onClick;\r\n  return sprite;\r\n}\r\n\r\n// Función optimizada para manejo de eventos del mouse\r\nexport function createPointerHandlers(dom, camera, getAccessSpheres, onHotspotClick, onHotspotHover) {\r\n  let lastClickTime = 0;\r\n  let hoveredObj = null;\r\n  let raycaster = new THREE.Raycaster();\r\n  \r\n  const onPointerDown = (event) => {\r\n    if (event.button !== 0) return;\r\n    \r\n    const rect = dom.getBoundingClientRect();\r\n    const mouse = new THREE.Vector2(\r\n      ((event.clientX - rect.left) / rect.width) * 2 - 1,\r\n      -((event.clientY - rect.top) / rect.height) * 2 + 1\r\n    );\r\n    \r\n    raycaster.setFromCamera(mouse, camera);\r\n    const accessSpheres = getAccessSpheres();\r\n    const intersects = raycaster.intersectObjects(accessSpheres, true);\r\n    \r\n    if (intersects.length > 0) {\r\n      const obj = intersects[0].object;\r\n      const now = Date.now();\r\n      \r\n      if (obj.userData.isAccessHotspot) {\r\n        if (now - lastClickTime < 400) { // doble click\r\n          onHotspotClick(obj.userData.hotspot);\r\n        }\r\n        lastClickTime = now;\r\n      }\r\n    }\r\n  };\r\n  \r\n  const onPointerMove = (event) => {\r\n    const rect = dom.getBoundingClientRect();\r\n    const mouse = new THREE.Vector2(\r\n      ((event.clientX - rect.left) / rect.width) * 2 - 1,\r\n      -((event.clientY - rect.top) / rect.height) * 2 + 1\r\n    );\r\n    \r\n    raycaster.setFromCamera(mouse, camera);\r\n    const accessSpheres = getAccessSpheres();\r\n    const intersects = raycaster.intersectObjects(accessSpheres, true);\r\n    \r\n    if (intersects.length > 0) {\r\n      const obj = intersects[0].object;\r\n      if (hoveredObj !== obj) {\r\n        hoveredObj = obj;\r\n        dom.style.cursor = 'pointer';\r\n        if (onHotspotHover) onHotspotHover(obj, true);\r\n      }\r\n    } else {\r\n      if (hoveredObj !== null) {\r\n        hoveredObj = null;\r\n        dom.style.cursor = '';\r\n        if (onHotspotHover) onHotspotHover(null, false);\r\n      }\r\n    }\r\n  };\r\n  \r\n  return { onPointerDown, onPointerMove };\r\n}\r\n\r\n// Función optimizada para cargar texturas con mejor calidad\r\nexport function loadOptimizedTexture(imageUrl, onLoad, onProgress, onError) {\r\n  return loadOptimizedTextureFromCache(imageUrl, onLoad, onProgress, onError);\r\n}\r\n\r\n// Función para crear geometría optimizada para imágenes 360°\r\nexport function createOptimizedSphereGeometry(radius = 500, segments = 128, rings = 96) {\r\n  return createOptimizedGeometryFromCache(radius);\r\n}\r\n\r\n// Función para navegar a hotspots de acceso con validación mejorada\r\nexport function navigateToAccessHotspot(hotspot, tour, onTransition) {\r\n  if (!hotspot || !hotspot.type === 'access' || !hotspot.targetSceneId) {\r\n    console.warn('Hotspot inválido para navegación:', hotspot);\r\n    return false;\r\n  }\r\n  \r\n  const targetIndex = tour.scenes.findIndex(scene => \r\n    String(scene._id) === String(hotspot.targetSceneId)\r\n  );\r\n  \r\n  if (targetIndex === -1) {\r\n    console.error('Escena objetivo no encontrada:', hotspot.targetSceneId);\r\n    return false;\r\n  }\r\n  \r\n  if (onTransition) {\r\n    onTransition(targetIndex);\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\n// Función para crear controles optimizados\r\nexport function createOptimizedControls(camera, domElement) {\r\n  const controls = new THREE.OrbitControls(camera, domElement);\r\n  \r\n  // Configuración optimizada\r\n  controls.enableDamping = true;\r\n  controls.dampingFactor = 0.05;\r\n  controls.rotateSpeed = -0.5; // Invertir dirección de rotación\r\n  controls.enableZoom = true;\r\n  controls.minDistance = 0.05;\r\n  controls.maxDistance = 2.5;\r\n  controls.enablePan = false; // Deshabilitar pan para mejor UX\r\n  \r\n  // Configurar límites de rotación\r\n  controls.minPolarAngle = 0;\r\n  controls.maxPolarAngle = Math.PI;\r\n  \r\n  return controls;\r\n}\r\n\r\n// Función para manejar el zoom con scroll optimizado\r\nexport function createZoomHandler(camera, minFov = 30, maxFov = 100, step = 2) {\r\n  return (event) => {\r\n    event.preventDefault();\r\n    const newFov = Math.max(minFov, Math.min(maxFov, \r\n      camera.fov + (event.deltaY > 0 ? step : -step)\r\n    ));\r\n    camera.fov = newFov;\r\n    camera.updateProjectionMatrix();\r\n  };\r\n}\r\n\r\n// Función para crear renderer optimizado\r\nexport function createOptimizedRenderer(container, width, height) {\r\n  const renderer = new THREE.WebGLRenderer({ \r\n    antialias: true,\r\n    alpha: false,\r\n    powerPreference: \"high-performance\"\r\n  });\r\n  \r\n  renderer.setSize(width, height);\r\n  renderer.setClearColor(0x22232a, 1);\r\n  \r\n  // Aplicar configuración optimizada\r\n  configureOptimizedRendererFromCache(renderer);\r\n  \r\n  container.appendChild(renderer.domElement);\r\n  \r\n  return renderer;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}