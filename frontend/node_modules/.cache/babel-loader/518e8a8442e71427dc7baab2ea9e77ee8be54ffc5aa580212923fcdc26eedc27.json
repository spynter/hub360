{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPathRewriter = createPathRewriter;\nconst is_plain_object_1 = require(\"is-plain-object\");\nconst errors_1 = require(\"./errors\");\nconst debug_1 = require(\"./debug\");\nconst debug = debug_1.Debug.extend('path-rewriter');\n/**\n * Create rewrite function, to cache parsed rewrite rules.\n *\n * @param {Object} rewriteConfig\n * @return {Function} Function to rewrite paths; This function should accept `path` (request.url) as parameter\n */\nfunction createPathRewriter(rewriteConfig) {\n  let rulesCache;\n  if (!isValidRewriteConfig(rewriteConfig)) {\n    return;\n  }\n  if (typeof rewriteConfig === 'function') {\n    const customRewriteFn = rewriteConfig;\n    return customRewriteFn;\n  } else {\n    rulesCache = parsePathRewriteRules(rewriteConfig);\n    return rewritePath;\n  }\n  function rewritePath(path) {\n    let result = path;\n    for (const rule of rulesCache) {\n      if (rule.regex.test(path)) {\n        result = result.replace(rule.regex, rule.value);\n        debug('rewriting path from \"%s\" to \"%s\"', path, result);\n        break;\n      }\n    }\n    return result;\n  }\n}\nfunction isValidRewriteConfig(rewriteConfig) {\n  if (typeof rewriteConfig === 'function') {\n    return true;\n  } else if ((0, is_plain_object_1.isPlainObject)(rewriteConfig)) {\n    return Object.keys(rewriteConfig).length !== 0;\n  } else if (rewriteConfig === undefined || rewriteConfig === null) {\n    return false;\n  } else {\n    throw new Error(errors_1.ERRORS.ERR_PATH_REWRITER_CONFIG);\n  }\n}\nfunction parsePathRewriteRules(rewriteConfig) {\n  const rules = [];\n  if ((0, is_plain_object_1.isPlainObject)(rewriteConfig)) {\n    for (const [key, value] of Object.entries(rewriteConfig)) {\n      rules.push({\n        regex: new RegExp(key),\n        value: value\n      });\n      debug('rewrite rule created: \"%s\" ~> \"%s\"', key, value);\n    }\n  }\n  return rules;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createPathRewriter","is_plain_object_1","require","errors_1","debug_1","debug","Debug","extend","rewriteConfig","rulesCache","isValidRewriteConfig","customRewriteFn","parsePathRewriteRules","rewritePath","path","result","rule","regex","test","replace","isPlainObject","keys","length","undefined","Error","ERRORS","ERR_PATH_REWRITER_CONFIG","rules","key","entries","push","RegExp"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/node_modules/http-proxy-middleware/dist/path-rewriter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPathRewriter = createPathRewriter;\nconst is_plain_object_1 = require(\"is-plain-object\");\nconst errors_1 = require(\"./errors\");\nconst debug_1 = require(\"./debug\");\nconst debug = debug_1.Debug.extend('path-rewriter');\n/**\n * Create rewrite function, to cache parsed rewrite rules.\n *\n * @param {Object} rewriteConfig\n * @return {Function} Function to rewrite paths; This function should accept `path` (request.url) as parameter\n */\nfunction createPathRewriter(rewriteConfig) {\n    let rulesCache;\n    if (!isValidRewriteConfig(rewriteConfig)) {\n        return;\n    }\n    if (typeof rewriteConfig === 'function') {\n        const customRewriteFn = rewriteConfig;\n        return customRewriteFn;\n    }\n    else {\n        rulesCache = parsePathRewriteRules(rewriteConfig);\n        return rewritePath;\n    }\n    function rewritePath(path) {\n        let result = path;\n        for (const rule of rulesCache) {\n            if (rule.regex.test(path)) {\n                result = result.replace(rule.regex, rule.value);\n                debug('rewriting path from \"%s\" to \"%s\"', path, result);\n                break;\n            }\n        }\n        return result;\n    }\n}\nfunction isValidRewriteConfig(rewriteConfig) {\n    if (typeof rewriteConfig === 'function') {\n        return true;\n    }\n    else if ((0, is_plain_object_1.isPlainObject)(rewriteConfig)) {\n        return Object.keys(rewriteConfig).length !== 0;\n    }\n    else if (rewriteConfig === undefined || rewriteConfig === null) {\n        return false;\n    }\n    else {\n        throw new Error(errors_1.ERRORS.ERR_PATH_REWRITER_CONFIG);\n    }\n}\nfunction parsePathRewriteRules(rewriteConfig) {\n    const rules = [];\n    if ((0, is_plain_object_1.isPlainObject)(rewriteConfig)) {\n        for (const [key, value] of Object.entries(rewriteConfig)) {\n            rules.push({\n                regex: new RegExp(key),\n                value: value,\n            });\n            debug('rewrite rule created: \"%s\" ~> \"%s\"', key, value);\n        }\n    }\n    return rules;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB;AAC/C,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACpD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMG,KAAK,GAAGD,OAAO,CAACE,KAAK,CAACC,MAAM,CAAC,eAAe,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAASP,kBAAkBA,CAACQ,aAAa,EAAE;EACvC,IAAIC,UAAU;EACd,IAAI,CAACC,oBAAoB,CAACF,aAAa,CAAC,EAAE;IACtC;EACJ;EACA,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;IACrC,MAAMG,eAAe,GAAGH,aAAa;IACrC,OAAOG,eAAe;EAC1B,CAAC,MACI;IACDF,UAAU,GAAGG,qBAAqB,CAACJ,aAAa,CAAC;IACjD,OAAOK,WAAW;EACtB;EACA,SAASA,WAAWA,CAACC,IAAI,EAAE;IACvB,IAAIC,MAAM,GAAGD,IAAI;IACjB,KAAK,MAAME,IAAI,IAAIP,UAAU,EAAE;MAC3B,IAAIO,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC,EAAE;QACvBC,MAAM,GAAGA,MAAM,CAACI,OAAO,CAACH,IAAI,CAACC,KAAK,EAAED,IAAI,CAACjB,KAAK,CAAC;QAC/CM,KAAK,CAAC,kCAAkC,EAAES,IAAI,EAAEC,MAAM,CAAC;QACvD;MACJ;IACJ;IACA,OAAOA,MAAM;EACjB;AACJ;AACA,SAASL,oBAAoBA,CAACF,aAAa,EAAE;EACzC,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;IACrC,OAAO,IAAI;EACf,CAAC,MACI,IAAI,CAAC,CAAC,EAAEP,iBAAiB,CAACmB,aAAa,EAAEZ,aAAa,CAAC,EAAE;IAC1D,OAAOZ,MAAM,CAACyB,IAAI,CAACb,aAAa,CAAC,CAACc,MAAM,KAAK,CAAC;EAClD,CAAC,MACI,IAAId,aAAa,KAAKe,SAAS,IAAIf,aAAa,KAAK,IAAI,EAAE;IAC5D,OAAO,KAAK;EAChB,CAAC,MACI;IACD,MAAM,IAAIgB,KAAK,CAACrB,QAAQ,CAACsB,MAAM,CAACC,wBAAwB,CAAC;EAC7D;AACJ;AACA,SAASd,qBAAqBA,CAACJ,aAAa,EAAE;EAC1C,MAAMmB,KAAK,GAAG,EAAE;EAChB,IAAI,CAAC,CAAC,EAAE1B,iBAAiB,CAACmB,aAAa,EAAEZ,aAAa,CAAC,EAAE;IACrD,KAAK,MAAM,CAACoB,GAAG,EAAE7B,KAAK,CAAC,IAAIH,MAAM,CAACiC,OAAO,CAACrB,aAAa,CAAC,EAAE;MACtDmB,KAAK,CAACG,IAAI,CAAC;QACPb,KAAK,EAAE,IAAIc,MAAM,CAACH,GAAG,CAAC;QACtB7B,KAAK,EAAEA;MACX,CAAC,CAAC;MACFM,KAAK,CAAC,oCAAoC,EAAEuB,GAAG,EAAE7B,KAAK,CAAC;IAC3D;EACJ;EACA,OAAO4B,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}