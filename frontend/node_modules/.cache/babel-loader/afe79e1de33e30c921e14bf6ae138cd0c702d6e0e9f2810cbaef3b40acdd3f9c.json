{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchPathFilter = matchPathFilter;\nconst isGlob = require(\"is-glob\");\nconst micromatch = require(\"micromatch\");\nconst url = require(\"url\");\nconst errors_1 = require(\"./errors\");\nfunction matchPathFilter(pathFilter = '/', uri, req) {\n  // single path\n  if (isStringPath(pathFilter)) {\n    return matchSingleStringPath(pathFilter, uri);\n  }\n  // single glob path\n  if (isGlobPath(pathFilter)) {\n    return matchSingleGlobPath(pathFilter, uri);\n  }\n  // multi path\n  if (Array.isArray(pathFilter)) {\n    if (pathFilter.every(isStringPath)) {\n      return matchMultiPath(pathFilter, uri);\n    }\n    if (pathFilter.every(isGlobPath)) {\n      return matchMultiGlobPath(pathFilter, uri);\n    }\n    throw new Error(errors_1.ERRORS.ERR_CONTEXT_MATCHER_INVALID_ARRAY);\n  }\n  // custom matching\n  if (typeof pathFilter === 'function') {\n    const pathname = getUrlPathName(uri);\n    return pathFilter(pathname, req);\n  }\n  throw new Error(errors_1.ERRORS.ERR_CONTEXT_MATCHER_GENERIC);\n}\n/**\n * @param  {String} pathFilter '/api'\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\n * @return {Boolean}\n */\nfunction matchSingleStringPath(pathFilter, uri) {\n  const pathname = getUrlPathName(uri);\n  return pathname?.indexOf(pathFilter) === 0;\n}\nfunction matchSingleGlobPath(pattern, uri) {\n  const pathname = getUrlPathName(uri);\n  const matches = micromatch([pathname], pattern);\n  return matches && matches.length > 0;\n}\nfunction matchMultiGlobPath(patternList, uri) {\n  return matchSingleGlobPath(patternList, uri);\n}\n/**\n * @param  {String} pathFilterList ['/api', '/ajax']\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\n * @return {Boolean}\n */\nfunction matchMultiPath(pathFilterList, uri) {\n  let isMultiPath = false;\n  for (const context of pathFilterList) {\n    if (matchSingleStringPath(context, uri)) {\n      isMultiPath = true;\n      break;\n    }\n  }\n  return isMultiPath;\n}\n/**\n * Parses URI and returns RFC 3986 path\n *\n * @param  {String} uri from req.url\n * @return {String}     RFC 3986 path\n */\nfunction getUrlPathName(uri) {\n  return uri && url.parse(uri).pathname;\n}\nfunction isStringPath(pathFilter) {\n  return typeof pathFilter === 'string' && !isGlob(pathFilter);\n}\nfunction isGlobPath(pathFilter) {\n  return isGlob(pathFilter);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","matchPathFilter","isGlob","require","micromatch","url","errors_1","pathFilter","uri","req","isStringPath","matchSingleStringPath","isGlobPath","matchSingleGlobPath","Array","isArray","every","matchMultiPath","matchMultiGlobPath","Error","ERRORS","ERR_CONTEXT_MATCHER_INVALID_ARRAY","pathname","getUrlPathName","ERR_CONTEXT_MATCHER_GENERIC","indexOf","pattern","matches","length","patternList","pathFilterList","isMultiPath","context","parse"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/node_modules/http-proxy-middleware/dist/path-filter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matchPathFilter = matchPathFilter;\nconst isGlob = require(\"is-glob\");\nconst micromatch = require(\"micromatch\");\nconst url = require(\"url\");\nconst errors_1 = require(\"./errors\");\nfunction matchPathFilter(pathFilter = '/', uri, req) {\n    // single path\n    if (isStringPath(pathFilter)) {\n        return matchSingleStringPath(pathFilter, uri);\n    }\n    // single glob path\n    if (isGlobPath(pathFilter)) {\n        return matchSingleGlobPath(pathFilter, uri);\n    }\n    // multi path\n    if (Array.isArray(pathFilter)) {\n        if (pathFilter.every(isStringPath)) {\n            return matchMultiPath(pathFilter, uri);\n        }\n        if (pathFilter.every(isGlobPath)) {\n            return matchMultiGlobPath(pathFilter, uri);\n        }\n        throw new Error(errors_1.ERRORS.ERR_CONTEXT_MATCHER_INVALID_ARRAY);\n    }\n    // custom matching\n    if (typeof pathFilter === 'function') {\n        const pathname = getUrlPathName(uri);\n        return pathFilter(pathname, req);\n    }\n    throw new Error(errors_1.ERRORS.ERR_CONTEXT_MATCHER_GENERIC);\n}\n/**\n * @param  {String} pathFilter '/api'\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\n * @return {Boolean}\n */\nfunction matchSingleStringPath(pathFilter, uri) {\n    const pathname = getUrlPathName(uri);\n    return pathname?.indexOf(pathFilter) === 0;\n}\nfunction matchSingleGlobPath(pattern, uri) {\n    const pathname = getUrlPathName(uri);\n    const matches = micromatch([pathname], pattern);\n    return matches && matches.length > 0;\n}\nfunction matchMultiGlobPath(patternList, uri) {\n    return matchSingleGlobPath(patternList, uri);\n}\n/**\n * @param  {String} pathFilterList ['/api', '/ajax']\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\n * @return {Boolean}\n */\nfunction matchMultiPath(pathFilterList, uri) {\n    let isMultiPath = false;\n    for (const context of pathFilterList) {\n        if (matchSingleStringPath(context, uri)) {\n            isMultiPath = true;\n            break;\n        }\n    }\n    return isMultiPath;\n}\n/**\n * Parses URI and returns RFC 3986 path\n *\n * @param  {String} uri from req.url\n * @return {String}     RFC 3986 path\n */\nfunction getUrlPathName(uri) {\n    return uri && url.parse(uri).pathname;\n}\nfunction isStringPath(pathFilter) {\n    return typeof pathFilter === 'string' && !isGlob(pathFilter);\n}\nfunction isGlobPath(pathFilter) {\n    return isGlob(pathFilter);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}