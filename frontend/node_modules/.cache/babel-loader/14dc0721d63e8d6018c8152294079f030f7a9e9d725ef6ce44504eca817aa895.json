{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Editor\\\\TourEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\n\n// Utilidad para obtener la URL absoluta de la imagen\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size / 2, size / 2 - 12);\n    ctx.lineTo(size / 2 + 10, size / 2 + 8);\n    ctx.lineTo(size / 2 - 10, size / 2 + 8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({\n    map: texture,\n    depthTest: false\n  });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\nfunction TourEditor({\n  tourId\n}) {\n  _s();\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  // Estado para transición cruzada\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5; // Invertir dirección horizontal\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Invertir la dirección del movimiento táctil (touch)\n    // Solo afecta a eventos touch, no mouse\n    renderer.domElement.addEventListener('touchmove', function (e) {\n      if (e.touches.length === 1 && controls.enabled) {\n        // Intercambiar el movimiento horizontal\n        // Simula el efecto de invertir el eje X\n        const touch = e.touches[0];\n        if (!controls._lastTouchX) controls._lastTouchX = touch.pageX;\n        if (!controls._lastTouchY) controls._lastTouchY = touch.pageY;\n        const deltaX = touch.pageX - controls._lastTouchX;\n        const deltaY = touch.pageY - controls._lastTouchY;\n        controls._lastTouchX = touch.pageX;\n        controls._lastTouchY = touch.pageY;\n        // Invertir deltaX\n        controls.rotateLeft(deltaX / renderer.domElement.clientWidth * controls.rotateSpeed * 2 * Math.PI * -1);\n        controls.rotateUp(deltaY / renderer.domElement.clientHeight * controls.rotateSpeed * 2 * Math.PI);\n        e.preventDefault();\n      }\n    }, {\n      passive: false\n    });\n    renderer.domElement.addEventListener('touchend', function () {\n      controls._lastTouchX = undefined;\n      controls._lastTouchY = undefined;\n    });\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (rendererRef.current && rendererRef.current.domElement && containerRef.current && containerRef.current.contains(rendererRef.current.domElement)) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (!tour || !sceneRef.current || !tour.scenes || !Array.isArray(tour.scenes) || tour.scenes.length === 0 || currentSceneIndex === -1 || !tour.scenes[currentSceneIndex]) return;\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n    textureLoader.load(imageUrl, texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n      if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n        texture.colorSpace = THREE.LinearSRGBColorSpace;\n      }\n      // Anisotropía para mayor nitidez\n      if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n        texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n      }\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n\n      // --- Renderizar Hotspots ---\n      hotspotSpritesRef.current = [];\n      if (Array.isArray(currentScene.hotspots)) {\n        currentScene.hotspots.forEach(hotspot => {\n          // Convertir pitch/yaw a coordenadas cartesianas\n          const radius = 500;\n          const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n          const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n          const x = radius * Math.sin(phi) * Math.sin(theta);\n          const y = radius * Math.cos(phi);\n          const z = radius * Math.sin(phi) * Math.cos(theta);\n          let obj3d;\n          if (hotspot.type === 'access') {\n            // Esfera 3D para access\n            const geometry = new THREE.SphereGeometry(12, 32, 32);\n            const material = new THREE.MeshStandardMaterial({\n              color: 0x38bdf8,\n              emissive: 0x0ea5e9,\n              metalness: 0.3,\n              roughness: 0.5\n            });\n            obj3d = new THREE.Mesh(geometry, material);\n            obj3d.userData.hotspot = hotspot;\n            obj3d.userData.isAccessHotspot = true;\n            accessSpheresRef.current.push(obj3d);\n          } else {\n            // Sprite para otros tipos\n            const size = 64;\n            const canvas = document.createElement('canvas');\n            canvas.width = size;\n            canvas.height = size;\n            const ctx = canvas.getContext('2d');\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2 - 4, 0, 2 * Math.PI);\n            ctx.fillStyle = '#38bdf8';\n            ctx.shadowColor = '#0ea5e9';\n            ctx.shadowBlur = 8;\n            ctx.fill();\n            ctx.lineWidth = 4;\n            ctx.strokeStyle = '#fff';\n            ctx.stroke();\n            const texture = new THREE.CanvasTexture(canvas);\n            const material = new THREE.SpriteMaterial({\n              map: texture,\n              depthTest: false\n            });\n            obj3d = new THREE.Sprite(material);\n            obj3d.scale.set(20, 20, 1);\n            obj3d.userData.hotspot = hotspot;\n          }\n          obj3d.position.set(x, y, z);\n          scene.add(obj3d);\n          hotspotSpritesRef.current.push(obj3d);\n        });\n      }\n    }, undefined, err => {\n      console.error('Error al cargar la textura:', err, imageUrl);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x444444,\n        side: THREE.DoubleSide\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere);\n    });\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // 1. Comparación de IDs como string en la navegación de hotspots\n    const doubleClickNavigateToAccessHotspot = hotspot => {\n      if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n        const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n        if (idx !== -1) {\n          startTransition(idx);\n        }\n      }\n    };\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            // doble click\n            doubleClickNavigateToAccessHotspot(obj.userData.hotspot);\n          }\n          lastClickTime = now;\n        } else if (obj.userData.hotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (fade) return; // Evitar doble trigger\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n    // Animar FOV (zoom in)\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 35;\n    let duration = 350;\n    let start = null;\n    function animateZoomIn(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomIn);\n      } else {\n        // Esperar un poco y luego cambiar escena\n        setTimeout(() => {\n          setCurrentSceneIndex(targetIdx);\n        }, 200);\n      }\n    }\n    requestAnimationFrame(animateZoomIn);\n  }\n\n  // Animar transición cruzada\n  useEffect(() => {\n    if (!transitioning) return;\n    let frame;\n    function animate() {\n      setTransitionProgress(prev => {\n        const next = Math.min(prev + 0.04, 1);\n        if (next < 1) {\n          frame = requestAnimationFrame(animate);\n        } else {\n          setTransitioning(false);\n          setPrevTexture(null);\n          setCurrentSceneIndex(pendingSceneIndex);\n        }\n        return next;\n      });\n    }\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }, [transitioning]);\n\n  // Modificar render de la escena para usar el shader durante la transición\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    // Crear geometría y materiales\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      // Material de transición\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      // Render loop\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async e => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        var _uploadRes$data;\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = ((_uploadRes$data = uploadRes.data) === null || _uploadRes$data === void 0 ? void 0 : _uploadRes$data.imageUrl) || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async files => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async hotspotData => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n    const handlePointerDown = event => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - phi * 180 / Math.PI;\n      const yaw = theta * 180 / Math.PI;\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = hotspotData => {\n    var _pendingHotspot$pitch, _pendingHotspot$yaw;\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: (_pendingHotspot$pitch = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch) !== null && _pendingHotspot$pitch !== void 0 ? _pendingHotspot$pitch : hotspotData.pitch,\n      yaw: (_pendingHotspot$yaw = pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw) !== null && _pendingHotspot$yaw !== void 0 ? _pendingHotspot$yaw : hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = event => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({\n        pitch,\n        yaw\n      });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async hotspotData => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = {\n        ...tour\n      };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async deleteIdx => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = {\n        ...tour,\n        scenes: updatedScenes\n      };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => {\n      window.handleDeleteScene = undefined;\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async hotspotIdx => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = {\n      ...updatedScenes[currentSceneIndex]\n    };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = {\n      ...tour,\n      scenes: updatedScenes\n    };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"three-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        open: panelOpen,\n        setOpen: setPanelOpen,\n        tour: tour,\n        handleDragDropImage: handleDragDropImage,\n        handleImageUpload: handleImageUpload,\n        scenes: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\",\n      onClick: handleSceneClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      open: panelOpen,\n      setOpen: setPanelOpen,\n      tour: tour,\n      handleDragDropImage: handleDragDropImage,\n      handleImageUpload: handleImageUpload,\n      scenes: tour.scenes,\n      currentSceneIndex: currentSceneIndex,\n      setCurrentSceneIndex: setCurrentSceneIndex,\n      setIsAddingHotspot: () => setPlacementMode(true),\n      onReturn: () => navigate('/hub'),\n      handleDeleteHotspot: handleDeleteHotspot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 7\n    }, this), (selectedHotspot || pendingHotspot) && /*#__PURE__*/_jsxDEV(HotspotEditor, {\n      hotspot: selectedHotspot || {\n        pitch: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.pitch,\n        yaw: pendingHotspot === null || pendingHotspot === void 0 ? void 0 : pendingHotspot.yaw\n      },\n      scenes: tour.scenes,\n      onSave: pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot,\n      onCancel: () => {\n        setSelectedHotspot(null);\n        setIsAddingHotspot(false);\n        setPendingHotspot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 9\n    }, this), showHotspotModal && newHotspotPosition && /*#__PURE__*/_jsxDEV(HotspotCreationModal, {\n      position: newHotspotPosition,\n      tour: tour,\n      currentSceneIndex: currentSceneIndex,\n      onSave: saveNewHotspot,\n      onCancel: () => {\n        setShowHotspotModal(false);\n        setNewHotspotPosition(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 730,\n    columnNumber: 5\n  }, this);\n}\n\n// Panel lateral plegable\n_s(TourEditor, \"6Gi6d2BDSAosOmxRwfqaHX6EQc8=\", false, function () {\n  return [useNavigate];\n});\n_c = TourEditor;\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `editor-panel${open ? ' open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"panel-title\",\n          children: \"Tour Virtual 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-toggle\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276E\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u276F\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-return-hub\",\n          onClick: onReturn,\n          style: {\n            background: '#23272f',\n            color: '#38bdf8',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 0',\n            fontSize: '1rem',\n            fontWeight: 500,\n            marginBottom: 18,\n            cursor: 'pointer',\n            width: '100%',\n            transition: 'background 0.2s, color 0.2s'\n          },\n          children: \"\\u2190 Volver al Hub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ApiKeyManager, {\n          tourId: tour._id,\n          initialApiKey: tour.apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Im\\xE1genes 360\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n            onFileUpload: handleDragDropImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-dragdrop-hint\",\n            children: \"o haz clic para seleccionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-upload\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Im\\xE1genes Cargadas (\", scenes.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this), scenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-empty\",\n            children: \"No hay im\\xE1genes cargadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-image-list\",\n            children: scenes.map((scene, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `panel-image-item${currentSceneIndex === idx ? ' active' : ''}`,\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  flex: 1,\n                  cursor: 'pointer'\n                },\n                onClick: () => setCurrentSceneIndex && setCurrentSceneIndex(idx),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: scene.image ? getAbsoluteImageUrl(scene.image) : '',\n                  alt: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: scene.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 849,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 23\n              }, this), scenes.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete-scene\",\n                style: {\n                  background: 'transparent',\n                  color: '#ef4444',\n                  border: 'none',\n                  marginLeft: 8,\n                  fontSize: 20,\n                  cursor: 'pointer'\n                },\n                title: \"Eliminar escena\",\n                onClick: e => {\n                  e.stopPropagation();\n                  if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                    if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                  }\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 25\n              }, this)]\n            }, scene._id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hotspots de la Escena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"panel-hotspot-list\",\n            children: scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n              let accessInfo = null;\n              if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n              }\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  gap: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [hotspot.type === 'access' ? 'Punto de Acceso' : hotspot.title || 'Hotspot', accessInfo && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#38bdf8',\n                      marginLeft: 8,\n                      fontSize: 13\n                    },\n                    children: accessInfo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 882,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: 'transparent',\n                    color: '#ef4444',\n                    border: 'none',\n                    fontSize: 18,\n                    cursor: 'pointer'\n                  },\n                  title: \"Eliminar hotspot\",\n                  onClick: () => {\n                    if (window.confirm('¿Eliminar este hotspot?')) handleDeleteHotspot(idx);\n                  },\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 23\n                }, this)]\n              }, hotspot._id || idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-section panel-hint\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Haz doble clic en un hotspot de tipo \\\"Acceso\\\" para navegar a la escena vinculada.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Usa Ctrl + clic para seleccionar m\\xFAltiples hotspots.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `editor-backdrop${open ? ' open' : ''}`,\n      onClick: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ControlPanel;\nexport default TourEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TourEditor\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","HotspotEditor","api","DragDrop","useNavigate","ApiKeyManager","HotspotCreationModal","RadialFadeMaterial","jsxDEV","_jsxDEV","Fragment","_Fragment","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","createHotspotSprite","hotspot","onClick","size","canvas","document","createElement","width","height","ctx","getContext","beginPath","arc","Math","PI","fillStyle","shadowColor","shadowBlur","fill","lineWidth","strokeStyle","stroke","type","moveTo","lineTo","closePath","texture","CanvasTexture","material","SpriteMaterial","map","depthTest","sprite","Sprite","scale","set","userData","isMobileDevice","test","navigator","userAgent","TourEditor","tourId","_s","containerRef","tour","setTour","currentSceneIndex","setCurrentSceneIndex","selectedHotspot","setSelectedHotspot","isAddingHotspot","setIsAddingHotspot","loading","setLoading","error","setError","panelOpen","setPanelOpen","pendingHotspot","setPendingHotspot","placementMode","setPlacementMode","newHotspotPosition","setNewHotspotPosition","showHotspotModal","setShowHotspotModal","navigate","fade","setFade","pendingSceneIndex","setPendingSceneIndex","transitioning","setTransitioning","transitionProgress","setTransitionProgress","prevTexture","setPrevTexture","sceneRef","cameraRef","rendererRef","controlsRef","hotspotSpritesRef","accessSpheresRef","fetchTour","response","getTour","data","err","console","current","domElement","contains","removeChild","dispose","firstChild","clientWidth","window","innerWidth","clientHeight","innerHeight","scene","Scene","camera","PerspectiveCamera","position","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","controls","enableDamping","dampingFactor","rotateSpeed","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","max","min","deltaY","updateProjectionMatrix","passive","touches","length","enabled","touch","_lastTouchX","pageX","_lastTouchY","pageY","deltaX","rotateLeft","rotateUp","undefined","animationId","animate","requestAnimationFrame","t","Date","now","forEach","sphere","sin","x","update","render","handleResize","w","h","aspect","removeEventListener","cancelAnimationFrame","scenes","Array","isArray","currentScene","children","remove","geometry","SphereGeometry","textureLoader","TextureLoader","imageUrl","load","minFilter","LinearFilter","magFilter","colorSpace","LinearSRGBColorSpace","capabilities","getMaxAnisotropy","anisotropy","MeshBasicMaterial","side","DoubleSide","Mesh","add","hotspots","radius","phi","MathUtils","degToRad","pitch","theta","yaw","y","cos","z","obj3d","MeshStandardMaterial","color","emissive","metalness","roughness","isAccessHotspot","push","dom","lastClickTime","doubleClickNavigateToAccessHotspot","targetSceneId","idx","findIndex","s","String","_id","startTransition","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","clientY","top","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","obj","object","targetIdx","startFov","endFov","duration","start","animateZoomIn","ts","progress","setTimeout","frame","prev","next","loader","nextTexture","renderTransition","uniforms","uProgress","value","animateZoomOut","handleImageUpload","files","target","from","File","file","_uploadRes$data","uploadRes","uploadImage","Error","newScene","name","updatedTour","savedTour","updateTour","alert","message","handleDragDropImage","handleSaveHotspot","hotspotData","updatedScenes","index","toString","handlePointerDown","vector","Vector3","unproject","camPos","dir","sub","normalize","acos","atan2","Number","toFixed","style","cursor","handleSaveHotspotWithCoords","_pendingHotspot$pitch","_pendingHotspot$yaw","handleSceneClick","point","radToDeg","saveNewHotspot","sceneId","addHotspot","newHotspot","refreshed","handleDeleteScene","deleteIdx","filter","_","newIndex","handleDeleteHotspot","hotspotIdx","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","ControlPanel","open","setOpen","onReturn","onSave","onCancel","_c","background","border","borderRadius","padding","fontSize","fontWeight","marginBottom","transition","initialApiKey","apiKey","onFileUpload","id","accept","onChange","display","alignItems","justifyContent","flex","src","alt","marginLeft","title","stopPropagation","confirm","accessInfo","find","gap","_c2","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Editor/TourEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport HotspotEditor from './HotspotEditor';\nimport api from '../../services/api';\nimport DragDrop from './DragDrop';\nimport { useNavigate } from 'react-router-dom';\nimport './TourEditor.css';\nimport ApiKeyManager from './ApiKeyManager';\nimport HotspotCreationModal from './HotspotCreationModal';\nimport RadialFadeMaterial from '../shaders/RadialFadeMaterial';\n\n// Utilidad para obtener la URL absoluta de la imagen\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction createHotspotSprite(hotspot, onClick) {\n  // Crear un canvas para el ícono visual\n  const size = 64;\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  const ctx = canvas.getContext('2d');\n  // Círculo azul claro\n  ctx.beginPath();\n  ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n  ctx.fillStyle = '#38bdf8';\n  ctx.shadowColor = '#0ea5e9';\n  ctx.shadowBlur = 8;\n  ctx.fill();\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = '#fff';\n  ctx.stroke();\n  // Icono de flecha si es access\n  if (hotspot.type === 'access') {\n    ctx.beginPath();\n    ctx.moveTo(size/2, size/2-12);\n    ctx.lineTo(size/2+10, size/2+8);\n    ctx.lineTo(size/2-10, size/2+8);\n    ctx.closePath();\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n  }\n  const texture = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(20, 20, 1); // tamaño visual\n  sprite.userData.hotspot = hotspot;\n  if (onClick) sprite.userData.onClick = onClick;\n  return sprite;\n}\n\nfunction isMobileDevice() {\n  return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n}\n\nfunction TourEditor({ tourId }) {\n  const containerRef = useRef();\n  const [tour, setTour] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [selectedHotspot, setSelectedHotspot] = useState(null);\n  const [isAddingHotspot, setIsAddingHotspot] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [panelOpen, setPanelOpen] = useState(true);\n  const [pendingHotspot, setPendingHotspot] = useState(null);\n  const [placementMode, setPlacementMode] = useState(false);\n  const [newHotspotPosition, setNewHotspotPosition] = useState(null);\n  const [showHotspotModal, setShowHotspotModal] = useState(false);\n  const navigate = useNavigate();\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  // Estado para transición cruzada\n  const [transitioning, setTransitioning] = useState(false);\n  const [transitionProgress, setTransitionProgress] = useState(0);\n  const [prevTexture, setPrevTexture] = useState(null);\n\n  // Referencias de Three.js\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  // Referencia a los sprites de hotspots\n  const hotspotSpritesRef = useRef([]);\n  // 1. Al guardar un nuevo hotspot, solo guarda el objeto de datos\n  const accessSpheresRef = useRef([]);\n\n  // Cargar tour desde la API\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar el tour');\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  // Inicializar Three.js\n  useEffect(() => {\n    if (!tour || loading) return;\n\n    // Limpiar canvas anterior si existe\n    if (rendererRef.current && rendererRef.current.domElement && containerRef.current) {\n      if (containerRef.current.contains(rendererRef.current.domElement)) {\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n      rendererRef.current.dispose();\n    }\n\n    // Eliminar cualquier canvas sobrante (por si acaso)\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Usar el tamaño del contenedor para el renderer\n    const width = containerRef.current.clientWidth || window.innerWidth;\n    const height = containerRef.current.clientHeight || window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 0.1);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x22232a, 1); // Fondo oscuro, pero no negro puro\n    containerRef.current.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = -0.5; // Invertir dirección horizontal\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    // Invertir la dirección del movimiento táctil (touch)\n    // Solo afecta a eventos touch, no mouse\n    renderer.domElement.addEventListener('touchmove', function(e) {\n      if (e.touches.length === 1 && controls.enabled) {\n        // Intercambiar el movimiento horizontal\n        // Simula el efecto de invertir el eje X\n        const touch = e.touches[0];\n        if (!controls._lastTouchX) controls._lastTouchX = touch.pageX;\n        if (!controls._lastTouchY) controls._lastTouchY = touch.pageY;\n        const deltaX = touch.pageX - controls._lastTouchX;\n        const deltaY = touch.pageY - controls._lastTouchY;\n        controls._lastTouchX = touch.pageX;\n        controls._lastTouchY = touch.pageY;\n        // Invertir deltaX\n        controls.rotateLeft((deltaX / renderer.domElement.clientWidth) * controls.rotateSpeed * 2 * Math.PI * -1);\n        controls.rotateUp((deltaY / renderer.domElement.clientHeight) * controls.rotateSpeed * 2 * Math.PI);\n        e.preventDefault();\n      }\n    }, { passive: false });\n    renderer.domElement.addEventListener('touchend', function() {\n      controls._lastTouchX = undefined;\n      controls._lastTouchY = undefined;\n    });\n\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    controlsRef.current = controls;\n\n    let animationId;\n    const animate = () => {\n      animationId = requestAnimationFrame(animate);\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheresRef.current && accessSpheresRef.current.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheresRef.current.forEach(sphere => {\n          const scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Responsivo al tamaño del contenedor\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const w = containerRef.current.clientWidth || window.innerWidth;\n      const h = containerRef.current.clientHeight || window.innerHeight;\n      camera.aspect = w / h;\n      camera.updateProjectionMatrix();\n      renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (animationId) cancelAnimationFrame(animationId);\n      if (\n        rendererRef.current &&\n        rendererRef.current.domElement &&\n        containerRef.current &&\n        containerRef.current.contains(rendererRef.current.domElement)\n      ) {\n        rendererRef.current.dispose();\n        containerRef.current.removeChild(rendererRef.current.domElement);\n      }\n    };\n  }, [tour, loading]);\n\n  // Cargar la escena current\n  useEffect(() => {\n    if (\n      !tour ||\n      !sceneRef.current ||\n      !tour.scenes ||\n      !Array.isArray(tour.scenes) ||\n      tour.scenes.length === 0 ||\n      currentSceneIndex === -1 ||\n      !tour.scenes[currentSceneIndex]\n    ) return;\n\n    const scene = sceneRef.current;\n    const currentScene = tour.scenes[currentSceneIndex];\n\n    // Limpiar escena anterior\n    while (scene.children.length > 0) {\n      scene.remove(scene.children[0]);\n    }\n    accessSpheresRef.current = [];\n\n    // Crear esfera para la imagen 360 con mayor calidad visual\n    const geometry = new THREE.SphereGeometry(500, 128, 96); // Más segmentos para suavidad\n    geometry.scale(-1, 1, 1);\n\n    const textureLoader = new THREE.TextureLoader();\n    let imageUrl = getAbsoluteImageUrl(currentScene.image);\n\n    textureLoader.load(\n      imageUrl,\n      texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        // Usar LinearSRGBColorSpace si está disponible, si no, omitir\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        // Anisotropía para mayor nitidez\n        if (rendererRef.current && rendererRef.current.capabilities.getMaxAnisotropy) {\n          texture.anisotropy = Math.min(16, rendererRef.current.capabilities.getMaxAnisotropy());\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // --- Renderizar Hotspots ---\n        hotspotSpritesRef.current = [];\n        if (Array.isArray(currentScene.hotspots)) {\n          currentScene.hotspots.forEach(hotspot => {\n            // Convertir pitch/yaw a coordenadas cartesianas\n            const radius = 500;\n            const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n            const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n            const x = radius * Math.sin(phi) * Math.sin(theta);\n            const y = radius * Math.cos(phi);\n            const z = radius * Math.sin(phi) * Math.cos(theta);\n            let obj3d;\n            if (hotspot.type === 'access') {\n              // Esfera 3D para access\n              const geometry = new THREE.SphereGeometry(12, 32, 32);\n              const material = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              obj3d = new THREE.Mesh(geometry, material);\n              obj3d.userData.hotspot = hotspot;\n              obj3d.userData.isAccessHotspot = true;\n              accessSpheresRef.current.push(obj3d);\n            } else {\n              // Sprite para otros tipos\n              const size = 64;\n              const canvas = document.createElement('canvas');\n              canvas.width = size;\n              canvas.height = size;\n              const ctx = canvas.getContext('2d');\n              ctx.beginPath();\n              ctx.arc(size/2, size/2, size/2-4, 0, 2*Math.PI);\n              ctx.fillStyle = '#38bdf8';\n              ctx.shadowColor = '#0ea5e9';\n              ctx.shadowBlur = 8;\n              ctx.fill();\n              ctx.lineWidth = 4;\n              ctx.strokeStyle = '#fff';\n              ctx.stroke();\n              const texture = new THREE.CanvasTexture(canvas);\n              const material = new THREE.SpriteMaterial({ map: texture, depthTest: false });\n              obj3d = new THREE.Sprite(material);\n              obj3d.scale.set(20, 20, 1);\n              obj3d.userData.hotspot = hotspot;\n            }\n            obj3d.position.set(x, y, z);\n            scene.add(obj3d);\n            hotspotSpritesRef.current.push(obj3d);\n          });\n        }\n      },\n      undefined,\n      err => {\n        console.error('Error al cargar la textura:', err, imageUrl);\n        const material = new THREE.MeshBasicMaterial({ color: 0x444444, side: THREE.DoubleSide });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n      }\n    );\n  }, [tour, currentSceneIndex]);\n\n  // --- Detección de clics en hotspots ---\n  useEffect(() => {\n    if (!rendererRef.current || !cameraRef.current || !sceneRef.current) return;\n    const dom = rendererRef.current.domElement;\n    let lastClickTime = 0;\n    // 1. Comparación de IDs como string en la navegación de hotspots\n    const doubleClickNavigateToAccessHotspot = (hotspot) => {\n      if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n        const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n        if (idx !== -1) {\n          startTransition(idx);\n        }\n      }\n    };\n    function onPointerDown(event) {\n      // Solo click izquierdo\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, cameraRef.current);\n      const intersects = raycaster.intersectObjects(hotspotSpritesRef.current || [], true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) { // doble click\n            doubleClickNavigateToAccessHotspot(obj.userData.hotspot);\n          }\n          lastClickTime = now;\n        } else if (obj.userData.hotspot) {\n          setSelectedHotspot(obj.userData.hotspot);\n        }\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    return () => {\n      dom.removeEventListener('pointerdown', onPointerDown);\n    };\n  }, [tour, currentSceneIndex]);\n\n  // Animación de transición\n  function startTransition(targetIdx) {\n    if (fade) return; // Evitar doble trigger\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n    // Animar FOV (zoom in)\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 35;\n    let duration = 350;\n    let start = null;\n    function animateZoomIn(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomIn);\n      } else {\n        // Esperar un poco y luego cambiar escena\n        setTimeout(() => {\n          setCurrentSceneIndex(targetIdx);\n        }, 200);\n      }\n    }\n    requestAnimationFrame(animateZoomIn);\n  }\n\n  // Animar transición cruzada\n  useEffect(() => {\n    if (!transitioning) return;\n    let frame;\n    function animate() {\n      setTransitionProgress(prev => {\n        const next = Math.min(prev + 0.04, 1);\n        if (next < 1) {\n          frame = requestAnimationFrame(animate);\n        } else {\n          setTransitioning(false);\n          setPrevTexture(null);\n          setCurrentSceneIndex(pendingSceneIndex);\n        }\n        return next;\n      });\n    }\n    animate();\n    return () => cancelAnimationFrame(frame);\n  }, [transitioning]);\n\n  // Modificar render de la escena para usar el shader durante la transición\n  useEffect(() => {\n    if (!sceneRef.current || !rendererRef.current || !cameraRef.current) return;\n    if (!transitioning || !prevTexture) return;\n    // Crear geometría y materiales\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const currentScene = tour.scenes[pendingSceneIndex];\n    const loader = new THREE.TextureLoader();\n    loader.load(getAbsoluteImageUrl(currentScene.image), nextTexture => {\n      // Material de transición\n      const material = RadialFadeMaterial(prevTexture, nextTexture, transitionProgress);\n      const sphere = new THREE.Mesh(geometry, material);\n      sceneRef.current.add(sphere);\n      // Render loop\n      function renderTransition() {\n        material.uniforms.uProgress.value = transitionProgress;\n        rendererRef.current.render(sceneRef.current, cameraRef.current);\n        if (transitioning) requestAnimationFrame(renderTransition);\n        else sceneRef.current.remove(sphere);\n      }\n      renderTransition();\n    });\n  }, [transitioning, transitionProgress]);\n\n  // Cuando cambia la escena, hacer fade out y zoom out\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  // Manejar subida de imágenes\n  const handleImageUpload = async (e) => {\n    let files = [];\n    if (e.target && e.target.files && e.target.files.length > 0) {\n      files = Array.from(e.target.files);\n    } else if (e instanceof File) {\n      files = [e];\n    } else if (Array.isArray(e)) {\n      files = e;\n    }\n    if (!files.length) return;\n    for (const file of files) {\n      try {\n        let uploadRes = await api.uploadImage(file);\n        let imageUrl = uploadRes.data?.imageUrl || uploadRes.imageUrl;\n        if (!imageUrl) {\n          throw new Error('No se recibió la URL de la imagen');\n        }\n        const newScene = {\n          name: `Escena ${tour.scenes.length + 1}`,\n          image: imageUrl,\n          hotspots: []\n        };\n        const updatedTour = {\n          ...tour,\n          scenes: [...tour.scenes, newScene]\n        };\n        const savedTour = await api.updateTour(tourId, updatedTour);\n        setTour(savedTour.data ? savedTour.data : savedTour);\n        setCurrentSceneIndex(updatedTour.scenes.length - 1);\n      } catch (err) {\n        console.error('Error subiendo imagen:', err);\n        alert(`Error al subir imagen: ${err.error || err.message || 'Intente nuevamente'}`);\n      }\n    }\n  };\n\n  // Manejar subida de imágenes (DragDrop)\n  const handleDragDropImage = async (files) => {\n    if (Array.isArray(files)) {\n      for (const file of files) {\n        await handleImageUpload(file);\n      }\n    } else {\n      await handleImageUpload(files);\n    }\n  };\n\n  // Guardar hotspot\n  const handleSaveHotspot = async (hotspotData) => {\n    try {\n      const updatedScenes = [...tour.scenes];\n      const currentScene = updatedScenes[currentSceneIndex];\n\n      if (hotspotData._id) {\n        const index = currentScene.hotspots.findIndex(h => h._id === hotspotData._id);\n        if (index !== -1) {\n          currentScene.hotspots[index] = hotspotData;\n        }\n      } else {\n        currentScene.hotspots.push({\n          ...hotspotData,\n          _id: Date.now().toString()\n        });\n      }\n\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      await api.updateTour(tourId, updatedTour);\n      // Recarga el tour desde la API para asegurar sincronización\n      const response = await api.getTour(tourId);\n      setTour(response.data ? response.data : response);\n      setSelectedHotspot(null);\n      setIsAddingHotspot(false);\n    } catch (err) {\n      console.error('Error guardando hotspot:', err);\n      alert(`Error al guardar: ${err.error || 'Intente nuevamente'}`);\n    }\n  };\n\n  // Manejar click en la esfera para añadir hotspot SOLO cuando isAddingHotspot es true\n  useEffect(() => {\n    if (!isAddingHotspot || !rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n\n    const handlePointerDown = (event) => {\n      // Solo permitir click izquierdo\n      if (event.button !== 0) return;\n\n      // Evitar que el panel de control capture el click\n      if (event.target !== rendererRef.current.domElement) return;\n\n      // Obtener posición del click relativo al canvas\n      const rect = rendererRef.current.domElement.getBoundingClientRect();\n      const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      // Vector 3D en la dirección de la cámara\n      const vector = new THREE.Vector3(x, y, 0.5).unproject(cameraRef.current);\n\n      // Convertir a coordenadas esféricas (pitch/yaw)\n      const camPos = cameraRef.current.position;\n      const dir = vector.sub(camPos).normalize();\n      const phi = Math.acos(dir.y); // [0, PI]\n      const theta = Math.atan2(dir.x, dir.z); // [-PI, PI]\n\n      // Convertir a grados\n      const pitch = 90 - (phi * 180 / Math.PI);\n      const yaw = theta * 180 / Math.PI;\n\n      setPendingHotspot({\n        pitch: Number(pitch.toFixed(2)),\n        yaw: Number(yaw.toFixed(2))\n      });\n      setIsAddingHotspot(false);\n    };\n\n    const dom = rendererRef.current.domElement;\n    dom.style.cursor = 'crosshair';\n    dom.addEventListener('pointerdown', handlePointerDown);\n\n    return () => {\n      dom.style.cursor = '';\n      dom.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [isAddingHotspot, rendererRef, sceneRef, cameraRef]);\n\n  // Nuevo: Guardar hotspot con pitch/yaw del click\n  const handleSaveHotspotWithCoords = (hotspotData) => {\n    handleSaveHotspot({\n      ...hotspotData,\n      pitch: pendingHotspot?.pitch ?? hotspotData.pitch,\n      yaw: pendingHotspot?.yaw ?? hotspotData.yaw\n    });\n    setPendingHotspot(null);\n  };\n\n  // Nuevo: Manejar click en la escena para colocar hotspot\n  const handleSceneClick = (event) => {\n    if (!placementMode) return;\n    // Obtener coordenadas del ratón normalizadas\n    const mouse = new THREE.Vector2();\n    const rect = containerRef.current.getBoundingClientRect();\n    mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cameraRef.current);\n\n    // Intersectar con la esfera (único mesh en la escena)\n    const intersects = raycaster.intersectObjects(sceneRef.current.children);\n    if (intersects.length > 0) {\n      const point = intersects[0].point;\n      const radius = 500;\n      const phi = Math.acos(point.y / radius);\n      const theta = Math.atan2(point.x, point.z); // x primero, z segundo\n      const pitch = 90 - THREE.MathUtils.radToDeg(phi);\n      const yaw = THREE.MathUtils.radToDeg(theta);\n      setNewHotspotPosition({ pitch, yaw });\n      setShowHotspotModal(true);\n      setPlacementMode(false);\n    }\n  };\n\n  // Guardar el nuevo hotspot usando el endpoint REST\n  const saveNewHotspot = async (hotspotData) => {\n    try {\n      if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n      const sceneId = tour.scenes[currentSceneIndex]._id;\n      const response = await api.addHotspot(tour._id, sceneId, hotspotData);\n      // Solo guardar el objeto de datos, no la respuesta completa\n      const newHotspot = response.data ? response.data : response;\n      const updatedTour = { ...tour };\n      updatedTour.scenes = [...updatedTour.scenes];\n      const scene = updatedTour.scenes[currentSceneIndex];\n      scene.hotspots = [...scene.hotspots, newHotspot];\n      setTour(updatedTour);\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n      // Recarga el tour desde la API para asegurar sincronización\n      const refreshed = await api.getTour(tourId);\n      setTour(refreshed.data ? refreshed.data : refreshed);\n    } catch (error) {\n      alert('Error al guardar el hotspot');\n      setShowHotspotModal(false);\n      setNewHotspotPosition(null);\n    }\n  };\n\n  // Reemplaza la función handleDeleteScene global para aceptar el índice de la escena a eliminar\n  useEffect(() => {\n    window.handleDeleteScene = async (deleteIdx) => {\n      if (!tour || !tour.scenes || tour.scenes.length <= 1) return;\n      const updatedScenes = tour.scenes.filter((_, idx) => idx !== deleteIdx);\n      let newIndex = currentSceneIndex;\n      if (deleteIdx === currentSceneIndex) {\n        newIndex = deleteIdx === 0 ? 0 : deleteIdx - 1;\n      } else if (deleteIdx < currentSceneIndex) {\n        newIndex = currentSceneIndex - 1;\n      }\n      const updatedTour = { ...tour, scenes: updatedScenes };\n      setTour(updatedTour);\n      setCurrentSceneIndex(newIndex);\n      await api.updateTour(tour._id, updatedTour);\n    };\n    return () => { window.handleDeleteScene = undefined; };\n  }, [tour, currentSceneIndex]);\n\n  // 1. Función para eliminar hotspot de la escena actual\n  const handleDeleteHotspot = async (hotspotIdx) => {\n    if (!tour || !tour.scenes || !tour.scenes[currentSceneIndex]) return;\n    const updatedScenes = [...tour.scenes];\n    const scene = { ...updatedScenes[currentSceneIndex] };\n    scene.hotspots = scene.hotspots.filter((_, idx) => idx !== hotspotIdx);\n    updatedScenes[currentSceneIndex] = scene;\n    const updatedTour = { ...tour, scenes: updatedScenes };\n    setTour(updatedTour);\n    await api.updateTour(tour._id, updatedTour);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Cargando tour...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  // Si no hay escenas, muestra mensaje amigable y área de drag & drop\n  if (!tour.scenes || tour.scenes.length === 0) {\n    return (\n      <div className=\"tour-editor\">\n        <div ref={containerRef} className=\"three-container\" />\n        <ControlPanel\n          open={panelOpen}\n          setOpen={setPanelOpen}\n          tour={tour}\n          handleDragDropImage={handleDragDropImage}\n          handleImageUpload={handleImageUpload}\n          scenes={[]}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tour-editor\">\n      <div\n        ref={containerRef}\n        className=\"three-container\"\n        onClick={handleSceneClick}\n      />\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      <ControlPanel\n        open={panelOpen}\n        setOpen={setPanelOpen}\n        tour={tour}\n        handleDragDropImage={handleDragDropImage}\n        handleImageUpload={handleImageUpload}\n        scenes={tour.scenes}\n        currentSceneIndex={currentSceneIndex}\n        setCurrentSceneIndex={setCurrentSceneIndex}\n        setIsAddingHotspot={() => setPlacementMode(true)}\n        onReturn={() => navigate('/hub')}\n        handleDeleteHotspot={handleDeleteHotspot}\n      />\n      {(selectedHotspot || pendingHotspot) && (\n        <HotspotEditor\n          hotspot={selectedHotspot || { pitch: pendingHotspot?.pitch, yaw: pendingHotspot?.yaw }}\n          scenes={tour.scenes}\n          onSave={pendingHotspot ? handleSaveHotspotWithCoords : handleSaveHotspot}\n          onCancel={() => {\n            setSelectedHotspot(null);\n            setIsAddingHotspot(false);\n            setPendingHotspot(null);\n          }}\n        />\n      )}\n      {showHotspotModal && newHotspotPosition && (\n        <HotspotCreationModal\n          position={newHotspotPosition}\n          tour={tour}\n          currentSceneIndex={currentSceneIndex}\n          onSave={saveNewHotspot}\n          onCancel={() => {\n            setShowHotspotModal(false);\n            setNewHotspotPosition(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Panel lateral plegable\nfunction ControlPanel({\n  open,\n  setOpen,\n  tour,\n  handleDragDropImage,\n  handleImageUpload,\n  scenes,\n  currentSceneIndex,\n  setCurrentSceneIndex,\n  setIsAddingHotspot,\n  onReturn,\n  handleDeleteHotspot\n}) {\n  return (\n    <>\n      <aside className={`editor-panel${open ? ' open' : ''}`}>\n        <div className=\"panel-header\">\n          <span className=\"panel-title\">Tour Virtual 360°</span>\n          <button className=\"panel-toggle\" onClick={() => setOpen(!open)}>\n            {open ? <>&#10094;</> : <>&#10095;</>}\n          </button>\n        </div>\n        {open && (\n          <div className=\"panel-content\">\n            <button\n              className=\"btn-return-hub\"\n              onClick={onReturn}\n              style={{\n                background: '#23272f',\n                color: '#38bdf8',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 0',\n                fontSize: '1rem',\n                fontWeight: 500,\n                marginBottom: 18,\n                cursor: 'pointer',\n                width: '100%',\n                transition: 'background 0.2s, color 0.2s'\n              }}\n            >\n              ← Volver al Hub\n            </button>\n            <ApiKeyManager tourId={tour._id} initialApiKey={tour.apiKey} />\n            <div className=\"panel-section\">\n              <h3>Imágenes 360°</h3>\n              <DragDrop onFileUpload={handleDragDropImage} />\n              <div className=\"panel-dragdrop-hint\">o haz clic para seleccionar</div>\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                style={{ display: 'none' }}\n              />\n            </div>\n            <div className=\"panel-section\">\n              <h3>Imágenes Cargadas ({scenes.length})</h3>\n              {scenes.length === 0 ? (\n                <div className=\"panel-empty\">No hay imágenes cargadas</div>\n              ) : (\n                <ul className=\"panel-image-list\">\n                  {scenes.map((scene, idx) => (\n                    <li\n                      key={scene._id || idx}\n                      className={`panel-image-item${currentSceneIndex === idx ? ' active' : ''}`}\n                      style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center', flex: 1, cursor: 'pointer' }} onClick={() => setCurrentSceneIndex && setCurrentSceneIndex(idx)}>\n                        <img src={scene.image ? getAbsoluteImageUrl(scene.image) : ''} alt={scene.name} />\n                        <span>{scene.name}</span>\n                      </div>\n                      {scenes.length > 1 && (\n                        <button\n                          className=\"btn-delete-scene\"\n                          style={{ background: 'transparent', color: '#ef4444', border: 'none', marginLeft: 8, fontSize: 20, cursor: 'pointer' }}\n                          title=\"Eliminar escena\"\n                          onClick={e => {\n                            e.stopPropagation();\n                            if (window.confirm('¿Seguro que deseas eliminar esta escena?')) {\n                              if (typeof window.handleDeleteScene === 'function') window.handleDeleteScene(idx);\n                            }\n                          }}\n                        >\n                          🗑️\n                        </button>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            <div className=\"panel-section\">\n              <h3>Hotspots de la Escena</h3>\n              <ul className=\"panel-hotspot-list\">\n                {scenes[currentSceneIndex].hotspots.map((hotspot, idx) => {\n                  let accessInfo = null;\n                  if (hotspot.type === 'access' && hotspot.targetSceneId) {\n                    const target = scenes.find(s => String(s._id) === String(hotspot.targetSceneId));\n                    accessInfo = target ? `→ ${target.name}` : '→ [Escena no encontrada]';\n                  }\n                  return (\n                    <li key={hotspot._id || idx} style={{display:'flex',alignItems:'center',justifyContent:'space-between',gap:8}}>\n                      <span>\n                        {hotspot.type === 'access' ? 'Punto de Acceso' : (hotspot.title || 'Hotspot')}\n                        {accessInfo && <span style={{color:'#38bdf8',marginLeft:8,fontSize:13}}>{accessInfo}</span>}\n                      </span>\n                      <button style={{background:'transparent',color:'#ef4444',border:'none',fontSize:18,cursor:'pointer'}} title=\"Eliminar hotspot\" onClick={()=>{if(window.confirm('¿Eliminar este hotspot?'))handleDeleteHotspot(idx)}}>🗑️</button>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n            <div className=\"panel-section panel-hint\">\n              <p>Haz doble clic en un hotspot de tipo \"Acceso\" para navegar a la escena vinculada.</p>\n              <p>Usa Ctrl + clic para seleccionar múltiples hotspots.</p>\n            </div>\n          </div>\n        )}\n      </aside>\n      <div className={`editor-backdrop${open ? ' open' : ''}`} onClick={() => setOpen(false)} />\n    </>\n  );\n}\n\nexport default TourEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}