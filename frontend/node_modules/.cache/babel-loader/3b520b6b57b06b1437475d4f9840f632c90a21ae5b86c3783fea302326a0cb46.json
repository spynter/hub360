{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\TourViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    var _process$env$REACT_AP;\n    return `${((_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')) || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\nfunction TourViewer() {\n  _s();\n  const {\n    tourId\n  } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  // 1. Precarga de texturas al cargar el tour\n  const [sceneTextures, setSceneTextures] = useState({});\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n  useEffect(() => {\n    if (!tour || !tour.scenes) return;\n    const loader = new THREE.TextureLoader();\n    const textures = {};\n    let loaded = 0;\n    tour.scenes.forEach((scene, idx) => {\n      loader.load(getAbsoluteImageUrl(scene.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        textures[idx] = texture;\n        loaded++;\n        if (loaded === tour.scenes.length) {\n          setSceneTextures(textures);\n        }\n      }, undefined, () => {\n        loaded++;\n        if (loaded === tour.scenes.length) {\n          setSceneTextures(textures);\n        }\n      });\n    });\n  }, [tour]);\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', e => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, {\n      passive: false\n    });\n\n    // Cargar escena actual\n    const loadScene = index => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({\n                color: 0x38bdf8,\n                emissive: 0x0ea5e9,\n                metalness: 0.3,\n                roughness: 0.5\n              });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                // Iniciar animación de transición\n                startTransition(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2((event.clientX - rect.left) / rect.width * 2 - 1, -((event.clientY - rect.top) / rect.height) * 2 + 1);\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement) containerRef.current.removeChild(renderer.domElement);\n      }\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 2. Cross-fade y zoom in/out en la transición de escenas\n  function startTransition(targetIdx) {\n    if (fade) return;\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 35;\n    let duration = 350;\n    let start = null;\n    function animateZoomIn(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomIn);\n      } else {\n        // Precargar textura nueva\n        const nextTexture = sceneTextures[pendingSceneIndex !== null ? pendingSceneIndex : targetIdx];\n        const prevTexture = sceneTextures[currentSceneIndex];\n        if (nextTexture && prevTexture) {\n          crossFadeTextures(prevTexture, nextTexture, () => {\n            setCurrentSceneIndex(targetIdx);\n          });\n        } else {\n          setCurrentSceneIndex(targetIdx);\n        }\n      }\n    }\n    requestAnimationFrame(animateZoomIn);\n  }\n\n  // Cross-fade entre dos texturas\n  function crossFadeTextures(prevTexture, nextTexture, onComplete) {\n    const scene = sceneRef.current;\n    // Limpiar escena\n    while (scene.children.length > 0) scene.remove(scene.children[0]);\n    // Geometría\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    // Materiales con transparencia\n    const prevMaterial = new THREE.MeshBasicMaterial({\n      map: prevTexture,\n      side: THREE.DoubleSide,\n      transparent: true,\n      opacity: 1\n    });\n    const nextMaterial = new THREE.MeshBasicMaterial({\n      map: nextTexture,\n      side: THREE.DoubleSide,\n      transparent: true,\n      opacity: 0\n    });\n    const prevSphere = new THREE.Mesh(geometry, prevMaterial);\n    const nextSphere = new THREE.Mesh(geometry, nextMaterial);\n    scene.add(prevSphere);\n    scene.add(nextSphere);\n    // Animar opacidad\n    let duration = 400;\n    let start = null;\n    function animateFade(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      prevMaterial.opacity = 1 - progress;\n      nextMaterial.opacity = progress;\n      if (progress < 1) {\n        requestAnimationFrame(animateFade);\n      } else {\n        scene.remove(prevSphere);\n        onComplete && onComplete();\n      }\n    }\n    requestAnimationFrame(animateFade);\n  }\n\n  // 3. Cuando cambia la escena, hacer fade out y zoom out (mantener igual)\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-loading\",\n      children: \"Cargando tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer-error\",\n      children: \"Tour no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tour-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"three-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fade-overlay${fade ? ' visible' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-return\",\n      onClick: () => navigate('/'),\n      children: \"Volver al mapa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s(TourViewer, \"k0LTwZJjHwSfpbsFwp6RppFckJk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TourViewer;\nexport default TourViewer;\nvar _c;\n$RefreshReg$(_c, \"TourViewer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","api","useParams","useNavigate","jsxDEV","_jsxDEV","getAbsoluteImageUrl","image","startsWith","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","TourViewer","_s","tourId","tour","setTour","loading","setLoading","error","setError","currentSceneIndex","setCurrentSceneIndex","fade","setFade","pendingSceneIndex","setPendingSceneIndex","containerRef","navigate","cameraRef","sceneTextures","setSceneTextures","fetchTour","response","getTour","data","err","scenes","loader","TextureLoader","textures","loaded","forEach","scene","idx","load","texture","minFilter","LinearFilter","magFilter","colorSpace","undefined","LinearSRGBColorSpace","length","current","firstChild","removeChild","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableDamping","dampingFactor","enableZoom","minDistance","maxDistance","addEventListener","e","preventDefault","fov","Math","max","min","deltaY","updateProjectionMatrix","passive","loadScene","index","children","remove","sceneData","geometry","SphereGeometry","scale","textureLoader","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","Array","isArray","hotspots","hotspot","type","radius","phi","MathUtils","degToRad","pitch","theta","yaw","x","sin","y","cos","z","hGeo","hMat","MeshStandardMaterial","color","emissive","metalness","roughness","hMesh","userData","isAccessHotspot","hoveredObj","animate","requestAnimationFrame","accessSpheres","traverse","obj","push","t","Date","now","update","render","lastClickTime","dom","getAccessSpheres","arr","onPointerDown","event","button","rect","getBoundingClientRect","mouse","Vector2","clientX","left","width","clientY","top","height","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","object","targetSceneId","findIndex","s","String","_id","startTransition","onPointerMove","style","cursor","handleResize","aspect","removeEventListener","dispose","targetIdx","startFov","endFov","duration","start","animateZoomIn","ts","progress","nextTexture","prevTexture","crossFadeTextures","onComplete","sceneRef","prevMaterial","transparent","opacity","nextMaterial","prevSphere","nextSphere","animateFade","animateZoomOut","setTimeout","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/TourViewer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport api from '../../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './TourViewer.css';\n\nfunction getAbsoluteImageUrl(image) {\n  if (!image) return '';\n  if (image.startsWith('/uploads/')) {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '') || 'http://localhost:5000'}${image}`;\n  }\n  return image;\n}\n\nfunction TourViewer() {\n  const { tourId } = useParams();\n  const [tour, setTour] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [fade, setFade] = useState(false);\n  const [pendingSceneIndex, setPendingSceneIndex] = useState(null);\n  const containerRef = useRef();\n  const navigate = useNavigate();\n  const cameraRef = useRef();\n  // 1. Precarga de texturas al cargar el tour\n  const [sceneTextures, setSceneTextures] = useState({});\n\n  useEffect(() => {\n    const fetchTour = async () => {\n      try {\n        const response = await api.getTour(tourId);\n        setTour(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('No se pudo cargar el tour');\n        setLoading(false);\n      }\n    };\n    fetchTour();\n  }, [tourId]);\n\n  useEffect(() => {\n    if (!tour || !tour.scenes) return;\n    const loader = new THREE.TextureLoader();\n    const textures = {};\n    let loaded = 0;\n    tour.scenes.forEach((scene, idx) => {\n      loader.load(\n        getAbsoluteImageUrl(scene.image),\n        texture => {\n          texture.minFilter = THREE.LinearFilter;\n          texture.magFilter = THREE.LinearFilter;\n          if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n            texture.colorSpace = THREE.LinearSRGBColorSpace;\n          }\n          textures[idx] = texture;\n          loaded++;\n          if (loaded === tour.scenes.length) {\n            setSceneTextures(textures);\n          }\n        },\n        undefined,\n        () => {\n          loaded++;\n          if (loaded === tour.scenes.length) {\n            setSceneTextures(textures);\n          }\n        }\n      );\n    });\n  }, [tour]);\n\n  useEffect(() => {\n    if (!tour || !tour.scenes || tour.scenes.length === 0) return;\n\n    // Limpiar canvas anterior si existe\n    if (containerRef.current) {\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n    }\n\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    // Soporte de zoom con scroll del mouse\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    // Limitar fov para evitar zoom extremo\n    renderer.domElement.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      camera.fov = Math.max(30, Math.min(100, camera.fov + (e.deltaY > 0 ? 2 : -2)));\n      camera.updateProjectionMatrix();\n    }, { passive: false });\n\n    // Cargar escena actual\n    const loadScene = (index) => {\n      // Limpiar escena\n      while (scene.children.length > 0) {\n        scene.remove(scene.children[0]);\n      }\n      const sceneData = tour.scenes[index];\n      const geometry = new THREE.SphereGeometry(500, 128, 96);\n      geometry.scale(-1, 1, 1);\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load(getAbsoluteImageUrl(sceneData.image), texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Renderizar hotspots de acceso\n        if (Array.isArray(sceneData.hotspots)) {\n          sceneData.hotspots.forEach(hotspot => {\n            if (hotspot.type === 'access') {\n              const radius = 500;\n              const phi = THREE.MathUtils.degToRad(90 - hotspot.pitch);\n              const theta = THREE.MathUtils.degToRad(hotspot.yaw);\n              const x = radius * Math.sin(phi) * Math.sin(theta);\n              const y = radius * Math.cos(phi);\n              const z = radius * Math.sin(phi) * Math.cos(theta);\n              const hGeo = new THREE.SphereGeometry(12, 32, 32);\n              const hMat = new THREE.MeshStandardMaterial({ color: 0x38bdf8, emissive: 0x0ea5e9, metalness: 0.3, roughness: 0.5 });\n              const hMesh = new THREE.Mesh(hGeo, hMat);\n              hMesh.position.set(x, y, z);\n              hMesh.userData.hotspot = hotspot;\n              hMesh.userData.isAccessHotspot = true;\n              scene.add(hMesh);\n            }\n          });\n        }\n      });\n    };\n\n    loadScene(currentSceneIndex);\n\n    // Animación y hover\n    let hoveredObj = null;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      // Recalcular accessSpheres en cada frame\n      const accessSpheres = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) accessSpheres.push(obj);\n      });\n      // Animación de expansión/contracción para esferas access\n      if (accessSpheres.length > 0) {\n        const t = Date.now() * 0.003;\n        accessSpheres.forEach(sphere => {\n          let scale = 1.1 + 0.15 * Math.sin(t + sphere.position.x);\n          if (sphere === hoveredObj) scale *= 1.25; // resalta al hacer hover\n          sphere.scale.set(scale, scale, scale);\n        });\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Doble click para navegar entre escenas\n    let lastClickTime = 0;\n    const dom = renderer.domElement;\n    function getAccessSpheres() {\n      const arr = [];\n      scene.traverse(obj => {\n        if (obj.userData && obj.userData.isAccessHotspot) arr.push(obj);\n      });\n      return arr;\n    }\n    function onPointerDown(event) {\n      if (event.button !== 0) return;\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        const now = Date.now();\n        if (obj.userData.isAccessHotspot) {\n          if (now - lastClickTime < 400) {\n            const hotspot = obj.userData.hotspot;\n            if (hotspot && hotspot.type === 'access' && hotspot.targetSceneId) {\n              const idx = tour.scenes.findIndex(s => String(s._id) === String(hotspot.targetSceneId));\n              if (idx !== -1) {\n                // Iniciar animación de transición\n                startTransition(idx);\n              }\n            }\n          }\n          lastClickTime = now;\n        }\n      }\n    }\n    function onPointerMove(event) {\n      const rect = dom.getBoundingClientRect();\n      const mouse = new THREE.Vector2(\n        ((event.clientX - rect.left) / rect.width) * 2 - 1,\n        -((event.clientY - rect.top) / rect.height) * 2 + 1\n      );\n      const raycaster = new THREE.Raycaster();\n      const accessSpheres = getAccessSpheres();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(accessSpheres, true);\n      if (intersects.length > 0) {\n        hoveredObj = intersects[0].object;\n        dom.style.cursor = 'pointer';\n      } else {\n        hoveredObj = null;\n        dom.style.cursor = '';\n      }\n    }\n    dom.addEventListener('pointerdown', onPointerDown);\n    dom.addEventListener('pointermove', onPointerMove);\n\n    // Manejar redimensionamiento\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Limpieza\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      dom.removeEventListener('pointerdown', onPointerDown);\n      dom.removeEventListener('pointermove', onPointerMove);\n      if (renderer) {\n        renderer.dispose();\n        if (containerRef.current && renderer.domElement)\n          containerRef.current.removeChild(renderer.domElement);\n      }\n    };\n  }, [tour, currentSceneIndex]);\n\n  // 2. Cross-fade y zoom in/out en la transición de escenas\n  function startTransition(targetIdx) {\n    if (fade) return;\n    setFade(true);\n    setPendingSceneIndex(targetIdx);\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 35;\n    let duration = 350;\n    let start = null;\n    function animateZoomIn(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomIn);\n      } else {\n        // Precargar textura nueva\n        const nextTexture = sceneTextures[pendingSceneIndex !== null ? pendingSceneIndex : targetIdx];\n        const prevTexture = sceneTextures[currentSceneIndex];\n        if (nextTexture && prevTexture) {\n          crossFadeTextures(prevTexture, nextTexture, () => {\n            setCurrentSceneIndex(targetIdx);\n          });\n        } else {\n          setCurrentSceneIndex(targetIdx);\n        }\n      }\n    }\n    requestAnimationFrame(animateZoomIn);\n  }\n\n  // Cross-fade entre dos texturas\n  function crossFadeTextures(prevTexture, nextTexture, onComplete) {\n    const scene = sceneRef.current;\n    // Limpiar escena\n    while (scene.children.length > 0) scene.remove(scene.children[0]);\n    // Geometría\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    // Materiales con transparencia\n    const prevMaterial = new THREE.MeshBasicMaterial({ map: prevTexture, side: THREE.DoubleSide, transparent: true, opacity: 1 });\n    const nextMaterial = new THREE.MeshBasicMaterial({ map: nextTexture, side: THREE.DoubleSide, transparent: true, opacity: 0 });\n    const prevSphere = new THREE.Mesh(geometry, prevMaterial);\n    const nextSphere = new THREE.Mesh(geometry, nextMaterial);\n    scene.add(prevSphere);\n    scene.add(nextSphere);\n    // Animar opacidad\n    let duration = 400;\n    let start = null;\n    function animateFade(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      prevMaterial.opacity = 1 - progress;\n      nextMaterial.opacity = progress;\n      if (progress < 1) {\n        requestAnimationFrame(animateFade);\n      } else {\n        scene.remove(prevSphere);\n        onComplete && onComplete();\n      }\n    }\n    requestAnimationFrame(animateFade);\n  }\n\n  // 3. Cuando cambia la escena, hacer fade out y zoom out (mantener igual)\n  useEffect(() => {\n    if (pendingSceneIndex === null) return;\n    // Animar FOV (zoom out) y quitar fade\n    const camera = cameraRef.current;\n    if (!camera) return;\n    let startFov = camera.fov;\n    let endFov = 75;\n    let duration = 400;\n    let start = null;\n    function animateZoomOut(ts) {\n      if (!start) start = ts;\n      let progress = Math.min((ts - start) / duration, 1);\n      camera.fov = startFov + (endFov - startFov) * progress;\n      camera.updateProjectionMatrix();\n      if (progress < 1) {\n        requestAnimationFrame(animateZoomOut);\n      } else {\n        setFade(false);\n        setPendingSceneIndex(null);\n      }\n    }\n    setTimeout(() => {\n      requestAnimationFrame(animateZoomOut);\n    }, 250);\n  }, [currentSceneIndex]);\n\n  if (loading) {\n    return <div className=\"viewer-loading\">Cargando tour...</div>;\n  }\n  if (error) {\n    return <div className=\"viewer-error\">{error}</div>;\n  }\n  if (!tour) {\n    return <div className=\"viewer-error\">Tour no encontrado</div>;\n  }\n\n  return (\n    <div className=\"tour-viewer-container\">\n      <div ref={containerRef} className=\"three-container\"></div>\n      <div className={`fade-overlay${fade ? ' visible' : ''}`}></div>\n      {/* Eliminar la sección de scene-selector para que no haya botones de navegación */}\n      <button className=\"btn-return\" onClick={() => navigate('/')}>Volver al mapa</button>\n    </div>\n  );\n}\n\nexport default TourViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}