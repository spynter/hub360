{"ast":null,"code":"var _jsxFileName = \"D:\\\\respaldo jose\\\\PROJECTS_V0\\\\hub360\\\\frontend\\\\src\\\\components\\\\Viewer\\\\GyroscopeTest.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport './GyroscopeTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GyroscopeTest() {\n  _s();\n  const navigate = useNavigate();\n  const containerRef = useRef();\n  const cameraRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const controlsRef = useRef();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  useEffect(() => {\n    // Configuración de Three.js\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 0.1);\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n    if (containerRef.current) {\n      containerRef.current.appendChild(renderer.domElement);\n    }\n\n    // Controles de órbita para desktop\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.enableZoom = true;\n    controls.minDistance = 0.05;\n    controls.maxDistance = 2.5;\n    controlsRef.current = controls;\n\n    // Cargar imagen 360\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\n    geometry.scale(-1, 1, 1);\n    const textureLoader = new THREE.TextureLoader();\n\n    // Función para cargar imagen con fallback\n    const loadImage = () => {\n      textureLoader.load('/brandshop1.jpg', texture => {\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        texture.generateMipmaps = false;\n        if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\n          texture.colorSpace = THREE.LinearSRGBColorSpace;\n        }\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n        setImageLoaded(true);\n      }, undefined, error => {\n        // Crear una textura procedural como fallback\n        const canvas = document.createElement('canvas');\n        canvas.width = 1024;\n        canvas.height = 512;\n        const ctx = canvas.getContext('2d');\n\n        // Crear un patrón de gradiente para simular una imagen 360\n        const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n        gradient.addColorStop(0, '#1e40af');\n        gradient.addColorStop(0.25, '#38bdf8');\n        gradient.addColorStop(0.5, '#818cf8');\n        gradient.addColorStop(0.75, '#38bdf8');\n        gradient.addColorStop(1, '#1e40af');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Agregar texto indicativo\n        ctx.fillStyle = 'white';\n        ctx.font = '48px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('Vista de Prueba 360°', canvas.width / 2, canvas.height / 2);\n        ctx.font = '24px Arial';\n        ctx.fillText('Sin imagen original', canvas.width / 2, canvas.height / 2 + 40);\n        const fallbackTexture = new THREE.CanvasTexture(canvas);\n        fallbackTexture.minFilter = THREE.LinearFilter;\n        fallbackTexture.magFilter = THREE.LinearFilter;\n        const material = new THREE.MeshBasicMaterial({\n          map: fallbackTexture,\n          side: THREE.DoubleSide\n        });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n        setImageLoaded(true);\n      });\n    };\n\n    // Cargar imagen\n    loadImage();\n\n    // Función de animación\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Manejar cambio de tamaño de ventana\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (containerRef.current && renderer.domElement) {\n        containerRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gyroscope-test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate('/hub'),\n      children: \"\\u2190 Volver al Hub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyroscope-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vista 360\\xB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Solo navegaci\\xF3n con mouse/touch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"gyroscope-viewer\",\n      style: {\n        width: '100%',\n        height: 'calc(100vh - 200px)',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      children: !imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cargando imagen 360\\xB0...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gyroscope-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instrucciones:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Usa el mouse o el dedo para arrastrar y explorar la imagen 360\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Usa la rueda del mouse para hacer zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(GyroscopeTest, \"yojh0hIB4jV5/fRN2n02XdV5eHs=\", false, function () {\n  return [useNavigate];\n});\n_c = GyroscopeTest;\nexport default GyroscopeTest;\nvar _c;\n$RefreshReg$(_c, \"GyroscopeTest\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","THREE","OrbitControls","jsxDEV","_jsxDEV","GyroscopeTest","_s","navigate","containerRef","cameraRef","sceneRef","rendererRef","controlsRef","imageLoaded","setImageLoaded","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","current","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","Math","min","devicePixelRatio","appendChild","domElement","controls","enableDamping","dampingFactor","enableZoom","minDistance","maxDistance","geometry","SphereGeometry","scale","textureLoader","TextureLoader","loadImage","load","texture","minFilter","LinearFilter","magFilter","generateMipmaps","colorSpace","undefined","LinearSRGBColorSpace","material","MeshBasicMaterial","map","side","DoubleSide","sphere","Mesh","add","error","canvas","document","createElement","width","height","ctx","getContext","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","font","textAlign","fillText","fallbackTexture","CanvasTexture","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","dispose","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","overflow","_c","$RefreshReg$"],"sources":["D:/respaldo jose/PROJECTS_V0/hub360/frontend/src/components/Viewer/GyroscopeTest.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport './GyroscopeTest.css';\r\n\r\nfunction GyroscopeTest() {\r\n  const navigate = useNavigate();\r\n  const containerRef = useRef();\r\n  const cameraRef = useRef();\r\n  const sceneRef = useRef();\r\n  const rendererRef = useRef();\r\n  const controlsRef = useRef();\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Configuración de Three.js\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.set(0, 0, 0.1);\r\n    cameraRef.current = camera;\r\n    sceneRef.current = scene;\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    rendererRef.current = renderer;\r\n    \r\n    if (containerRef.current) {\r\n      containerRef.current.appendChild(renderer.domElement);\r\n    }\r\n\r\n    // Controles de órbita para desktop\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.enableZoom = true;\r\n    controls.minDistance = 0.05;\r\n    controls.maxDistance = 2.5;\r\n    controlsRef.current = controls;\r\n\r\n    // Cargar imagen 360\r\n    const geometry = new THREE.SphereGeometry(500, 128, 96);\r\n    geometry.scale(-1, 1, 1);\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n    \r\n    // Función para cargar imagen con fallback\r\n    const loadImage = () => {\r\n      textureLoader.load(\r\n        '/brandshop1.jpg',\r\n        texture => {\r\n          texture.minFilter = THREE.LinearFilter;\r\n          texture.magFilter = THREE.LinearFilter;\r\n          texture.generateMipmaps = false;\r\n          \r\n          if (texture.colorSpace !== undefined && THREE.LinearSRGBColorSpace) {\r\n            texture.colorSpace = THREE.LinearSRGBColorSpace;\r\n          }\r\n          \r\n          const material = new THREE.MeshBasicMaterial({\r\n            map: texture,\r\n            side: THREE.DoubleSide\r\n          });\r\n          \r\n          const sphere = new THREE.Mesh(geometry, material);\r\n          scene.add(sphere);\r\n          setImageLoaded(true);\r\n        },\r\n        undefined,\r\n        error => {\r\n          // Crear una textura procedural como fallback\r\n          const canvas = document.createElement('canvas');\r\n          canvas.width = 1024;\r\n          canvas.height = 512;\r\n          const ctx = canvas.getContext('2d');\r\n          \r\n          // Crear un patrón de gradiente para simular una imagen 360\r\n          const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n          gradient.addColorStop(0, '#1e40af');\r\n          gradient.addColorStop(0.25, '#38bdf8');\r\n          gradient.addColorStop(0.5, '#818cf8');\r\n          gradient.addColorStop(0.75, '#38bdf8');\r\n          gradient.addColorStop(1, '#1e40af');\r\n          \r\n          ctx.fillStyle = gradient;\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n          \r\n          // Agregar texto indicativo\r\n          ctx.fillStyle = 'white';\r\n          ctx.font = '48px Arial';\r\n          ctx.textAlign = 'center';\r\n          ctx.fillText('Vista de Prueba 360°', canvas.width / 2, canvas.height / 2);\r\n          ctx.font = '24px Arial';\r\n          ctx.fillText('Sin imagen original', canvas.width / 2, canvas.height / 2 + 40);\r\n          \r\n          const fallbackTexture = new THREE.CanvasTexture(canvas);\r\n          fallbackTexture.minFilter = THREE.LinearFilter;\r\n          fallbackTexture.magFilter = THREE.LinearFilter;\r\n          \r\n          const material = new THREE.MeshBasicMaterial({\r\n            map: fallbackTexture,\r\n            side: THREE.DoubleSide\r\n          });\r\n          \r\n          const sphere = new THREE.Mesh(geometry, material);\r\n          scene.add(sphere);\r\n          setImageLoaded(true);\r\n        }\r\n      );\r\n    };\r\n\r\n    // Cargar imagen\r\n    loadImage();\r\n\r\n    // Función de animación\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Manejar cambio de tamaño de ventana\r\n    const handleResize = () => {\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      camera.aspect = width / height;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(width, height);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (containerRef.current && renderer.domElement) {\r\n        containerRef.current.removeChild(renderer.domElement);\r\n      }\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"gyroscope-test-container\">\r\n      <button className=\"back-button\" onClick={() => navigate('/hub')}>\r\n        ← Volver al Hub\r\n      </button>\r\n      \r\n      <div className=\"gyroscope-header\">\r\n        <h2>Vista 360°</h2>\r\n        <div className=\"device-info\">\r\n          <p>Solo navegación con mouse/touch</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div \r\n        ref={containerRef} \r\n        className=\"gyroscope-viewer\"\r\n        style={{ \r\n          width: '100%', \r\n          height: 'calc(100vh - 200px)',\r\n          position: 'relative',\r\n          overflow: 'hidden'\r\n        }}\r\n      >\r\n        {!imageLoaded && (\r\n          <div className=\"loading-indicator\">\r\n            <div className=\"spinner\"></div>\r\n            <p>Cargando imagen 360°...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"gyroscope-instructions\">\r\n        <div>\r\n          <h3>Instrucciones:</h3>\r\n          <p>• Usa el mouse o el dedo para arrastrar y explorar la imagen 360°</p>\r\n          <p>• Usa la rueda del mouse para hacer zoom</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GyroscopeTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}